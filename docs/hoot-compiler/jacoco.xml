<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="hoot-compiler"><sessioninfo id="Mac-1638875980792.local-efbd2534" start="1638876087340" dump="1638876100866"/><package name="Hoot/Compiler/Scopes"><class name="Hoot/Compiler/Scopes/File" sourcefilename="File.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentScope" desc="(LHoot/Runtime/Behaviors/Scope;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentScope" desc="()LHoot/Runtime/Behaviors/Scope;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentFile" desc="()LHoot/Compiler/Scopes/File;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(LHoot/Runtime/Emissions/Item;)LHoot/Compiler/Scopes/File;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeCurrent" desc="()LHoot/Runtime/Behaviors/Scope;" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peers" desc="()Ljava/util/Map;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peers" desc="(Ljava/util/Map;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addStandardImports" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRuntimeLibraryImports" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addSmalltalkLibraryImports" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addHootLibraryImports" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheComments" desc="(Ljava/util/List;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComment" desc="(I)LHoot/Compiler/Notes/Comment;" line="115"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importFace" desc="(LHoot/Compiler/Expressions/Import;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceImports" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importedTypeNamed" desc="(LHoot/Runtime/Faces/Named;)LHoot/Runtime/Names/TypeName;" line="122"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="importedFaces" desc="()Ljava/util/Map;" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importAllFaces" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullName" desc="(Ljava/lang/String;)V" line="132"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="initialName" desc="()Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullName" desc="()Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceScope" desc="()LHoot/Compiler/Scopes/Face;" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="facialScope" desc="()LHoot/Runtime/Behaviors/Scope;" line="140"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceName" desc="()Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="faceNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Typified;" line="144"><counter type="INSTRUCTION" missed="5" covered="78"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportFace" desc="(LHoot/Runtime/Behaviors/Typified;Ljava/lang/String;Ljava/lang/String;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenStream" desc="()Lorg/antlr/v4/runtime/TokenStream;" line="180"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFile" desc="()Z" line="181"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestLevel" desc="()I" line="182"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notice" desc="()Ljava/lang/String;" line="183"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="facePackage" desc="()LHoot/Runtime/Maps/Package;" line="186"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageName" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packagePathname" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namePackage" desc="(Ljava/lang/String;)V" line="189"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needsMagnitudes" desc="()Z" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needsCollections" desc="()Z" line="192"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceFilename" desc="()Ljava/lang/String;" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetFilename" desc="()Ljava/lang/String;" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceFile" desc="()Ljava/io/File;" line="198"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetFile" desc="()Ljava/io/File;" line="204"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveTypeNamed" desc="(LHoot/Runtime/Faces/Named;)LHoot/Runtime/Names/TypeName;" line="228"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPackage" desc="()LHoot/Runtime/Emissions/Emission;" line="238"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitImports" desc="()Ljava/util/List;" line="239"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitScope" desc="()LHoot/Runtime/Emissions/Emission;" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLibraryScope" desc="()LHoot/Runtime/Emissions/Emission;" line="241"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitImports$5" desc="(LHoot/Compiler/Expressions/Import;)LHoot/Runtime/Emissions/Emission;" line="239"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$faceNamed$4" desc="(LHoot/Runtime/Behaviors/Typified;)LHoot/Runtime/Behaviors/Typified;" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$importAllFaces$3" desc="(LHoot/Compiler/Expressions/Import;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$peers$2" desc="(LHoot/Runtime/Faces/UnitFile;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$1" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Compiler/Scopes/File;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/String;Ljava/lang/String;)LHoot/Runtime/Faces/UnitFile;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="109" covered="542"/><counter type="BRANCH" missed="25" covered="27"/><counter type="LINE" missed="17" covered="112"/><counter type="COMPLEXITY" missed="30" covered="55"/><counter type="METHOD" missed="11" covered="48"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/BlockContent" sourcefilename="BlockContent.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Behaviors/Scope;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyBlock" desc="()LHoot/Compiler/Scopes/BlockContent;" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/util/List;LHoot/Compiler/Expressions/Expression;I)LHoot/Compiler/Scopes/BlockContent;" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countPeriods" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countStatements" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="statements" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstStatement" desc="()LHoot/Compiler/Expressions/Statement;" line="38"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalStatement" desc="()LHoot/Compiler/Expressions/Statement;" line="40"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(LHoot/Compiler/Expressions/Statement;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(LHoot/Compiler/Expressions/Construct;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNested" desc="()Z" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nestLevel" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acquireStatements" desc="()LHoot/Compiler/Scopes/BlockContent;" line="55"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addResult" desc="(LHoot/Compiler/Expressions/Expression;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsFrame" desc="()Z" line="118"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitFinalValue" desc="()LHoot/Runtime/Emissions/Emission;" line="128"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitConstruct" desc="()LHoot/Runtime/Emissions/Emission;" line="132"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitStatements" desc="()Ljava/util/List;" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitStatements$6" desc="(LHoot/Compiler/Expressions/Statement;)LHoot/Runtime/Emissions/Emission;" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitStatements$5" desc="(LHoot/Compiler/Expressions/Statement;)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$needsFrame$4" desc="(LHoot/Compiler/Expressions/Statement;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addResult$3" desc="(LHoot/Compiler/Expressions/Expression;)LHoot/Compiler/Expressions/Statement;" line="94"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$acquireStatements$2" desc="(LHoot/Compiler/Expressions/Statement;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsExit$1" desc="(LHoot/Compiler/Expressions/Statement;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$clean$0" desc="(LHoot/Compiler/Expressions/Statement;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="301"/><counter type="BRANCH" missed="7" covered="49"/><counter type="LINE" missed="3" covered="62"/><counter type="COMPLEXITY" missed="11" covered="47"/><counter type="METHOD" missed="4" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/ClassSignature" sourcefilename="ClassSignature.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Notes/DetailedType;LHoot/Runtime/Notes/DetailedType;LHoot/Runtime/Notes/TypeList;LHoot/Runtime/Notes/NoteList;Ljava/lang/String;Ljava/lang/String;)LHoot/Compiler/Scopes/ClassSignature;" line="26"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaSignature" desc="()LHoot/Compiler/Scopes/ClassSignature;" line="37"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="48"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(LHoot/Compiler/Scopes/ClassSignature;)Z" line="51"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="comment" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtypeKeyword" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="types" desc="()LHoot/Runtime/Notes/TypeList;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaFaces" desc="()LHoot/Runtime/Emissions/Emission;" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faces" desc="()LHoot/Runtime/Emissions/Emission;" line="65"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subType" desc="()LHoot/Runtime/Notes/DetailedType;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subclassName" desc="()Ljava/lang/String;" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="details" desc="()LHoot/Runtime/Notes/TypeList;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortName" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullName" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseName" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superType" desc="()LHoot/Runtime/Notes/DetailedType;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superHash" desc="()I" line="82"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuperclass" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoHeritage" desc="()Z" line="84"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="superClass" desc="()LHoot/Runtime/Emissions/Emission;" line="86"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superMetaClass" desc="()LHoot/Runtime/Emissions/Emission;" line="88"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superMetaType" desc="()LHoot/Runtime/Notes/DetailedType;" line="94"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="simpleHeritage" desc="()Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeHeritage" desc="()Ljava/util/List;" line="114"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceScope" desc="()LHoot/Compiler/Scopes/Face;" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Typified;" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superior" desc="()LHoot/Runtime/Behaviors/Typified;" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decor" desc="()Ljava/util/List;" line="139"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaDecorators" desc="()LHoot/Runtime/Emissions/Emission;" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorators" desc="()LHoot/Runtime/Emissions/Emission;" line="141"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="knownTypes" desc="()Ljava/util/List;" line="144"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="150"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetaItem" desc="()LHoot/Runtime/Emissions/Emission;" line="152"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitClassSignature" desc="()LHoot/Runtime/Emissions/Emission;" line="155"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNilSubclassSignature" desc="()LHoot/Runtime/Emissions/Emission;" line="158"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$typeHeritage$2" desc="(Ljava/util/Set;LHoot/Runtime/Behaviors/Typified;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$typeHeritage$1" desc="(Ljava/util/Set;LHoot/Runtime/Notes/DetailedType;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$equals$0" desc="(LHoot/Compiler/Scopes/ClassSignature;)Z" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="100" covered="373"/><counter type="BRANCH" missed="25" covered="21"/><counter type="LINE" missed="9" covered="74"/><counter type="COMPLEXITY" missed="25" covered="40"/><counter type="METHOD" missed="8" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/ClosureCompiler" sourcefilename="ClosureCompiler.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="28"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockReader" desc="()Ljava/io/StringReader;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createInputStream" desc="()Lorg/antlr/v4/runtime/CharStream;" line="40"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createParser" desc="()LHoot/Compiler/HootParser;" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createLexer" desc="()Lorg/antlr/v4/runtime/TokenSource;" line="42"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tokenStream" desc="()Lorg/antlr/v4/runtime/CommonTokenStream;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tokenStream" desc="(Lorg/antlr/v4/runtime/CommonTokenStream;)Lorg/antlr/v4/runtime/CommonTokenStream;" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createTokenStream" desc="()Lorg/antlr/v4/runtime/TokenStream;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compiledCode" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseClosure" desc="(Ljava/lang/String;)V" line="53"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="()Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="importedTypes" desc="()[Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildEvaluator" desc="()Lorg/codehaus/janino/ScriptEvaluator;" line="77"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$importedTypes$4" desc="(LHoot/Compiler/Expressions/Import;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$importedTypes$3" desc="(LHoot/Compiler/Expressions/Import;)Z" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$evaluate$2" desc="()V" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$evaluate$1" desc="()Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseClosure$0" desc="()V" line="55"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Scopes/Face" sourcefilename="Face.java"><method name="&lt;init&gt;" desc="(LHoot/Runtime/Behaviors/Scope;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="34"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(LHoot/Compiler/Scopes/Face;)Z" line="35"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="37"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clean" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentFace" desc="()LHoot/Compiler/Scopes/Face;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(LHoot/Runtime/Emissions/Item;)LHoot/Compiler/Scopes/Face;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeCurrent" desc="()LHoot/Compiler/Scopes/Face;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="named" desc="(LHoot/Runtime/Names/TypeName;)LHoot/Runtime/Behaviors/Typified;" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="named" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Typified;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/lang/Class;)LHoot/Runtime/Behaviors/Typified;" line="60"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="faceNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Typified;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseMetaclassName" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metafaceExists" desc="(Ljava/lang/String;)Z" line="103"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaclassName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metatypeName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSigned" desc="()Z" line="151"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="()LHoot/Runtime/Emissions/NamedItem;" line="153"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="157"><counter type="INSTRUCTION" missed="1" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseName" desc="()Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signedDescription" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="169"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortName" desc="()Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullName" desc="()Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="knownTypes" desc="()Ljava/util/List;" line="175"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="memberScopes" desc="()Ljava/util/List;" line="181"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addScope" desc="(LHoot/Compiler/Scopes/ProtocolScope;)V" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodCount" desc="()I" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methods" desc="()Ljava/util/List;" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanMethods" desc="()V" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMethodMap" desc="()V" line="195"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanedMethods" desc="()Ljava/util/List;" line="209"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(LHoot/Runtime/Behaviors/Typified;)LHoot/Compiler/Scopes/Face;" line="225"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="$class" desc="()LHoot/Runtime/Behaviors/Typified;" line="229"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMetaface" desc="()Z" line="230"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMetaface" desc="()LHoot/Compiler/Scopes/Face;" line="231"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaFace" desc="()LHoot/Compiler/Scopes/Face;" line="232"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaFace" desc="(LHoot/Compiler/Scopes/Face;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectFace" desc="(Ljava/lang/String;)LHoot/Compiler/Scopes/Face;" line="240"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseFace" desc="()LHoot/Runtime/Behaviors/Typified;" line="246"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="superclass" desc="()LHoot/Runtime/Behaviors/Typified;" line="247"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveClass" desc="()Ljava/lang/Class;" line="248"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaFaceType" desc="()Ljava/lang/String;" line="250"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comment" desc="()Ljava/lang/String;" line="252"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="facialScope" desc="()LHoot/Runtime/Behaviors/Scope;" line="253"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethod" desc="(LHoot/Compiler/Scopes/Method;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMethod" desc="()V" line="269"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPackaged" desc="()Z" line="273"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasElementaryBase" desc="()Z" line="282"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInnard" desc="()Z" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAbstract" desc="()Z" line="287"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInterface" desc="()Z" line="288"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFacial" desc="()Z" line="289"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReflective" desc="()Z" line="290"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolves" desc="(LHoot/Runtime/Faces/Named;)Z" line="291"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClassType" desc="()Z" line="293"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMetaface" desc="()Z" line="294"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMetaclassBase" desc="()Z" line="295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="className" desc="()Ljava/lang/String;" line="297"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaName" desc="()Ljava/lang/String;" line="298"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultName" desc="()Ljava/lang/String;" line="299"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestLevel" desc="()I" line="301"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasHeritage" desc="()Z" line="302"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNoHeritage" desc="()Z" line="303"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="simpleHeritage" desc="()Ljava/util/List;" line="305"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeHeritage" desc="()Ljava/util/List;" line="306"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="basePackageName" desc="()Ljava/lang/String;" line="308"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fullBaseName" desc="()Ljava/lang/String;" line="309"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeClass" desc="()Ljava/lang/Class;" line="311"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseClass" desc="()Ljava/lang/Class;" line="312"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseMirror" desc="()LHoot/Runtime/Behaviors/Mirror;" line="313"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="packageName" desc="()Ljava/lang/String;" line="315"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typePackage" desc="()LHoot/Runtime/Maps/Package;" line="316"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeFace" desc="()LHoot/Compiler/Scopes/Face;" line="317"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeName" desc="()Ljava/lang/String;" line="318"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeMirror" desc="()LHoot/Runtime/Behaviors/Mirror;" line="319"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaInstance" desc="()Ljava/lang/String;" line="322"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qualify" desc="(Ljava/lang/String;)Ljava/lang/String;" line="335"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildHeritageMap" desc="()V" line="344"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchSignatures" desc="(LHoot/Runtime/Behaviors/Signed;)Ljava/lang/String;" line="355"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveMethod" desc="(LHoot/Compiler/Scopes/Method;)LHoot/Runtime/Behaviors/Signed;" line="379"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSigned" desc="(LHoot/Runtime/Behaviors/Signed;)LHoot/Runtime/Behaviors/Signed;" line="396"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSigned" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Signed;" line="403"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overridenBy" desc="(LHoot/Runtime/Behaviors/Signed;)Z" line="406"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overridenBy" desc="(LHoot/Compiler/Scopes/Method;)Z" line="408"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitMethods" desc="()Ljava/util/List;" line="418"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLocalVariables" desc="()Ljava/util/List;" line="420"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitScope" desc="()LHoot/Runtime/Emissions/Emission;" line="423"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitScope" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="426"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitSignature" desc="()LHoot/Runtime/Emissions/Emission;" line="429"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetaFace" desc="()LHoot/Runtime/Emissions/Emission;" line="432"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportBuildingWrapper" desc="(LHoot/Compiler/Scopes/Method;)V" line="473"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportAlreadyWrapped" desc="(LHoot/Compiler/Scopes/Method;)V" line="477"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportExtraneousWrapper" desc="(LHoot/Compiler/Scopes/Method;)V" line="481"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitLocalVariables$11" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="420"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitMethods$10" desc="(LHoot/Compiler/Scopes/Method;)LHoot/Runtime/Emissions/Emission;" line="418"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildHeritageMap$9" desc="(LHoot/Runtime/Behaviors/Typified;)V" line="349"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$buildHeritageMap$8" desc="(LHoot/Runtime/Behaviors/Typified;)LHoot/Runtime/Behaviors/Typified;" line="346"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$fullBaseName$7" desc="(LHoot/Runtime/Behaviors/Typified;)Ljava/lang/String;" line="309"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cleanedMethods$6" desc="(Ljava/util/ArrayList;LHoot/Compiler/Scopes/Method;)V" line="213"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cleanedMethods$5" desc="(LHoot/Compiler/Scopes/Method;)Z" line="211"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$buildMethodMap$4" desc="(LHoot/Compiler/Scopes/Method;)V" line="198"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cleanMethods$3" desc="(LHoot/Compiler/Scopes/Method;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$baseName$2" desc="(LHoot/Runtime/Emissions/NamedItem;)Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$1" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Compiler/Scopes/Face;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$equals$0" desc="(LHoot/Compiler/Scopes/Face;)Z" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="578" covered="480"/><counter type="BRANCH" missed="87" covered="39"/><counter type="LINE" missed="110" covered="96"/><counter type="COMPLEXITY" missed="100" covered="73"/><counter type="METHOD" missed="52" covered="58"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/Method" sourcefilename="Method.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Compiler/Scopes/Face;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noteOverride" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsOverrideNote" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeCurrent" desc="()LHoot/Compiler/Scopes/Method;" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentMethod" desc="()LHoot/Compiler/Scopes/Method;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(LHoot/Runtime/Emissions/Item;)LHoot/Compiler/Scopes/Method;" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="(LHoot/Compiler/Expressions/Construct;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceName" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scopeID" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="signature" desc="(LHoot/Compiler/Scopes/BasicSignature;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVoid" desc="()Z" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMethod" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbstract" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstructor" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitive" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="method" desc="()LHoot/Compiler/Scopes/Method;" line="57"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="qualify" desc="(Ljava/lang/String;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesStandardOverride" desc="()Z" line="72"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchSignature" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchErasure" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortSignature" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullSignature" desc="()Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="erasedSignature" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentErasures" desc="()Ljava/util/List;" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentSignatures" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNotes" desc="()LHoot/Runtime/Emissions/Emission;" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitScope" desc="()LHoot/Runtime/Emissions/Emission;" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsFrame" desc="()Z" line="89"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyIf" desc="(Z)Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitExitVariables" desc="()Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitConstruct" desc="()LHoot/Runtime/Emissions/Emission;" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitSignature" desc="()LHoot/Runtime/Emissions/Emission;" line="108"><counter type="INSTRUCTION" missed="3" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMethodContents" desc="()LHoot/Runtime/Emissions/Emission;" line="112"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitSimple" desc="()LHoot/Runtime/Emissions/Emission;" line="126"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAbstract" desc="()LHoot/Runtime/Emissions/Emission;" line="130"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitExitVariables$5" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitExitVariables$4" desc="(LHoot/Runtime/Values/Variable;)Z" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$argumentSignatures$3" desc="(LHoot/Runtime/Values/Variable;)Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$argumentErasures$2" desc="(LHoot/Runtime/Values/Variable;)Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$matchesStandardOverride$1" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$from$0" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Compiler/Scopes/Method;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="70" covered="307"/><counter type="BRANCH" missed="14" covered="26"/><counter type="LINE" missed="12" covered="45"/><counter type="COMPLEXITY" missed="17" covered="48"/><counter type="METHOD" missed="8" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/TokenCompiler" sourcefilename="TokenCompiler.java"><method name="&lt;init&gt;" desc="(LHoot/Compiler/Scopes/File;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenFilepath" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInputStream" desc="()Lorg/antlr/v4/runtime/CharStream;" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createParser" desc="()LHoot/Compiler/HootParser;" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLexer" desc="()Lorg/antlr/v4/runtime/TokenSource;" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="popScope" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenStream" desc="()Lorg/antlr/v4/runtime/CommonTokenStream;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tokenStream" desc="(Lorg/antlr/v4/runtime/CommonTokenStream;)Lorg/antlr/v4/runtime/CommonTokenStream;" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTokenStream" desc="()Lorg/antlr/v4/runtime/TokenStream;" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="()Z" line="37"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wasParsed" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notParsed" desc="()Z" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseUnit" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseTokens" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCode" desc="()V" line="73"><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCodeIn" desc="(Ljava/io/File;)V" line="82"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportMissingSource" desc="()V" line="91"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$parseTokens$1" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseTokens$0" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="180"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="9" covered="36"/><counter type="COMPLEXITY" missed="7" covered="19"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/TypeSignature" sourcefilename="TypeSignature.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterface" desc="()Z" line="21"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Notes/TypeList;LHoot/Runtime/Notes/DetailedType;LHoot/Runtime/Notes/NoteList;Ljava/lang/String;Ljava/lang/String;)LHoot/Compiler/Scopes/TypeSignature;" line="26"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaSignature" desc="()LHoot/Compiler/Scopes/TypeSignature;" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="45"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(LHoot/Compiler/Scopes/TypeSignature;)Z" line="48"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="comment" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtypeKeyword" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subType" desc="()LHoot/Runtime/Notes/DetailedType;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="details" desc="()LHoot/Runtime/Notes/TypeList;" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtypeName" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="heritage" desc="()LHoot/Runtime/Notes/TypeList;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoHeritage" desc="()Z" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeHeritage" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Behaviors/Typified;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceScope" desc="()LHoot/Compiler/Scopes/Face;" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullName" desc="()Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="baseName" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decor" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="knownTypes" desc="()Ljava/util/List;" line="89"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decorators" desc="()LHoot/Runtime/Emissions/Emission;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitDetails" desc="()LHoot/Runtime/Emissions/Emission;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaDecorators" desc="()LHoot/Runtime/Emissions/Emission;" line="97"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitHeritage" desc="()LHoot/Runtime/Emissions/Emission;" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="101"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetaHeritage" desc="()LHoot/Runtime/Emissions/Emission;" line="103"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetaItem" desc="()LHoot/Runtime/Emissions/Emission;" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$typeHeritage$1" desc="(Ljava/util/Set;LHoot/Runtime/Notes/DetailedType;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$equals$0" desc="(LHoot/Compiler/Scopes/TypeSignature;)Z" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="205"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="9" covered="43"/><counter type="COMPLEXITY" missed="14" covered="27"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/UnarySignature" sourcefilename="UnarySignature.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Notes/DetailedType;Ljava/lang/String;)LHoot/Compiler/Scopes/UnarySignature;" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eraseTypes" desc="()LHoot/Compiler/Scopes/BasicSignature;" line="24"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/ClosureSource" sourcefilename="ClosureSource.java"><method name="wrapErasedCall" desc="()LHoot/Runtime/Emissions/Emission;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitClosureValue" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="18"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitErasedVoid" desc="(Ljava/lang/String;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="21"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitErasedCall" desc="(Ljava/lang/String;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitErasedBlock" desc="(Ljava/lang/String;Ljava/util/List;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="27"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOnlyTry" desc="(Ljava/util/List;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="30"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOnlyCatch" desc="(Ljava/util/List;Ljava/util/List;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="33"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOnlyEnsure" desc="(Ljava/util/List;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="36"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitNewClosure" desc="(Ljava/lang/String;ILjava/util/List;)LHoot/Runtime/Emissions/Emission;" line="39"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closureType" desc="(Z)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="9" covered="1"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/BasicSignature" sourcefilename="BasicSignature.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="args" desc="()LHoot/Runtime/Values/Table;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arguments" desc="()Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLocal" desc="(Ljava/lang/String;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="localNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Values/Variable;" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultType" desc="()LHoot/Runtime/Notes/DetailedType;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsDefaultType" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasResultType" desc="()Z" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsVoid" desc="()Z" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notes" desc="()LHoot/Runtime/Notes/NoteList;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eraseTypes" desc="()LHoot/Compiler/Scopes/BasicSignature;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitDecorators" desc="()LHoot/Runtime/Emissions/Emission;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasResult" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultTypeName" desc="()Ljava/lang/String;" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultType" desc="()LHoot/Runtime/Notes/DetailedType;" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitDetails" desc="()LHoot/Runtime/Emissions/Emission;" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedType" desc="()LHoot/Runtime/Notes/DetailedType;" line="56"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitResultType" desc="()LHoot/Runtime/Emissions/Emission;" line="60"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeDetails" desc="(Ljava/util/Map;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeDetails" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeDetails" desc="(LHoot/Runtime/Notes/DetailedType;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitGenericDetails" desc="()Ljava/util/List;" line="90"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="100"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitGenericDetails$4" desc="(Ljava/util/List;Ljava/lang/String;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mergeDetails$3" desc="(LHoot/Runtime/Values/Variable;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mergeDetails$2" desc="(LHoot/Runtime/Values/Variable;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$mergeDetails$1" desc="(Ljava/util/Map;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitArguments$0" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="261"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="4" covered="39"/><counter type="METHOD" missed="2" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/KeywordSignature" sourcefilename="KeywordSignature.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyNiladic" desc="()LHoot/Compiler/Scopes/KeywordSignature;" line="20"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(LHoot/Runtime/Notes/DetailedType;Ljava/util/List;)LHoot/Compiler/Scopes/KeywordSignature;" line="22"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Notes/DetailedType;Ljava/util/List;Ljava/util/List;Ljava/util/List;)LHoot/Compiler/Scopes/KeywordSignature;" line="28"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eraseTypes" desc="()LHoot/Compiler/Scopes/BasicSignature;" line="40"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$eraseTypes$0" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Values/Variable;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/ProtocolScope" sourcefilename="ProtocolScope.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classMembersCode" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="89"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Scopes/Nest" sourcefilename="Nest.java"><method name="&lt;init&gt;" desc="(LHoot/Compiler/Scopes/Block;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyBlock" desc="()LHoot/Compiler/Scopes/Nest;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nestedBlock" desc="()LHoot/Compiler/Scopes/Block;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNest" desc="()Z" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsExit" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOptimized" desc="()LHoot/Runtime/Emissions/Emission;" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/Block" sourcefilename="Block.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Behaviors/Scope;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="currentBlock" desc="()LHoot/Compiler/Scopes/Block;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(LHoot/Runtime/Emissions/Item;)LHoot/Compiler/Scopes/Block;" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyBlock" desc="()LHoot/Compiler/Scopes/Block;" line="30"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clean" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeCurrent" desc="()LHoot/Compiler/Scopes/Block;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkScope" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlock" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestLevel" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNested" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNest" desc="()LHoot/Compiler/Scopes/Nest;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="faceType" desc="()LHoot/Runtime/Behaviors/Typified;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualify" desc="(Ljava/lang/String;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arguments" desc="()Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentNames" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentCount" desc="()I" line="54"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argumentTypes" desc="()Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="argumentTypeNames" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="content" desc="()LHoot/Compiler/Scopes/BlockContent;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="content" desc="(LHoot/Compiler/Scopes/BlockContent;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="()LHoot/Compiler/Scopes/BasicSignature;" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSigned" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signature" desc="(LHoot/Compiler/Scopes/BasicSignature;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="description" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLocal" desc="(Ljava/lang/String;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="localNamed" desc="(Ljava/lang/String;)LHoot/Runtime/Values/Variable;" line="72"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedType" desc="()LHoot/Runtime/Notes/DetailedType;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needsFrame" desc="()Z" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matches" desc="(LHoot/Compiler/Scopes/Block;)Z" line="79"><counter type="INSTRUCTION" missed="1" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstructor" desc="()Z" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="returnsVoid" desc="()Z" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="receiverNeedsTerm" desc="()Z" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVoidedContext" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentBlock" desc="()LHoot/Compiler/Scopes/Block;" line="88"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parentExpression" desc="()LHoot/Compiler/Expressions/Expression;" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParentExpression" desc="()Z" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expressionHasResult" desc="()Z" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expressionExitsMethod" desc="()Z" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="needsPredicateWrapper" desc="()Z" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closureType" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitClosure" desc="()LHoot/Runtime/Emissions/Emission;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOptimized" desc="()LHoot/Runtime/Emissions/Emission;" line="100"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCastedArguments" desc="()Ljava/util/List;" line="103"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitBlockArguments" desc="()Ljava/util/List;" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitArguments" desc="(Z)Ljava/util/List;" line="108"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitErasedArguments" desc="()Ljava/util/List;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitArgumentNames" desc="()Ljava/util/List;" line="111"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitResultType" desc="()LHoot/Runtime/Emissions/Emission;" line="116"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitSignature" desc="()LHoot/Runtime/Emissions/Emission;" line="120"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitFinalValue" desc="()LHoot/Runtime/Emissions/Emission;" line="124"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitContents" desc="()LHoot/Runtime/Emissions/Emission;" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueMessage" desc="()Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockName" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsErasure" desc="()Z" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsErasure" desc="(I)Z" line="133"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitErasedCall" desc="()LHoot/Runtime/Emissions/Emission;" line="139"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitErasure" desc="()LHoot/Runtime/Emissions/Emission;" line="144"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitTry" desc="()LHoot/Runtime/Emissions/Emission;" line="146"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitCatch" desc="()LHoot/Runtime/Emissions/Emission;" line="147"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitFinally" desc="()LHoot/Runtime/Emissions/Emission;" line="148"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitNewClosure" desc="()LHoot/Runtime/Emissions/Emission;" line="149"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitArgumentNames$11" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitErasedArguments$10" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="109"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitArguments$9" desc="(ZLHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="108"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitBlockArguments$8" desc="([ILHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="105"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitCastedArguments$7" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$needsPredicateWrapper$6" desc="(LHoot/Compiler/Expressions/Expression;)Z" line="94"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expressionExitsMethod$5" desc="(LHoot/Compiler/Expressions/Expression;)Z" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$expressionHasResult$4" desc="(LHoot/Compiler/Expressions/Expression;)Z" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$argumentTypeNames$3" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Names/TypeName;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$argumentTypes$2" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Behaviors/Typified;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$argumentNames$1" desc="(LHoot/Runtime/Values/Variable;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$0" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Compiler/Scopes/Block;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="216" covered="405"/><counter type="BRANCH" missed="18" covered="42"/><counter type="LINE" missed="32" covered="52"/><counter type="COMPLEXITY" missed="46" covered="63"/><counter type="METHOD" missed="31" covered="48"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/BinarySignature" sourcefilename="BinarySignature.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Notes/DetailedType;Ljava/util/List;LHoot/Runtime/Names/Operator;)LHoot/Compiler/Scopes/BinarySignature;" line="20"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eraseTypes" desc="()LHoot/Compiler/Scopes/BasicSignature;" line="29"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$eraseTypes$0" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Values/Variable;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="24"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Scopes/ScopeSource" sourcefilename="ScopeSource.java"><method name="file" desc="()LHoot/Compiler/Scopes/File;" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="face" desc="()LHoot/Compiler/Scopes/Face;" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variable" desc="()LHoot/Runtime/Values/Variable;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="method" desc="()LHoot/Compiler/Scopes/Method;" line="21"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="block" desc="()LHoot/Compiler/Scopes/Block;" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentBlock" desc="()LHoot/Compiler/Scopes/Block;" line="23"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOptimizedBlock" desc="(LHoot/Runtime/Emissions/Emission;ILjava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="26"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitBlockSignature" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="31"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitMethodSignature" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMethodScope" desc="(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="39"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMethodEmpty" desc="(Ljava/lang/String;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNilSubclassSignature" desc="(LHoot/Runtime/Emissions/Emission;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="48"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitClassSignature" desc="(LHoot/Runtime/Emissions/Emission;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitTypeSignature" desc="(LHoot/Runtime/Emissions/Emission;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLibraryScope" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLibraryType" desc="(LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;Ljava/util/List;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="64"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetaclass" desc="(Ljava/lang/String;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="73"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMetatype" desc="(LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="194"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BlockContent.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="10" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="2" ci="9" mb="1" cb="1"/><line nr="40" mi="2" ci="12" mb="1" cb="1"/><line nr="42" mi="0" ci="8" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="15" mb="1" cb="3"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="1" cb="3"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="4"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="4"/><line nr="94" mi="3" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="2" ci="3" mb="1" cb="1"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="4"/><line nr="123" mi="0" ci="10" mb="1" cb="3"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="10" mb="0" cb="2"/><line nr="137" mi="0" ci="16" mb="0" cb="2"/><counter type="INSTRUCTION" missed="21" covered="301"/><counter type="BRANCH" missed="7" covered="49"/><counter type="LINE" missed="3" covered="62"/><counter type="COMPLEXITY" missed="11" covered="47"/><counter type="METHOD" missed="4" covered="26"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnarySignature.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Face.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="2" ci="8" mb="1" cb="1"/><line nr="35" mi="16" ci="0" mb="6" cb="0"/><line nr="37" mi="27" ci="0" mb="6" cb="0"/><line nr="39" mi="7" ci="0" mb="2" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="8" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="2" cb="0"/><line nr="151" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="3" ci="3" mb="1" cb="1"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="1" ci="8" mb="1" cb="1"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="3" ci="8" mb="1" cb="1"/><line nr="169" mi="0" ci="11" mb="0" cb="2"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="12" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="1" cb="1"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="2"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="11" ci="0" mb="2" cb="0"/><line nr="212" mi="1" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="2" cb="0"/><line nr="214" mi="10" ci="0" mb="0" cb="0"/><line nr="217" mi="9" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="2"/><line nr="231" mi="0" ci="12" mb="1" cb="1"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="2"/><line nr="241" mi="3" ci="3" mb="1" cb="1"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="2"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="6" ci="0" mb="0" cb="0"/><line nr="270" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="8" ci="0" mb="2" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="287" mi="10" ci="0" mb="4" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="11" ci="0" mb="2" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="10" mb="0" cb="2"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="18" ci="0" mb="4" cb="0"/><line nr="303" mi="18" ci="0" mb="4" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="4" ci="0" mb="0" cb="0"/><line nr="309" mi="8" ci="0" mb="0" cb="0"/><line nr="311" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="11" mb="0" cb="2"/><line nr="318" mi="0" ci="11" mb="0" cb="2"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="2" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="6" ci="0" mb="0" cb="0"/><line nr="335" mi="8" ci="0" mb="4" cb="0"/><line nr="336" mi="5" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="5" ci="0" mb="2" cb="0"/><line nr="345" mi="8" ci="0" mb="0" cb="0"/><line nr="346" mi="7" ci="0" mb="0" cb="0"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="349" mi="7" ci="0" mb="0" cb="0"/><line nr="350" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="2" ci="0" mb="0" cb="0"/><line nr="356" mi="3" ci="0" mb="0" cb="0"/><line nr="357" mi="5" ci="0" mb="2" cb="0"/><line nr="358" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="5" ci="0" mb="2" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="2" cb="0"/><line nr="368" mi="12" ci="0" mb="2" cb="0"/><line nr="369" mi="4" ci="0" mb="2" cb="0"/><line nr="370" mi="2" ci="0" mb="0" cb="0"/><line nr="372" mi="1" ci="0" mb="0" cb="0"/><line nr="375" mi="2" ci="0" mb="0" cb="0"/><line nr="379" mi="4" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="2" cb="0"/><line nr="381" mi="6" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="10" ci="0" mb="2" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="2" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="10" mb="0" cb="2"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="5" ci="0" mb="0" cb="0"/><line nr="408" mi="3" ci="0" mb="0" cb="0"/><line nr="409" mi="4" ci="0" mb="2" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="2" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="418" mi="0" ci="8" mb="0" cb="0"/><line nr="420" mi="0" ci="12" mb="0" cb="0"/><line nr="423" mi="12" ci="0" mb="0" cb="0"/><line nr="426" mi="0" ci="12" mb="0" cb="0"/><line nr="429" mi="5" ci="7" mb="1" cb="1"/><line nr="432" mi="2" ci="3" mb="1" cb="1"/><line nr="433" mi="0" ci="3" mb="0" cb="2"/><line nr="434" mi="0" ci="3" mb="0" cb="2"/><line nr="435" mi="0" ci="9" mb="0" cb="0"/><line nr="438" mi="0" ci="10" mb="0" cb="0"/><line nr="439" mi="0" ci="8" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="473" mi="17" ci="0" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="477" mi="17" ci="0" mb="0" cb="0"/><line nr="478" mi="1" ci="0" mb="0" cb="0"/><line nr="481" mi="17" ci="0" mb="0" cb="0"/><line nr="482" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="578" covered="480"/><counter type="BRANCH" missed="87" covered="39"/><counter type="LINE" missed="110" covered="96"/><counter type="COMPLEXITY" missed="100" covered="73"/><counter type="METHOD" missed="52" covered="58"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClosureCompiler.java"><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="18" ci="0" mb="2" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="44" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinarySignature.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="24"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TokenCompiler.java"><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="2" cb="2"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="1" ci="2" mb="1" cb="1"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="180"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="9" covered="36"/><counter type="COMPLEXITY" missed="7" covered="19"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClosureSource.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="10" ci="0" mb="0" cb="0"/><line nr="24" mi="10" ci="0" mb="0" cb="0"/><line nr="27" mi="13" ci="0" mb="0" cb="0"/><line nr="30" mi="9" ci="0" mb="0" cb="0"/><line nr="33" mi="12" ci="0" mb="0" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="39" mi="17" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="2"/><counter type="INSTRUCTION" missed="89" covered="6"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="9" covered="1"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="File.java"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="1" cb="1"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="1" cb="1"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="1" cb="1"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="1" cb="1"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="6" ci="9" mb="2" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="14" ci="0" mb="2" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="1" cb="3"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="2"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="1" cb="1"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="2"/><line nr="160" mi="8" ci="2" mb="1" cb="1"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="29" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="19" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="192" mi="12" ci="0" mb="4" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="2" ci="2" mb="1" cb="1"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="2" cb="0"/><line nr="206" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="2" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="2" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="542"/><counter type="BRANCH" missed="25" covered="27"/><counter type="LINE" missed="17" covered="112"/><counter type="COMPLEXITY" missed="30" covered="55"/><counter type="METHOD" missed="11" covered="48"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Block.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="3" ci="5" mb="1" cb="1"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="1" cb="3"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="2" ci="8" mb="1" cb="1"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="8" mb="1" cb="1"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="1" cb="1"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="4"/><line nr="72" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="10" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="1" ci="22" mb="2" cb="2"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="4"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="15" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="18" mb="1" cb="3"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="22" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="4"/><line nr="117" mi="5" ci="8" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="2" cb="0"/><line nr="122" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="10" ci="0" mb="2" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="16" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="2" ci="3" mb="1" cb="1"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="7" mb="1" cb="1"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="10" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="216" covered="405"/><counter type="BRANCH" missed="18" covered="42"/><counter type="LINE" missed="32" covered="52"/><counter type="COMPLEXITY" missed="46" covered="63"/><counter type="METHOD" missed="31" covered="48"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BasicSignature.java"><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="2" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="1" cb="3"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="4"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="261"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="4" covered="39"/><counter type="METHOD" missed="2" covered="29"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Nest.java"><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassSignature.java"><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="2" ci="4" mb="1" cb="1"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="27" ci="0" mb="6" cb="0"/><line nr="51" mi="8" ci="0" mb="2" cb="0"/><line nr="52" mi="10" ci="0" mb="4" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="2" ci="8" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="1" ci="8" mb="1" cb="1"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="11" ci="0" mb="4" cb="0"/><line nr="86" mi="2" ci="8" mb="1" cb="1"/><line nr="88" mi="3" ci="3" mb="1" cb="1"/><line nr="89" mi="0" ci="9" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="2" ci="3" mb="1" cb="1"/><line nr="95" mi="0" ci="8" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="2" ci="3" mb="1" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="1" cb="1"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="2" ci="7" mb="1" cb="1"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="15" mb="0" cb="0"/><line nr="158" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="100" covered="373"/><counter type="BRANCH" missed="25" covered="21"/><counter type="LINE" missed="9" covered="74"/><counter type="COMPLEXITY" missed="25" covered="40"/><counter type="METHOD" missed="8" covered="34"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeSignature.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="27" ci="0" mb="6" cb="0"/><line nr="48" mi="8" ci="0" mb="2" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="2"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="2"/><line nr="101" mi="0" ci="13" mb="0" cb="0"/><line nr="103" mi="1" ci="8" mb="1" cb="1"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="205"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="9" covered="43"/><counter type="COMPLEXITY" missed="14" covered="27"/><counter type="METHOD" missed="8" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Method.java"><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="2"/><line nr="31" mi="0" ci="10" mb="0" cb="4"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="3" ci="8" mb="1" cb="1"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="12" ci="0" mb="4" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="16" mb="1" cb="3"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="9" ci="0" mb="2" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="1" ci="12" mb="1" cb="3"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="3" ci="3" mb="1" cb="1"/><line nr="109" mi="0" ci="16" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="307"/><counter type="BRANCH" missed="14" covered="26"/><counter type="LINE" missed="12" covered="45"/><counter type="COMPLEXITY" missed="17" covered="48"/><counter type="METHOD" missed="8" covered="37"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProtocolScope.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ScopeSource.java"><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="10" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="11" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="194"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="4" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KeywordSignature.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="15" mb="0" cb="2"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1603" covered="3397"/><counter type="BRANCH" missed="200" covered="244"/><counter type="LINE" missed="274" covered="634"/><counter type="COMPLEXITY" missed="301" covered="444"/><counter type="METHOD" missed="171" covered="352"/><counter type="CLASS" missed="2" covered="15"/></package><package name="Hoot/Compiler/Notes"><class name="Hoot/Compiler/Notes/Comment" sourcefilename="Comment.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/Token;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/antlr/v4/runtime/Token;)LHoot/Compiler/Notes/Comment;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTokenIndex" desc="()I" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getComment" desc="(I)LHoot/Compiler/Notes/Comment;" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildComments" desc="(Lorg/antlr/v4/runtime/CommonTokenStream;)Ljava/util/List;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findCommentTokens" desc="(Lorg/antlr/v4/runtime/CommonTokenStream;)Ljava/util/List;" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComment" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findComment" desc="(Lorg/antlr/v4/runtime/Token;Lorg/antlr/v4/runtime/Token;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="36" covered="9"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="10" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildComments$1" desc="(Lorg/antlr/v4/runtime/Token;)LHoot/Compiler/Notes/Comment;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$buildComments$0" desc="(Lorg/antlr/v4/runtime/Token;)Z" line="30"><counter type="INSTRUCTION" missed="1" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="51"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Notes/KeywordNote" sourcefilename="KeywordNote.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)LHoot/Compiler/Notes/KeywordNote;" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nakedValues" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nakeds" desc="(Ljava/util/List;)LHoot/Compiler/Notes/KeywordNote;" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nakedCount" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedValues" desc="()Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="(Ljava/util/List;)LHoot/Compiler/Notes/KeywordNote;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedCount" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="34"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNamedValues" desc="()LHoot/Runtime/Emissions/Emission;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNakedValues" desc="()LHoot/Runtime/Emissions/Emission;" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notice" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitNakedValues$1" desc="(LHoot/Compiler/Constants/NamedValue;)LHoot/Runtime/Emissions/Emission;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitNamedValues$0" desc="(LHoot/Compiler/Constants/NamedValue;)LHoot/Runtime/Emissions/Emission;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="90"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KeywordNote.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="6" ci="3" mb="1" cb="1"/><line nr="35" mi="0" ci="9" mb="0" cb="2"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="7" mb="2" cb="2"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="90"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comment.java"><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="1" ci="14" mb="1" cb="1"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="11" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="1" cb="1"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="2" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="2" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="7" ci="0" mb="4" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="51"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="10" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="73" covered="141"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="14" covered="25"/><counter type="COMPLEXITY" missed="15" covered="22"/><counter type="METHOD" missed="5" covered="21"/><counter type="CLASS" missed="0" covered="2"/></package><package name="Hoot/Compiler/Expressions"><class name="Hoot/Compiler/Expressions/Expression" sourcefilename="Expression.java"><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="container" desc="(LHoot/Runtime/Emissions/Item;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frameNew" desc="()LHoot/Compiler/Expressions/Expression;" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/Formula;LHoot/Compiler/Expressions/KeywordMessage;[LHoot/Compiler/Expressions/Message;)LHoot/Compiler/Expressions/Expression;" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/Formula;LHoot/Compiler/Expressions/KeywordMessage;Ljava/util/List;)LHoot/Compiler/Expressions/Expression;" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withTerm" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Compiler/Expressions/Expression;" line="45"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formula" desc="()LHoot/Compiler/Expressions/Formula;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="receiver" desc="()LHoot/Runtime/Values/Operand;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryTerm" desc="()LHoot/Compiler/Expressions/UnarySequence;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeResolver" desc="()LHoot/Runtime/Names/TypeName;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cleanFormula" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keywordMessage" desc="()LHoot/Compiler/Expressions/KeywordMessage;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMessage" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanMessage" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeLoopy" desc="(LHoot/Compiler/Expressions/Formula;)V" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cascadedMessages" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasCascades" desc="()Z" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanCascades" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEvaluated" desc="()Z" line="69"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeEvaluated" desc="()LHoot/Compiler/Expressions/Expression;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAssigned" desc="()Z" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="makeAssigned" desc="()LHoot/Runtime/Values/Operand;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExit" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="79"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeExit" desc="()LHoot/Compiler/Expressions/Expression;" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="producesPredicate" desc="()Z" line="92"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFramed" desc="()Z" line="99"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentExits" desc="()Z" line="102"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPredicateTerm" desc="(LHoot/Compiler/Scopes/Block;)Z" line="105"><counter type="INSTRUCTION" missed="12" covered="8"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPredicateArgument" desc="(LHoot/Compiler/Scopes/Block;)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyValue" desc="()Z" line="113"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstructed" desc="()Z" line="116"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="answersYourself" desc="()Z" line="119"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableIsPrimary" desc="()Z" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockIsPrimary" desc="()Z" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfIsPrimary" desc="()Z" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsException" desc="()Z" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optimizesAlternatives" desc="()Z" line="125"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasTypeNewPrimary" desc="()Z" line="127"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasTypeNewMessage" desc="()Z" line="128"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="startsWithTypeNew" desc="()Z" line="129"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitResult" desc="()LHoot/Runtime/Emissions/Emission;" line="132"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitSimply" desc="()LHoot/Runtime/Emissions/Emission;" line="136"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMessages" desc="()LHoot/Runtime/Emissions/Emission;" line="139"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="142"><counter type="INSTRUCTION" missed="13" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCascades" desc="()LHoot/Runtime/Emissions/Emission;" line="157"><counter type="INSTRUCTION" missed="123" covered="22"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="23" covered="4"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAllCascades" desc="()Ljava/util/List;" line="204"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCascades" desc="(LHoot/Compiler/Expressions/Formula;)Ljava/util/List;" line="206"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitCascades$3" desc="(LHoot/Compiler/Expressions/Message;)LHoot/Runtime/Emissions/Emission;" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$producesPredicate$2" desc="(LHoot/Compiler/Expressions/Message;)Z" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$containsExit$1" desc="(LHoot/Compiler/Expressions/Message;)Z" line="79"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cleanCascades$0" desc="(LHoot/Compiler/Expressions/Message;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="306" covered="357"/><counter type="BRANCH" missed="74" covered="44"/><counter type="LINE" missed="43" covered="66"/><counter type="COMPLEXITY" missed="59" covered="54"/><counter type="METHOD" missed="16" covered="38"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Import" sourcefilename="Import.java"><method name="&lt;init&gt;" desc="(LHoot/Compiler/Scopes/File;LHoot/Runtime/Names/Global;Ljava/lang/String;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(LHoot/Compiler/Scopes/File;LHoot/Runtime/Names/TypeName;)LHoot/Compiler/Expressions/Import;" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(LHoot/Compiler/Scopes/File;LHoot/Runtime/Names/Global;Ljava/lang/String;)LHoot/Compiler/Expressions/Import;" line="23"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runtimeFaces" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runtimeFuncs" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runtimeValues" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runtimeBlocks" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="smalltalkBlocks" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="smalltalkCore" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hootBehaviors" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hootMagnitudes" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hootCollections" desc="(LHoot/Compiler/Scopes/File;)LHoot/Compiler/Expressions/Import;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="globalName" desc="()LHoot/Runtime/Names/Global;" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importedName" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importSelector" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importsOne" desc="()Z" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importsAll" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importsStatics" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withLowerCase" desc="(Z)LHoot/Compiler/Expressions/Import;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="names" desc="()Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namesWith" desc="(Ljava/lang/String;)Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="78"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToFaces" desc="(Ljava/util/Map;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addToFaces$1" desc="(Ljava/util/Map;LHoot/Runtime/Names/TypeName;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$namesWith$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="330"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="5" covered="28"/><counter type="METHOD" missed="1" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Construct" sourcefilename="Construct.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Constants/Constant;Ljava/util/List;)LHoot/Compiler/Expressions/Construct;" line="20"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstruct" desc="()Z" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="25"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/UnarySequence" sourcefilename="UnarySequence.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yourself" desc="()LHoot/Compiler/Expressions/UnarySequence;" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frame" desc="()LHoot/Compiler/Expressions/UnarySequence;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitFrom" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Compiler/Expressions/UnarySequence;" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;)LHoot/Compiler/Expressions/UnarySequence;" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/Primary;)LHoot/Compiler/Expressions/UnarySequence;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/Primary;[Ljava/lang/String;)LHoot/Compiler/Expressions/UnarySequence;" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/Primary;Ljava/util/List;)LHoot/Compiler/Expressions/UnarySequence;" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectors" desc="()Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noSelectors" desc="()Z" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSelectors" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearSelectors" desc="()V" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countSelectors" desc="()I" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstSelector" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalSelector" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsException" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWith" desc="(Ljava/lang/String;)Z" line="54"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endsWith" desc="(Ljava/lang/String;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="producesPredicate" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryEndsWith" desc="(Ljava/lang/String;)Z" line="61"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLoopy" desc="()Z" line="63"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOnlySelector" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primary" desc="()LHoot/Compiler/Expressions/Primary;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanPrimary" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noPrimary" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrimary" desc="()Z" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="75"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyValue" desc="()Z" line="76"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfIsPrimary" desc="()Z" line="77"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superIsPrimary" desc="()Z" line="78"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryBlock" desc="()LHoot/Compiler/Scopes/Block;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withPrimary" desc="(LHoot/Compiler/Expressions/Primary;)LHoot/Compiler/Expressions/UnarySequence;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeResolver" desc="()LHoot/Runtime/Names/TypeName;" line="87"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isConstructed" desc="()Z" line="89"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsOnlyClass" desc="()Z" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsOnlyYourself" desc="()Z" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsOnly" desc="(Ljava/lang/String;)Z" line="93"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimaryTerm" desc="()LHoot/Runtime/Emissions/Emission;" line="96"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitExpression" desc="()LHoot/Runtime/Emissions/Emission;" line="100"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitMessages" desc="()Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNewPrimary" desc="()LHoot/Runtime/Emissions/Emission;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitTypeNewPrimary" desc="()LHoot/Runtime/Emissions/Emission;" line="105"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="109"><counter type="INSTRUCTION" missed="17" covered="46"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="123"><counter type="INSTRUCTION" missed="15" covered="40"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitClassAccess" desc="()LHoot/Runtime/Emissions/Emission;" line="141"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNewExpression" desc="()LHoot/Runtime/Emissions/Emission;" line="144"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitTypeNewExpression" desc="()LHoot/Runtime/Emissions/Emission;" line="150"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitThrow" desc="()LHoot/Runtime/Emissions/Emission;" line="155"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitThrowItem" desc="()LHoot/Runtime/Emissions/Emission;" line="157"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitMessages$0" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="101"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="145" covered="398"/><counter type="BRANCH" missed="38" covered="54"/><counter type="LINE" missed="18" covered="65"/><counter type="COMPLEXITY" missed="38" covered="60"/><counter type="METHOD" missed="10" covered="42"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Message" sourcefilename="Message.java"><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsPredicate" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selector" desc="()LHoot/Runtime/Names/Selector;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selector" desc="(Ljava/lang/String;)V" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodName" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="description" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="container" desc="(LHoot/Runtime/Emissions/Item;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanOperands" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="75"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveType" desc="()V" line="84"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canOptimizeInvocation" desc="()Z" line="113"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedType" desc="()Ljava/lang/Class;" line="116"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="firstArgument" desc="()LHoot/Runtime/Values/Operand;" line="121"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="finalOperand" desc="()LHoot/Runtime/Values/Operand;" line="122"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="receiver" desc="(LHoot/Runtime/Values/Operand;)V" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeReceiver" desc="()LHoot/Runtime/Values/Operand;" line="126"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceReceiver" desc="(LHoot/Runtime/Values/Operand;)V" line="132"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operandCount" desc="()I" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addOperand" desc="(Ljava/lang/Object;)V" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addOperand" desc="(LHoot/Runtime/Values/Operand;)V" line="139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operands" desc="()Ljava/util/List;" line="140"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOperands" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arguments" desc="()Ljava/util/List;" line="144"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMessage" desc="()Z" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performString" desc="()Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="performedMethodName" desc="()LHoot/Runtime/Emissions/Emission;" line="152"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementaryReceiver" desc="()Z" line="158"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPrimitiveOperation" desc="()Z" line="166"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="170"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitElementary" desc="()LHoot/Runtime/Emissions/Emission;" line="173"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitInvocation" desc="()LHoot/Runtime/Emissions/Emission;" line="176"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPerform" desc="()LHoot/Runtime/Emissions/Emission;" line="179"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="182"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOpPrim" desc="()LHoot/Runtime/Emissions/Emission;" line="185"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOp" desc="()LHoot/Runtime/Emissions/Emission;" line="188"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitCall" desc="()LHoot/Runtime/Emissions/Emission;" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCall" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="191"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitExpression" desc="()LHoot/Runtime/Emissions/Emission;" line="192"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="195"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOptimized" desc="()LHoot/Runtime/Emissions/Emission;" line="198"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitAlternatives" desc="(ZLHoot/Runtime/Values/Operand;LHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="203"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuardedStatement" desc="(ZLHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="208"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuardedStatement" desc="(ZLHoot/Runtime/Values/Operand;LHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="212"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitWhileLoop" desc="(ZLHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="217"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuardedValue" desc="(LHoot/Runtime/Values/Operand;Z)LHoot/Runtime/Emissions/Emission;" line="222"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuarded" desc="(LHoot/Runtime/Values/Operand;Z)LHoot/Runtime/Emissions/Emission;" line="227"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOptimizedBlock" desc="(LHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="230"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitArguments$1" desc="(LHoot/Runtime/Values/Operand;)LHoot/Runtime/Emissions/Emission;" line="182"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$container$0" desc="(LHoot/Runtime/Values/Operand;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="474" covered="141"/><counter type="BRANCH" missed="53" covered="7"/><counter type="LINE" missed="74" covered="29"/><counter type="COMPLEXITY" missed="67" covered="15"/><counter type="METHOD" missed="40" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Formula" sourcefilename="Formula.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/UnarySequence;)LHoot/Compiler/Expressions/Formula;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Compiler/Expressions/UnarySequence;Ljava/util/List;)LHoot/Compiler/Expressions/Formula;" line="24"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frameReference" desc="()LHoot/Compiler/Expressions/Formula;" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyBlock" desc="()LHoot/Compiler/Expressions/Formula;" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryTerm" desc="()LHoot/Compiler/Expressions/UnarySequence;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanPrimary" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ops" desc="()Ljava/util/List;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanOps" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeResolver" desc="()LHoot/Runtime/Names/TypeName;" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="secondaryTerm" desc="()LHoot/Compiler/Expressions/UnarySequence;" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLoopy" desc="()Z" line="47"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfIsPrimary" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyValue" desc="()Z" line="49"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstructed" desc="()Z" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="producesPredicate" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryBlock" desc="()LHoot/Compiler/Scopes/Block;" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operandCode" desc="()LHoot/Runtime/Emissions/Emission;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveCode" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operationsCode" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operators" desc="()Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLoopMessage" desc="()LHoot/Compiler/Expressions/KeywordMessage;" line="63"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="66"><counter type="INSTRUCTION" missed="16" covered="47"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="86"><counter type="INSTRUCTION" missed="7" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$operators$4" desc="(LHoot/Compiler/Expressions/BinaryMessage;)LHoot/Runtime/Names/Operator;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$operationsCode$3" desc="(LHoot/Compiler/Expressions/BinaryMessage;)LHoot/Runtime/Emissions/Emission;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$primitiveCode$2" desc="(LHoot/Compiler/Expressions/BinaryMessage;)LHoot/Runtime/Emissions/Emission;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$containsExit$1" desc="(LHoot/Compiler/Expressions/BinaryMessage;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cleanOps$0" desc="(LHoot/Compiler/Expressions/BinaryMessage;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="58" covered="244"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="7" covered="42"/><counter type="COMPLEXITY" missed="13" covered="34"/><counter type="METHOD" missed="4" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/KeywordMessage" sourcefilename="KeywordMessage.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frameNew" desc="()LHoot/Compiler/Expressions/KeywordMessage;" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;[LHoot/Compiler/Expressions/Formula;)LHoot/Compiler/Expressions/KeywordMessage;" line="28"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/util/List;Ljava/util/List;Ljava/util/List;)LHoot/Compiler/Expressions/KeywordMessage;" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialize" desc="()LHoot/Compiler/Expressions/KeywordMessage;" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="heads" desc="()Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tails" desc="()Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodKeyword" desc="()LHoot/Runtime/Names/Keyword;" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodName" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsStatement" desc="()Z" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsExit" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsPrimitiveCall" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accessesElement" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrimitiveBlock" desc="()Z" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLogical" desc="()Z" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPredicated" desc="()Z" line="59"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExclusivelyDone" desc="()Z" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTypeNew" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handlesCurtailment" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageExits" desc="()Z" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formulas" desc="()Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanTerms" desc="()V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryBlockExits" desc="()Z" line="68"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="takesPredicate" desc="(LHoot/Compiler/Scopes/Block;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formulaPrims" desc="()Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formulaCodes" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryBlockValues" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primaryBlockContents" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryTermCode" desc="()LHoot/Runtime/Emissions/Emission;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primaryBlockContent" desc="()LHoot/Runtime/Emissions/Emission;" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="secondaryBlockContent" desc="()LHoot/Runtime/Emissions/Emission;" line="81"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCurtailment" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="84"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitExclusivelyDo" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Compiler/Scopes/Block;)LHoot/Runtime/Emissions/Emission;" line="98"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitExclusivelyDoEach" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Values/Variable;LHoot/Compiler/Scopes/Block;)LHoot/Runtime/Emissions/Emission;" line="103"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCode" desc="(Ljava/util/Map;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="106"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitCode" desc="(Ljava/lang/String;[Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="113"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitSingleCode" desc="(Ljava/util/Map;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="116"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitSingleCode" desc="(Ljava/lang/String;[Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="123"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitCodes" desc="(Ljava/util/Map;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="126"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCodes" desc="(Ljava/util/Map;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="133"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCodes" desc="(Ljava/util/Map;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;[LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="136"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCodes" desc="(Ljava/util/Map;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="139"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCodes" desc="(Ljava/lang/String;[Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="142"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitsAlternative" desc="()Z" line="158"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitAlternatives" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitAlternatives" desc="(LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="164"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="168"><counter type="INSTRUCTION" missed="20" covered="9"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCall" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="175"><counter type="INSTRUCTION" missed="16" covered="38"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitive" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="188"><counter type="INSTRUCTION" missed="6" covered="55"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitValue" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="201"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitGuard" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitExitBlock" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="205"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitiveBlock" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="208"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitiveCall" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="211"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCurtailedBlocks" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="214"><counter type="INSTRUCTION" missed="24" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$primaryBlockContents$6" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$primaryBlockValues$5" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="76"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$formulaCodes$4" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$formulaPrims$3" desc="(LHoot/Compiler/Expressions/Formula;)LHoot/Runtime/Emissions/Emission;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$takesPredicate$2" desc="(LHoot/Compiler/Scopes/Block;LHoot/Compiler/Expressions/Formula;)Z" line="71"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cleanTerms$1" desc="(LHoot/Compiler/Expressions/Formula;)V" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$containsExit$0" desc="(LHoot/Compiler/Expressions/Formula;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="228"><counter type="INSTRUCTION" missed="0" covered="431"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="323" covered="958"/><counter type="BRANCH" missed="26" covered="36"/><counter type="LINE" missed="37" covered="137"/><counter type="COMPLEXITY" missed="39" covered="57"/><counter type="METHOD" missed="19" covered="46"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Statement" sourcefilename="Statement.java"><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/Item;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Values/Operand;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Values/Operand;)LHoot/Compiler/Expressions/Statement;" line="21"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstruct" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExit" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResult" desc="()Z" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFramed" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentProducesPredicate" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="producesPredicate" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsException" desc="()Z" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeResult" desc="()LHoot/Compiler/Expressions/Statement;" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitValue" desc="()LHoot/Runtime/Emissions/Emission;" line="38"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitStatement" desc="()LHoot/Runtime/Emissions/Emission;" line="54"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitResult" desc="()LHoot/Runtime/Emissions/Emission;" line="63"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="71"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parentProducesPredicate$1" desc="(LHoot/Compiler/Expressions/Statement;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$isFramed$0" desc="(LHoot/Compiler/Scopes/Method;)Z" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="175"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="6" covered="26"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/MessageSource" sourcefilename="MessageSource.java"><method name="emitTrueGuard" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitFalseGuard" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitClosureValue" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="18"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitAlternatives" desc="(LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="21"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuardedBlock" desc="(LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="25"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitGuardedPair" desc="(LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="28"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitWhileLoop" desc="(LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="32"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitExclusively" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitExclusively" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperation" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCall" desc="(Ljava/lang/String;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPerform" desc="(LHoot/Runtime/Emissions/Emission;Ljava/lang/String;LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="47"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitConstruct" desc="(LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitTypeNew" desc="(LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNew" desc="(LHoot/Runtime/Emissions/Emission;Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitNewArray" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPath" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitThrow" desc="(LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitThrowSelf" desc="()LHoot/Runtime/Emissions/Emission;" line="63"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitAssignedCascades" desc="(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="68"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitExitCascades" desc="(Ljava/util/List;Ljava/lang/String;ZZ)LHoot/Runtime/Emissions/Emission;" line="71"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitSelfCascades" desc="(Ljava/util/List;Ljava/lang/String;ZZ)LHoot/Runtime/Emissions/Emission;" line="74"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitCascades" desc="(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="78"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="137" covered="102"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="13" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/Primary" sourcefilename="Primary.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Values/Operand;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Values/Operand;)LHoot/Compiler/Expressions/Primary;" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frameGlobal" desc="()LHoot/Compiler/Expressions/Primary;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clean" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="item" desc="(LHoot/Runtime/Values/Operand;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variable" desc="()LHoot/Compiler/Constants/LiteralName;" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nest" desc="()LHoot/Compiler/Scopes/Nest;" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="block" desc="()LHoot/Compiler/Scopes/Block;" line="33"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expression" desc="()LHoot/Compiler/Expressions/Expression;" line="34"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeResolver" desc="()LHoot/Runtime/Names/TypeName;" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isBlock" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="producesPredicate" desc="()Z" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasOnlyValue" desc="()Z" line="42"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfIsPrimary" desc="()Z" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLiteralName" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGlobal" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isName" desc="()Z" line="47"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSelf" desc="()Z" line="48"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSuper" desc="()Z" line="49"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpression" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlock" desc="(LHoot/Compiler/Scopes/Block;)Z" line="51"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="114"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="19" covered="20"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Expressions/BinaryMessage" sourcefilename="BinaryMessage.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Names/Operator;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(LHoot/Runtime/Names/Operator;LHoot/Compiler/Expressions/Formula;)LHoot/Compiler/Expressions/BinaryMessage;" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operator" desc="()LHoot/Runtime/Names/Operator;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binaryOpName" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodName" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsExit" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAssignment" desc="()Z" line="27"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitArguments" desc="()Ljava/util/List;" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitPrimitiveOperation" desc="()LHoot/Runtime/Emissions/Emission;" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Primary.java"><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="1" ci="8" mb="1" cb="1"/><line nr="34" mi="9" ci="0" mb="2" cb="0"/><line nr="36" mi="1" ci="8" mb="1" cb="1"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="9" mb="2" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="1" ci="9" mb="2" cb="2"/><line nr="48" mi="11" ci="0" mb="4" cb="0"/><line nr="49" mi="11" ci="0" mb="4" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="1" ci="12" mb="2" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="114"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="6" covered="20"/><counter type="COMPLEXITY" missed="19" covered="20"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Construct.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Statement.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="21" mi="2" ci="7" mb="1" cb="1"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="2"/><line nr="38" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="0" ci="6" mb="0" cb="4"/><line nr="41" mi="0" ci="6" mb="2" cb="2"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="1" cb="1"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="175"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="6" covered="26"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnarySequence.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="2" ci="10" mb="1" cb="3"/><line nr="55" mi="0" ci="12" mb="0" cb="4"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="18" ci="0" mb="6" cb="0"/><line nr="63" mi="2" ci="11" mb="1" cb="3"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="1" cb="3"/><line nr="76" mi="1" ci="13" mb="3" cb="3"/><line nr="77" mi="0" ci="11" mb="1" cb="3"/><line nr="78" mi="11" ci="0" mb="4" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="10" ci="0" mb="2" cb="0"/><line nr="89" mi="13" ci="0" mb="6" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="13" mb="0" cb="4"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="2" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="2"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="3" ci="4" mb="1" cb="1"/><line nr="114" mi="5" ci="4" mb="1" cb="1"/><line nr="116" mi="3" ci="4" mb="1" cb="1"/><line nr="117" mi="3" ci="4" mb="1" cb="1"/><line nr="119" mi="3" ci="11" mb="1" cb="1"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="3" mb="1" cb="1"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="131" mi="3" ci="4" mb="1" cb="1"/><line nr="132" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="3" ci="4" mb="1" cb="1"/><line nr="135" mi="3" ci="4" mb="1" cb="1"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="6" mb="1" cb="1"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="145" covered="398"/><counter type="BRANCH" missed="38" covered="54"/><counter type="LINE" missed="18" covered="65"/><counter type="COMPLEXITY" missed="38" covered="60"/><counter type="METHOD" missed="10" covered="42"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Import.java"><line nr="21" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="16" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="16" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="16" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="16" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="12" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="4" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="7" ci="5" mb="1" cb="1"/><line nr="78" mi="6" ci="9" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="1" cb="1"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="330"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="5" covered="28"/><counter type="METHOD" missed="1" covered="25"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MessageSource.java"><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="9" ci="0" mb="0" cb="0"/><line nr="28" mi="8" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="9" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="15" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="19" ci="0" mb="0" cb="0"/><line nr="71" mi="15" ci="0" mb="4" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="3" ci="12" mb="2" cb="2"/><line nr="78" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="102"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="15" covered="11"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="13" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryMessage.java"><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="1" cb="3"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Formula.java"><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="2" ci="10" mb="1" cb="3"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="1" ci="11" mb="2" cb="2"/><line nr="50" mi="12" ci="0" mb="4" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="1" cb="3"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="11" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="1" cb="1"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="1" cb="1"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="244"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="7" covered="42"/><counter type="COMPLEXITY" missed="13" covered="34"/><counter type="METHOD" missed="4" covered="27"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Expression.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="3" ci="3" mb="1" cb="1"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="10" ci="0" mb="4" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="10" ci="3" mb="3" cb="1"/><line nr="80" mi="0" ci="9" mb="0" cb="4"/><line nr="81" mi="2" ci="3" mb="1" cb="1"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="10" ci="3" mb="3" cb="1"/><line nr="93" mi="2" ci="7" mb="1" cb="3"/><line nr="94" mi="0" ci="5" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="2" ci="16" mb="2" cb="2"/><line nr="102" mi="0" ci="22" mb="1" cb="3"/><line nr="105" mi="1" ci="7" mb="1" cb="3"/><line nr="106" mi="4" ci="0" mb="2" cb="0"/><line nr="107" mi="7" ci="1" mb="2" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="4"/><line nr="113" mi="14" ci="0" mb="6" cb="0"/><line nr="116" mi="14" ci="0" mb="6" cb="0"/><line nr="119" mi="11" ci="0" mb="4" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="10" ci="0" mb="4" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="13" ci="0" mb="4" cb="0"/><line nr="129" mi="12" ci="0" mb="4" cb="0"/><line nr="132" mi="8" ci="0" mb="2" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="2"/><line nr="136" mi="0" ci="9" mb="0" cb="2"/><line nr="139" mi="0" ci="13" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="10" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="2" cb="0"/><line nr="169" mi="5" ci="0" mb="2" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="10" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="0" mb="2" cb="0"/><line nr="177" mi="3" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="4" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="8" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="10" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="2" cb="0"/><line nr="198" mi="10" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="9" mb="1" cb="1"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="306" covered="357"/><counter type="BRANCH" missed="74" covered="44"/><counter type="LINE" missed="43" covered="66"/><counter type="COMPLEXITY" missed="59" covered="54"/><counter type="METHOD" missed="16" covered="38"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Message.java"><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="28" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="1" cb="3"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="2" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="2" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="2" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="4" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="119" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="13" ci="0" mb="2" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="10" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="5" ci="0" mb="2" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="9" ci="0" mb="4" cb="0"/><line nr="166" mi="16" ci="0" mb="6" cb="0"/><line nr="170" mi="9" ci="0" mb="2" cb="0"/><line nr="173" mi="10" ci="0" mb="2" cb="0"/><line nr="176" mi="9" ci="0" mb="2" cb="0"/><line nr="179" mi="8" ci="0" mb="2" cb="0"/><line nr="180" mi="12" ci="0" mb="0" cb="0"/><line nr="182" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="9" ci="0" mb="0" cb="0"/><line nr="188" mi="9" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="13" ci="0" mb="0" cb="0"/><line nr="195" mi="13" ci="0" mb="0" cb="0"/><line nr="198" mi="8" ci="0" mb="2" cb="0"/><line nr="199" mi="7" ci="0" mb="2" cb="0"/><line nr="200" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="10" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="13" ci="0" mb="0" cb="0"/><line nr="212" mi="11" ci="0" mb="0" cb="0"/><line nr="213" mi="7" ci="0" mb="0" cb="0"/><line nr="217" mi="12" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="2" cb="0"/><line nr="223" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="227" mi="12" ci="0" mb="2" cb="0"/><line nr="230" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="474" covered="141"/><counter type="BRANCH" missed="53" covered="7"/><counter type="LINE" missed="74" covered="29"/><counter type="COMPLEXITY" missed="67" covered="15"/><counter type="METHOD" missed="40" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KeywordMessage.java"><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="6" ci="2" mb="1" cb="1"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="2" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="8" ci="0" mb="0" cb="0"/><line nr="68" mi="15" ci="0" mb="4" cb="0"/><line nr="70" mi="0" ci="15" mb="1" cb="3"/><line nr="71" mi="1" ci="12" mb="2" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="2" cb="0"/><line nr="86" mi="15" ci="0" mb="0" cb="0"/><line nr="87" mi="11" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="11" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="1" cb="1"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="123" mi="13" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="13" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="4"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="2"/><line nr="151" mi="0" ci="12" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="2" ci="10" mb="1" cb="3"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="9" ci="0" mb="2" cb="0"/><line nr="165" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="7" ci="3" mb="1" cb="1"/><line nr="169" mi="0" ci="3" mb="1" cb="1"/><line nr="170" mi="13" ci="0" mb="2" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="4" ci="3" mb="1" cb="1"/><line nr="176" mi="0" ci="6" mb="1" cb="3"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="1" cb="1"/><line nr="179" mi="12" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="12" mb="0" cb="0"/><line nr="188" mi="6" ci="3" mb="1" cb="1"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="9" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="11" mb="0" cb="2"/><line nr="197" mi="0" ci="7" mb="0" cb="2"/><line nr="198" mi="0" ci="12" mb="0" cb="0"/><line nr="201" mi="4" ci="6" mb="1" cb="1"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="205" mi="9" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="1" cb="1"/><line nr="216" mi="0" ci="15" mb="0" cb="0"/><line nr="217" mi="0" ci="11" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="8" ci="0" mb="0" cb="0"/><line nr="222" mi="11" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="14" mb="0" cb="0"/><line nr="276" mi="0" ci="14" mb="0" cb="0"/><line nr="278" mi="0" ci="14" mb="0" cb="0"/><line nr="279" mi="0" ci="14" mb="0" cb="0"/><line nr="281" mi="0" ci="18" mb="0" cb="0"/><line nr="282" mi="0" ci="18" mb="0" cb="0"/><line nr="284" mi="0" ci="10" mb="0" cb="0"/><line nr="285" mi="0" ci="14" mb="0" cb="0"/><line nr="286" mi="0" ci="10" mb="0" cb="0"/><line nr="287" mi="0" ci="14" mb="0" cb="0"/><line nr="288" mi="0" ci="14" mb="0" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="0"/><line nr="291" mi="0" ci="14" mb="0" cb="0"/><line nr="292" mi="0" ci="14" mb="0" cb="0"/><line nr="293" mi="0" ci="14" mb="0" cb="0"/><line nr="295" mi="0" ci="14" mb="0" cb="0"/><line nr="296" mi="0" ci="14" mb="0" cb="0"/><line nr="297" mi="0" ci="18" mb="0" cb="0"/><line nr="298" mi="0" ci="14" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="323" covered="958"/><counter type="BRANCH" missed="26" covered="36"/><counter type="LINE" missed="37" covered="137"/><counter type="COMPLEXITY" missed="39" covered="57"/><counter type="METHOD" missed="19" covered="46"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1535" covered="2924"/><counter type="BRANCH" missed="237" covered="203"/><counter type="LINE" missed="206" covered="468"/><counter type="COMPLEXITY" missed="266" covered="321"/><counter type="METHOD" missed="111" covered="256"/><counter type="CLASS" missed="0" covered="11"/></package><package name="Hoot/Compiler"><class name="Hoot/Compiler/HootParser$MessageContext" sourcefilename="HootParser.java"><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2746"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2750"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="2746"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyFrom" desc="(LHoot/Compiler/HootParser$MessageContext;)V" line="2754"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BinarySignatureContext" sourcefilename="HootParser.java"><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="1228"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binaryOperator" desc="()LHoot/Compiler/HootParser$BinaryOperatorContext;" line="1231"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedArgument" desc="()LHoot/Compiler/HootParser$NamedArgumentContext;" line="1234"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1226"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1239"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1242"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MembersKeywordContext" sourcefilename="HootParser.java"><method name="Members" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4429"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4431"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4433"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4436"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4440"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$KeywordHeadContext" sourcefilename="HootParser.java"><method name="KeywordHead" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4523"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reservedWord" desc="()LHoot/Compiler/HootParser$ReservedWordContext;" line="4525"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4520"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4530"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4533"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4537"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassHeritageContext" sourcefilename="HootParser.java"><method name="Nil" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2873"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="signedType" desc="()LHoot/Compiler/HootParser$SignedTypeContext;" line="2875"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2878"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2880"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2883"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2887"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BlockScopeContext" sourcefilename="HootParser.java"><method name="blockBeg" desc="()LHoot/Compiler/HootParser$BlockBegContext;" line="1517"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockEnd" desc="()LHoot/Compiler/HootParser$BlockEndContext;" line="1520"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockSignature" desc="()LHoot/Compiler/HootParser$BlockSignatureContext;" line="1523"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockContent" desc="()LHoot/Compiler/HootParser$BlockContentContext;" line="1526"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1529"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1531"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1534"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1538"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$SignedTypeContext" sourcefilename="HootParser.java"><method name="globalReference" desc="()LHoot/Compiler/HootParser$GlobalReferenceContext;" line="3724"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedSignature" desc="()LHoot/Compiler/HootParser$DetailedSignatureContext;" line="3727"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3720"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3732"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3735"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3739"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ProtocolScopeContext" sourcefilename="HootParser.java"><method name="protocolSignature" desc="()LHoot/Compiler/HootParser$ProtocolSignatureContext;" line="686"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BlockInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="688"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BlockExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="689"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classMember" desc="()Ljava/util/List;" line="691"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classMember" desc="(I)LHoot/Compiler/HootParser$ClassMemberContext;" line="694"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="683"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="699"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="702"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="706"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootLexer" sourcefilename="HootLexer.java"><method name="getTokenNames" desc="()[Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="119"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/CharStream;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="138"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModeNames" desc="()[Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="144"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="919"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="932"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeNotationContext" sourcefilename="HootParser.java"><method name="Bang" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3528"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()LHoot/Compiler/HootParser$DetailedTypeContext;" line="3530"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Etc" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3532"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3525"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3536"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3539"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3543"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BinaryMessageContext" sourcefilename="HootParser.java"><method name="binaryOperator" desc="()LHoot/Compiler/HootParser$BinaryOperatorContext;" line="2524"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unarySequence" desc="()LHoot/Compiler/HootParser$UnarySequenceContext;" line="2527"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2530"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2532"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2535"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2539"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeScopeContext" sourcefilename="HootParser.java"><method name="typeSignature" desc="()LHoot/Compiler/HootParser$TypeSignatureContext;" line="317"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="protocolScope" desc="()Ljava/util/List;" line="320"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="protocolScope" desc="(I)LHoot/Compiler/HootParser$ProtocolScopeContext;" line="323"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="315"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="328"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="331"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="335"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$GenericTypesContext" sourcefilename="HootParser.java"><method name="Quest" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3596"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()Ljava/util/List;" line="3598"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="(I)LHoot/Compiler/HootParser$DetailedTypeContext;" line="3601"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="()Ljava/util/List;" line="3604"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="(I)LHoot/Compiler/HootParser$KeywordTailContext;" line="3607"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3593"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3612"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3615"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3619"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ValueNameContext" sourcefilename="HootParser.java"><method name="variableName" desc="()LHoot/Compiler/HootParser$VariableNameContext;" line="3927"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="3930"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3923"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3935"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3938"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3942"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MethodBegContext" sourcefilename="HootParser.java"><method name="BlockInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1024"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1026"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1028"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1031"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1035"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$GlobalNameContext" sourcefilename="HootParser.java"><method name="GlobalName" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4027"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4025"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4031"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4034"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4038"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeHeritageContext" sourcefilename="HootParser.java"><method name="Nil" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2929"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()Ljava/util/List;" line="2931"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="(I)LHoot/Compiler/HootParser$DetailedTypeContext;" line="2934"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Comma" desc="()Ljava/util/List;" line="2936"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Comma" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2938"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2928"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2943"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2946"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2950"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$PrimitiveValuesContext" sourcefilename="HootParser.java"><method name="Pound" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4917"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TermInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4918"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TermExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4919"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitive" desc="()Ljava/util/List;" line="4921"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitive" desc="(I)LHoot/Compiler/HootParser$PrimitiveContext;" line="4924"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4916"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4929"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4932"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4936"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$NotationsContext" sourcefilename="HootParser.java"><method name="notation" desc="()Ljava/util/List;" line="3078"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notation" desc="(I)LHoot/Compiler/HootParser$NotationContext;" line="3081"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3076"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3086"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3089"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3093"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$PrimaryContext" sourcefilename="HootParser.java"><method name="nestedTerm" desc="()LHoot/Compiler/HootParser$NestedTermContext;" line="2159"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockScope" desc="()LHoot/Compiler/HootParser$BlockScopeContext;" line="2162"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literal" desc="()LHoot/Compiler/HootParser$LiteralContext;" line="2165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalReference" desc="()LHoot/Compiler/HootParser$GlobalReferenceContext;" line="2168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()LHoot/Compiler/HootParser$VariableNameContext;" line="2171"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2152"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2176"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2183"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ReservedWordContext" sourcefilename="HootParser.java"><method name="Metaclass" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4466"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Subclass" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4467"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Class" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4468"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Metatype" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4469"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Subtype" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4470"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Type" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4471"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Implements" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4472"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Protocol" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4473"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Members" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4474"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ImportOne" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4475"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ImportAll" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4476"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ImportStatics" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4477"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4479"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4481"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4484"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4488"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="62" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="13" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BlockSignatureContext" sourcefilename="HootParser.java"><method name="Bar" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1653"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="1655"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="()Ljava/util/List;" line="1658"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="(I)LHoot/Compiler/HootParser$KeywordTailContext;" line="1661"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedArgument" desc="()Ljava/util/List;" line="1664"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedArgument" desc="(I)LHoot/Compiler/HootParser$NamedArgumentContext;" line="1667"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1650"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1672"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1675"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1679"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$DetailedTypeContext" sourcefilename="HootParser.java"><method name="extendType" desc="()LHoot/Compiler/HootParser$ExtendTypeContext;" line="3470"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="signedType" desc="()LHoot/Compiler/HootParser$SignedTypeContext;" line="3473"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3466"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3478"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3481"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3485"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$NamedValueContext" sourcefilename="HootParser.java"><method name="keywordHead" desc="()LHoot/Compiler/HootParser$KeywordHeadContext;" line="3271"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitive" desc="()LHoot/Compiler/HootParser$PrimitiveContext;" line="3274"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="3277"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3266"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3282"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3285"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3289"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$NamedArgumentContext" sourcefilename="HootParser.java"><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="1464"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="1467"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()LHoot/Compiler/HootParser$VariableNameContext;" line="1470"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1473"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1475"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1478"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1482"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$StatementContext" sourcefilename="HootParser.java"><method name="assignment" desc="()LHoot/Compiler/HootParser$AssignmentContext;" line="1915"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluation" desc="()LHoot/Compiler/HootParser$EvaluationContext;" line="1918"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1921"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1923"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1926"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1930"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MetatypeKeywordContext" sourcefilename="HootParser.java"><method name="Metatype" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4246"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4251"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4255"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$ExtendTypeContext" sourcefilename="HootParser.java"><method name="Extends" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3672"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="3674"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()LHoot/Compiler/HootParser$DetailedTypeContext;" line="3677"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3669"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3682"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3685"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3689"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassKeywordContext" sourcefilename="HootParser.java"><method name="Class" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4281"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4283"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4285"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4288"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4292"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$ProtocolSignatureContext" sourcefilename="HootParser.java"><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="814"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="817"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metaUnary" desc="()LHoot/Compiler/HootParser$MetaUnaryContext;" line="820"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="membersKeyword" desc="()LHoot/Compiler/HootParser$MembersKeywordContext;" line="823"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="808"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="828"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="831"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="835"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ConstructContext" sourcefilename="HootParser.java"><method name="selfish" desc="()LHoot/Compiler/HootParser$SelfishContext;" line="1977"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="()Ljava/util/List;" line="1980"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="(I)LHoot/Compiler/HootParser$KeywordTailContext;" line="1983"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formula" desc="()Ljava/util/List;" line="1986"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formula" desc="(I)LHoot/Compiler/HootParser$FormulaContext;" line="1989"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1973"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1994"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1997"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2001"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$KeywordTailContext" sourcefilename="HootParser.java"><method name="KeywordTail" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4592"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4590"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4596"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4599"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4603"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser" sourcefilename="HootParser.java"><method name="getTokenNames" desc="()[Ljava/lang/String;" line="136"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVocabulary" desc="()Lorg/antlr/v4/runtime/Vocabulary;" line="142"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGrammarFileName" desc="()Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleNames" desc="()[Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSerializedATN" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getATN" desc="()Lorg/antlr/v4/runtime/atn/ATN;" line="155"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/TokenStream;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compilationUnit" desc="()LHoot/Compiler/HootParser$CompilationUnitContext;" line="196"><counter type="INSTRUCTION" missed="14" covered="103"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classScope" desc="()LHoot/Compiler/HootParser$ClassScopeContext;" line="276"><counter type="INSTRUCTION" missed="14" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeScope" desc="()LHoot/Compiler/HootParser$TypeScopeContext;" line="340"><counter type="INSTRUCTION" missed="14" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileImport" desc="()LHoot/Compiler/HootParser$FileImportContext;" line="405"><counter type="INSTRUCTION" missed="22" covered="77"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="importSelector" desc="()LHoot/Compiler/HootParser$ImportSelectorContext;" line="459"><counter type="INSTRUCTION" missed="20" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="caseOption" desc="()LHoot/Compiler/HootParser$CaseOptionContext;" line="502"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeSignature" desc="()LHoot/Compiler/HootParser$TypeSignatureContext;" line="560"><counter type="INSTRUCTION" missed="14" covered="113"/><counter type="LINE" missed="4" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classSignature" desc="()LHoot/Compiler/HootParser$ClassSignatureContext;" line="639"><counter type="INSTRUCTION" missed="14" covered="126"/><counter type="LINE" missed="4" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="protocolScope" desc="()LHoot/Compiler/HootParser$ProtocolScopeContext;" line="711"><counter type="INSTRUCTION" missed="14" covered="94"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classMember" desc="()LHoot/Compiler/HootParser$ClassMemberContext;" line="775"><counter type="INSTRUCTION" missed="14" covered="53"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="protocolSignature" desc="()LHoot/Compiler/HootParser$ProtocolSignatureContext;" line="840"><counter type="INSTRUCTION" missed="15" covered="69"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedVariable" desc="()LHoot/Compiler/HootParser$NamedVariableContext;" line="903"><counter type="INSTRUCTION" missed="14" covered="98"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodScope" desc="()LHoot/Compiler/HootParser$MethodScopeContext;" line="984"><counter type="INSTRUCTION" missed="14" covered="83"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodBeg" desc="()LHoot/Compiler/HootParser$MethodBegContext;" line="1040"><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodEnd" desc="()LHoot/Compiler/HootParser$MethodEndContext;" line="1081"><counter type="INSTRUCTION" missed="14" covered="61"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodSignature" desc="()LHoot/Compiler/HootParser$MethodSignatureContext;" line="1134"><counter type="INSTRUCTION" missed="14" covered="117"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unarySignature" desc="()LHoot/Compiler/HootParser$UnarySignatureContext;" line="1200"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binarySignature" desc="()LHoot/Compiler/HootParser$BinarySignatureContext;" line="1251"><counter type="INSTRUCTION" missed="14" covered="48"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keywordSignature" desc="()LHoot/Compiler/HootParser$KeywordSignatureContext;" line="1300"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="headsAndTails" desc="()LHoot/Compiler/HootParser$HeadsAndTailsContext;" line="1365"><counter type="INSTRUCTION" missed="19" covered="191"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="45"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedArgument" desc="()LHoot/Compiler/HootParser$NamedArgumentContext;" line="1487"><counter type="INSTRUCTION" missed="14" covered="59"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockScope" desc="()LHoot/Compiler/HootParser$BlockScopeContext;" line="1543"><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockBeg" desc="()LHoot/Compiler/HootParser$BlockBegContext;" line="1586"><counter type="INSTRUCTION" missed="14" covered="37"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockEnd" desc="()LHoot/Compiler/HootParser$BlockEndContext;" line="1624"><counter type="INSTRUCTION" missed="14" covered="46"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSignature" desc="()LHoot/Compiler/HootParser$BlockSignatureContext;" line="1684"><counter type="INSTRUCTION" missed="14" covered="122"/><counter type="BRANCH" missed="2" covered="3"/><counter type="LINE" missed="4" covered="27"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockContent" desc="()LHoot/Compiler/HootParser$BlockContentContext;" line="1773"><counter type="INSTRUCTION" missed="34" covered="147"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="8" covered="32"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitResult" desc="()LHoot/Compiler/HootParser$ExitResultContext;" line="1887"><counter type="INSTRUCTION" missed="14" covered="41"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="statement" desc="()LHoot/Compiler/HootParser$StatementContext;" line="1935"><counter type="INSTRUCTION" missed="14" covered="62"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="construct" desc="()LHoot/Compiler/HootParser$ConstructContext;" line="2006"><counter type="INSTRUCTION" missed="53" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="13" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluation" desc="()LHoot/Compiler/HootParser$EvaluationContext;" line="2067"><counter type="INSTRUCTION" missed="14" covered="34"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignment" desc="()LHoot/Compiler/HootParser$AssignmentContext;" line="2122"><counter type="INSTRUCTION" missed="14" covered="79"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primary" desc="()LHoot/Compiler/HootParser$PrimaryContext;" line="2188"><counter type="INSTRUCTION" missed="19" covered="102"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="5" covered="27"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestedTerm" desc="()LHoot/Compiler/HootParser$NestedTermContext;" line="2283"><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="2341"><counter type="INSTRUCTION" missed="14" covered="111"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="23"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formula" desc="()LHoot/Compiler/HootParser$FormulaContext;" line="2416"><counter type="INSTRUCTION" missed="14" covered="88"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unarySequence" desc="()LHoot/Compiler/HootParser$UnarySequenceContext;" line="2482"><counter type="INSTRUCTION" missed="14" covered="88"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binaryMessage" desc="()LHoot/Compiler/HootParser$BinaryMessageContext;" line="2544"><counter type="INSTRUCTION" missed="14" covered="45"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keywordMessage" desc="()LHoot/Compiler/HootParser$KeywordMessageContext;" line="2608"><counter type="INSTRUCTION" missed="19" covered="188"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="5" covered="43"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="messageCascade" desc="()LHoot/Compiler/HootParser$MessageCascadeContext;" line="2723"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="()LHoot/Compiler/HootParser$MessageContext;" line="2805"><counter type="INSTRUCTION" missed="44" covered="76"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="11" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classHeritage" desc="()LHoot/Compiler/HootParser$ClassHeritageContext;" line="2892"><counter type="INSTRUCTION" missed="31" covered="37"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="9" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeHeritage" desc="()LHoot/Compiler/HootParser$TypeHeritageContext;" line="2955"><counter type="INSTRUCTION" missed="19" covered="102"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detailedSignature" desc="()LHoot/Compiler/HootParser$DetailedSignatureContext;" line="3034"><counter type="INSTRUCTION" missed="28" covered="70"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="3098"><counter type="INSTRUCTION" missed="14" covered="77"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notation" desc="()LHoot/Compiler/HootParser$NotationContext;" line="3173"><counter type="INSTRUCTION" missed="20" covered="168"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedValue" desc="()LHoot/Compiler/HootParser$NamedValueContext;" line="3294"><counter type="INSTRUCTION" missed="54" covered="73"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nakedValue" desc="()LHoot/Compiler/HootParser$NakedValueContext;" line="3361"><counter type="INSTRUCTION" missed="45" covered="56"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="10" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeNotes" desc="()LHoot/Compiler/HootParser$TypeNotesContext;" line="3427"><counter type="INSTRUCTION" missed="14" covered="84"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detailedType" desc="()LHoot/Compiler/HootParser$DetailedTypeContext;" line="3490"><counter type="INSTRUCTION" missed="14" covered="63"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="3548"><counter type="INSTRUCTION" missed="14" covered="76"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genericTypes" desc="()LHoot/Compiler/HootParser$GenericTypesContext;" line="3624"><counter type="INSTRUCTION" missed="56" covered="68"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extendType" desc="()LHoot/Compiler/HootParser$ExtendTypeContext;" line="3694"><counter type="INSTRUCTION" missed="14" covered="58"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="signedType" desc="()LHoot/Compiler/HootParser$SignedTypeContext;" line="3744"><counter type="INSTRUCTION" missed="14" covered="44"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literalNil" desc="()LHoot/Compiler/HootParser$LiteralNilContext;" line="3784"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literalSelf" desc="()LHoot/Compiler/HootParser$LiteralSelfContext;" line="3821"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literalSuper" desc="()LHoot/Compiler/HootParser$LiteralSuperContext;" line="3858"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literalBoolean" desc="()LHoot/Compiler/HootParser$LiteralBooleanContext;" line="3896"><counter type="INSTRUCTION" missed="20" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueName" desc="()LHoot/Compiler/HootParser$ValueNameContext;" line="3947"><counter type="INSTRUCTION" missed="19" covered="55"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variableName" desc="()LHoot/Compiler/HootParser$VariableNameContext;" line="4003"><counter type="INSTRUCTION" missed="15" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="4043"><counter type="INSTRUCTION" missed="15" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="globalReference" desc="()LHoot/Compiler/HootParser$GlobalReferenceContext;" line="4089"><counter type="INSTRUCTION" missed="19" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subclassKeyword" desc="()LHoot/Compiler/HootParser$SubclassKeywordContext;" line="4147"><counter type="INSTRUCTION" missed="14" covered="32"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtypeKeyword" desc="()LHoot/Compiler/HootParser$SubtypeKeywordContext;" line="4185"><counter type="INSTRUCTION" missed="14" covered="32"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaclassKeyword" desc="()LHoot/Compiler/HootParser$MetaclassKeywordContext;" line="4223"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="metatypeKeyword" desc="()LHoot/Compiler/HootParser$MetatypeKeywordContext;" line="4260"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classKeyword" desc="()LHoot/Compiler/HootParser$ClassKeywordContext;" line="4297"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeKeyword" desc="()LHoot/Compiler/HootParser$TypeKeywordContext;" line="4334"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="implementsKeyword" desc="()LHoot/Compiler/HootParser$ImplementsKeywordContext;" line="4371"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="protocolKeyword" desc="()LHoot/Compiler/HootParser$ProtocolKeywordContext;" line="4408"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="membersKeyword" desc="()LHoot/Compiler/HootParser$MembersKeywordContext;" line="4445"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reservedWord" desc="()LHoot/Compiler/HootParser$ReservedWordContext;" line="4493"><counter type="INSTRUCTION" missed="20" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keywordHead" desc="()LHoot/Compiler/HootParser$KeywordHeadContext;" line="4542"><counter type="INSTRUCTION" missed="21" covered="74"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keywordTail" desc="()LHoot/Compiler/HootParser$KeywordTailContext;" line="4608"><counter type="INSTRUCTION" missed="15" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="metaUnary" desc="()LHoot/Compiler/HootParser$MetaUnaryContext;" line="4651"><counter type="INSTRUCTION" missed="19" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classUnary" desc="()LHoot/Compiler/HootParser$ClassUnaryContext;" line="4707"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeUnary" desc="()LHoot/Compiler/HootParser$TypeUnaryContext;" line="4744"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unarySelector" desc="()LHoot/Compiler/HootParser$UnarySelectorContext;" line="4786"><counter type="INSTRUCTION" missed="29" covered="72"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binaryOperator" desc="()LHoot/Compiler/HootParser$BinaryOperatorContext;" line="4858"><counter type="INSTRUCTION" missed="20" covered="84"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveValues" desc="()LHoot/Compiler/HootParser$PrimitiveValuesContext;" line="4941"><counter type="INSTRUCTION" missed="113" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementValues" desc="()LHoot/Compiler/HootParser$ElementValuesContext;" line="5010"><counter type="INSTRUCTION" missed="40" covered="73"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="10" covered="16"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementValue" desc="()LHoot/Compiler/HootParser$ElementValueContext;" line="5076"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitive" desc="()LHoot/Compiler/HootParser$PrimitiveContext;" line="5157"><counter type="INSTRUCTION" missed="145" covered="47"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="35" covered="11"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfish" desc="()LHoot/Compiler/HootParser$SelfishContext;" line="5259"><counter type="INSTRUCTION" missed="52" covered="56"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="10" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literal" desc="()LHoot/Compiler/HootParser$LiteralContext;" line="5343"><counter type="INSTRUCTION" missed="130" covered="190"/><counter type="BRANCH" missed="8" covered="9"/><counter type="LINE" missed="30" covered="41"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="radixedNumber" desc="()LHoot/Compiler/HootParser$RadixedNumberContext;" line="5481"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$elementValues$45" desc="(LHoot/Compiler/HootParser$ElementValueContext;)LHoot/Compiler/Constants/Constant;" line="5037"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$primitiveValues$44" desc="(LHoot/Compiler/HootParser$PrimitiveContext;)LHoot/Compiler/Constants/Constant;" line="4968"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$globalReference$43" desc="(LHoot/Compiler/HootParser$GlobalNameContext;)Ljava/lang/String;" line="4116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$genericTypes$42" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="3654"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$typeNotation$41" desc="(LHoot/Compiler/HootParser$TypeNotationContext;LHoot/Compiler/HootParser$DetailedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="3578"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$notation$40" desc="(LHoot/Compiler/HootParser$NamedValueContext;)LHoot/Compiler/Constants/NamedValue;" line="3251"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$notation$39" desc="(LHoot/Compiler/HootParser$NakedValueContext;)LHoot/Compiler/Constants/NamedValue;" line="3251"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$detailedSignature$38" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="3060"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$detailedSignature$37" desc="(LHoot/Compiler/HootParser$GenericTypesContext;)LHoot/Runtime/Notes/TypeList;" line="3060"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keywordMessage$36" desc="(LHoot/Compiler/HootParser$FormulaContext;)LHoot/Compiler/Expressions/Formula;" line="2688"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keywordMessage$35" desc="(LHoot/Compiler/HootParser$KeywordTailContext;)Ljava/lang/String;" line="2688"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$keywordMessage$34" desc="(LHoot/Compiler/HootParser$KeywordHeadContext;)Ljava/lang/String;" line="2688"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$unarySequence$33" desc="(LHoot/Compiler/HootParser$UnarySelectorContext;)Ljava/lang/String;" line="2505"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$formula$32" desc="(LHoot/Compiler/HootParser$BinaryMessageContext;)LHoot/Compiler/Expressions/BinaryMessage;" line="2439"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expression$31" desc="(LHoot/Compiler/HootParser$MessageCascadeContext;)LHoot/Compiler/Expressions/Message;" line="2373"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expression$30" desc="(LHoot/Compiler/HootParser$KeywordMessageContext;)LHoot/Compiler/Expressions/KeywordMessage;" line="2373"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$assignment$29" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="2137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$assignment$28" desc="(LHoot/Compiler/HootParser$ExpressionContext;)LHoot/Compiler/Expressions/Expression;" line="2137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$assignment$27" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="2137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$construct$26" desc="(LHoot/Compiler/HootParser$FormulaContext;)LHoot/Compiler/Expressions/Formula;" line="2032"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$blockContent$25" desc="(LHoot/Compiler/HootParser$ExitResultContext;)LHoot/Compiler/Expressions/Expression;" line="1851"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$blockContent$24" desc="(LHoot/Compiler/HootParser$StatementContext;)LHoot/Compiler/Expressions/Statement;" line="1851"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$blockSignature$23" desc="(LHoot/Compiler/HootParser$NamedArgumentContext;)LHoot/Runtime/Values/Variable;" line="1723"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$blockSignature$22" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="1723"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$namedArgument$21" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="1498"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$namedArgument$20" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="1498"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$headsAndTails$19" desc="(LHoot/Compiler/HootParser$KeywordTailContext;)Ljava/lang/String;" line="1444"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$headsAndTails$18" desc="(LHoot/Compiler/HootParser$KeywordHeadContext;)Ljava/lang/String;" line="1443"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$headsAndTails$17" desc="(LHoot/Compiler/HootParser$NamedArgumentContext;)LHoot/Runtime/Values/Variable;" line="1442"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodSignature$16" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="1160"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodSignature$15" desc="(LHoot/Compiler/HootParser$NamedArgumentContext;)LHoot/Runtime/Values/Variable;" line="1152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodSignature$14" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="1152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodSignature$13" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="1144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodEnd$12" desc="(LHoot/Compiler/HootParser$MethodScopeContext;)LHoot/Compiler/HootParser$ConstructContext;" line="1090"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodEnd$11" desc="(LHoot/Compiler/HootParser$ConstructContext;)LHoot/Compiler/Expressions/Construct;" line="1090"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methodBeg$10" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="1049"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$namedVariable$9" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="928"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$namedVariable$8" desc="(LHoot/Compiler/HootParser$ExpressionContext;)LHoot/Compiler/Expressions/Expression;" line="928"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$namedVariable$7" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)LHoot/Runtime/Notes/DetailedType;" line="928"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$classSignature$6" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="664"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$classSignature$5" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="663"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$classSignature$4" desc="(LHoot/Compiler/HootParser$SignedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="661"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$classSignature$3" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="659"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$typeSignature$2" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="582"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$typeSignature$1" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)LHoot/Runtime/Notes/DetailedType;" line="580"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$typeSignature$0" desc="(LHoot/Compiler/HootParser$NotationContext;)LHoot/Runtime/Notes/Note;" line="578"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="836"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2288" covered="6219"/><counter type="BRANCH" missed="113" covered="165"/><counter type="LINE" missed="583" covered="1201"/><counter type="COMPLEXITY" missed="125" covered="181"/><counter type="METHOD" missed="22" covered="117"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$HeadsAndTailsContext" sourcefilename="HootParser.java"><method name="keywordHead" desc="()Ljava/util/List;" line="1333"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordHead" desc="(I)LHoot/Compiler/HootParser$KeywordHeadContext;" line="1336"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedArgument" desc="()Ljava/util/List;" line="1339"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedArgument" desc="(I)LHoot/Compiler/HootParser$NamedArgumentContext;" line="1342"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="()Ljava/util/List;" line="1345"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="(I)LHoot/Compiler/HootParser$KeywordTailContext;" line="1348"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1327"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1353"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1356"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1360"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassUnaryContext" sourcefilename="HootParser.java"><method name="ClassUnary" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4691"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4693"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4695"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4698"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4702"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassMemberContext" sourcefilename="HootParser.java"><method name="namedVariable" desc="()LHoot/Compiler/HootParser$NamedVariableContext;" line="755"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodScope" desc="()LHoot/Compiler/HootParser$MethodScopeContext;" line="758"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="761"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="763"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="766"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="770"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$SubclassKeywordContext" sourcefilename="HootParser.java"><method name="Subclass" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4135"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4138"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4142"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MethodEndContext" sourcefilename="HootParser.java"><method name="BlockExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1065"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1067"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1069"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1072"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1076"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ElementValuesContext" sourcefilename="HootParser.java"><method name="Pound" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4986"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TermInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4987"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TermExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4988"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementValue" desc="()Ljava/util/List;" line="4990"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementValue" desc="(I)LHoot/Compiler/HootParser$ElementValueContext;" line="4993"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4985"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4998"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5001"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5005"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BinarySelectionContext" sourcefilename="HootParser.java"><method name="binaryMessage" desc="()LHoot/Compiler/HootParser$BinaryMessageContext;" line="2791"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Compiler/HootParser$MessageContext;)V" line="2793"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2796"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2800"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$UnarySelectionContext" sourcefilename="HootParser.java"><method name="unarySelector" desc="()LHoot/Compiler/HootParser$UnarySelectorContext;" line="2776"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Compiler/HootParser$MessageContext;)V" line="2778"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2781"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2785"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MethodSignatureContext" sourcefilename="HootParser.java"><method name="keywordSignature" desc="()LHoot/Compiler/HootParser$KeywordSignatureContext;" line="1111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binarySignature" desc="()LHoot/Compiler/HootParser$BinarySignatureContext;" line="1114"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unarySignature" desc="()LHoot/Compiler/HootParser$UnarySignatureContext;" line="1117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1122"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1129"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeNotesContext" sourcefilename="HootParser.java"><method name="Bang" desc="()Ljava/util/List;" line="3402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Bang" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3404"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()Ljava/util/List;" line="3407"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="(I)LHoot/Compiler/HootParser$DetailedTypeContext;" line="3410"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3401"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3415"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3418"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3422"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootBaseListener" sourcefilename="HootBaseListener.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterCompilationUnit" desc="(LHoot/Compiler/HootParser$CompilationUnitContext;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitCompilationUnit" desc="(LHoot/Compiler/HootParser$CompilationUnitContext;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterClassScope" desc="(LHoot/Compiler/HootParser$ClassScopeContext;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitClassScope" desc="(LHoot/Compiler/HootParser$ClassScopeContext;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterTypeScope" desc="(LHoot/Compiler/HootParser$TypeScopeContext;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeScope" desc="(LHoot/Compiler/HootParser$TypeScopeContext;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterFileImport" desc="(LHoot/Compiler/HootParser$FileImportContext;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitFileImport" desc="(LHoot/Compiler/HootParser$FileImportContext;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterImportSelector" desc="(LHoot/Compiler/HootParser$ImportSelectorContext;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitImportSelector" desc="(LHoot/Compiler/HootParser$ImportSelectorContext;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterCaseOption" desc="(LHoot/Compiler/HootParser$CaseOptionContext;)V" line="95"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitCaseOption" desc="(LHoot/Compiler/HootParser$CaseOptionContext;)V" line="101"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTypeSignature" desc="(LHoot/Compiler/HootParser$TypeSignatureContext;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeSignature" desc="(LHoot/Compiler/HootParser$TypeSignatureContext;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterClassSignature" desc="(LHoot/Compiler/HootParser$ClassSignatureContext;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitClassSignature" desc="(LHoot/Compiler/HootParser$ClassSignatureContext;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterProtocolScope" desc="(LHoot/Compiler/HootParser$ProtocolScopeContext;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitProtocolScope" desc="(LHoot/Compiler/HootParser$ProtocolScopeContext;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterClassMember" desc="(LHoot/Compiler/HootParser$ClassMemberContext;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitClassMember" desc="(LHoot/Compiler/HootParser$ClassMemberContext;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterProtocolSignature" desc="(LHoot/Compiler/HootParser$ProtocolSignatureContext;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitProtocolSignature" desc="(LHoot/Compiler/HootParser$ProtocolSignatureContext;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNamedVariable" desc="(LHoot/Compiler/HootParser$NamedVariableContext;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNamedVariable" desc="(LHoot/Compiler/HootParser$NamedVariableContext;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMethodScope" desc="(LHoot/Compiler/HootParser$MethodScopeContext;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMethodScope" desc="(LHoot/Compiler/HootParser$MethodScopeContext;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMethodBeg" desc="(LHoot/Compiler/HootParser$MethodBegContext;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMethodBeg" desc="(LHoot/Compiler/HootParser$MethodBegContext;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMethodEnd" desc="(LHoot/Compiler/HootParser$MethodEndContext;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMethodEnd" desc="(LHoot/Compiler/HootParser$MethodEndContext;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMethodSignature" desc="(LHoot/Compiler/HootParser$MethodSignatureContext;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMethodSignature" desc="(LHoot/Compiler/HootParser$MethodSignatureContext;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterUnarySignature" desc="(LHoot/Compiler/HootParser$UnarySignatureContext;)V" line="227"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitUnarySignature" desc="(LHoot/Compiler/HootParser$UnarySignatureContext;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBinarySignature" desc="(LHoot/Compiler/HootParser$BinarySignatureContext;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBinarySignature" desc="(LHoot/Compiler/HootParser$BinarySignatureContext;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterKeywordSignature" desc="(LHoot/Compiler/HootParser$KeywordSignatureContext;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitKeywordSignature" desc="(LHoot/Compiler/HootParser$KeywordSignatureContext;)V" line="257"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterHeadsAndTails" desc="(LHoot/Compiler/HootParser$HeadsAndTailsContext;)V" line="263"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitHeadsAndTails" desc="(LHoot/Compiler/HootParser$HeadsAndTailsContext;)V" line="269"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNamedArgument" desc="(LHoot/Compiler/HootParser$NamedArgumentContext;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNamedArgument" desc="(LHoot/Compiler/HootParser$NamedArgumentContext;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBlockScope" desc="(LHoot/Compiler/HootParser$BlockScopeContext;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBlockScope" desc="(LHoot/Compiler/HootParser$BlockScopeContext;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBlockBeg" desc="(LHoot/Compiler/HootParser$BlockBegContext;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBlockBeg" desc="(LHoot/Compiler/HootParser$BlockBegContext;)V" line="305"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBlockEnd" desc="(LHoot/Compiler/HootParser$BlockEndContext;)V" line="311"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBlockEnd" desc="(LHoot/Compiler/HootParser$BlockEndContext;)V" line="317"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBlockSignature" desc="(LHoot/Compiler/HootParser$BlockSignatureContext;)V" line="323"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBlockSignature" desc="(LHoot/Compiler/HootParser$BlockSignatureContext;)V" line="329"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBlockContent" desc="(LHoot/Compiler/HootParser$BlockContentContext;)V" line="335"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBlockContent" desc="(LHoot/Compiler/HootParser$BlockContentContext;)V" line="341"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterExitResult" desc="(LHoot/Compiler/HootParser$ExitResultContext;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitExitResult" desc="(LHoot/Compiler/HootParser$ExitResultContext;)V" line="353"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterStatement" desc="(LHoot/Compiler/HootParser$StatementContext;)V" line="359"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitStatement" desc="(LHoot/Compiler/HootParser$StatementContext;)V" line="365"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterConstruct" desc="(LHoot/Compiler/HootParser$ConstructContext;)V" line="371"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitConstruct" desc="(LHoot/Compiler/HootParser$ConstructContext;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterEvaluation" desc="(LHoot/Compiler/HootParser$EvaluationContext;)V" line="383"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitEvaluation" desc="(LHoot/Compiler/HootParser$EvaluationContext;)V" line="389"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterAssignment" desc="(LHoot/Compiler/HootParser$AssignmentContext;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitAssignment" desc="(LHoot/Compiler/HootParser$AssignmentContext;)V" line="401"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterPrimary" desc="(LHoot/Compiler/HootParser$PrimaryContext;)V" line="407"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitPrimary" desc="(LHoot/Compiler/HootParser$PrimaryContext;)V" line="413"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNestedTerm" desc="(LHoot/Compiler/HootParser$NestedTermContext;)V" line="419"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNestedTerm" desc="(LHoot/Compiler/HootParser$NestedTermContext;)V" line="425"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterExpression" desc="(LHoot/Compiler/HootParser$ExpressionContext;)V" line="431"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitExpression" desc="(LHoot/Compiler/HootParser$ExpressionContext;)V" line="437"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterFormula" desc="(LHoot/Compiler/HootParser$FormulaContext;)V" line="443"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitFormula" desc="(LHoot/Compiler/HootParser$FormulaContext;)V" line="449"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterUnarySequence" desc="(LHoot/Compiler/HootParser$UnarySequenceContext;)V" line="455"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitUnarySequence" desc="(LHoot/Compiler/HootParser$UnarySequenceContext;)V" line="461"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBinaryMessage" desc="(LHoot/Compiler/HootParser$BinaryMessageContext;)V" line="467"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBinaryMessage" desc="(LHoot/Compiler/HootParser$BinaryMessageContext;)V" line="473"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterKeywordMessage" desc="(LHoot/Compiler/HootParser$KeywordMessageContext;)V" line="479"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitKeywordMessage" desc="(LHoot/Compiler/HootParser$KeywordMessageContext;)V" line="485"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMessageCascade" desc="(LHoot/Compiler/HootParser$MessageCascadeContext;)V" line="491"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMessageCascade" desc="(LHoot/Compiler/HootParser$MessageCascadeContext;)V" line="497"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterKeywordSelection" desc="(LHoot/Compiler/HootParser$KeywordSelectionContext;)V" line="503"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitKeywordSelection" desc="(LHoot/Compiler/HootParser$KeywordSelectionContext;)V" line="509"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBinarySelection" desc="(LHoot/Compiler/HootParser$BinarySelectionContext;)V" line="515"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitBinarySelection" desc="(LHoot/Compiler/HootParser$BinarySelectionContext;)V" line="521"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterUnarySelection" desc="(LHoot/Compiler/HootParser$UnarySelectionContext;)V" line="527"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitUnarySelection" desc="(LHoot/Compiler/HootParser$UnarySelectionContext;)V" line="533"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterClassHeritage" desc="(LHoot/Compiler/HootParser$ClassHeritageContext;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitClassHeritage" desc="(LHoot/Compiler/HootParser$ClassHeritageContext;)V" line="545"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterTypeHeritage" desc="(LHoot/Compiler/HootParser$TypeHeritageContext;)V" line="551"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeHeritage" desc="(LHoot/Compiler/HootParser$TypeHeritageContext;)V" line="557"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterDetailedSignature" desc="(LHoot/Compiler/HootParser$DetailedSignatureContext;)V" line="563"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitDetailedSignature" desc="(LHoot/Compiler/HootParser$DetailedSignatureContext;)V" line="569"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNotations" desc="(LHoot/Compiler/HootParser$NotationsContext;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNotations" desc="(LHoot/Compiler/HootParser$NotationsContext;)V" line="581"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNotation" desc="(LHoot/Compiler/HootParser$NotationContext;)V" line="587"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNotation" desc="(LHoot/Compiler/HootParser$NotationContext;)V" line="593"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNamedValue" desc="(LHoot/Compiler/HootParser$NamedValueContext;)V" line="599"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNamedValue" desc="(LHoot/Compiler/HootParser$NamedValueContext;)V" line="605"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterNakedValue" desc="(LHoot/Compiler/HootParser$NakedValueContext;)V" line="611"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitNakedValue" desc="(LHoot/Compiler/HootParser$NakedValueContext;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterTypeNotes" desc="(LHoot/Compiler/HootParser$TypeNotesContext;)V" line="623"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeNotes" desc="(LHoot/Compiler/HootParser$TypeNotesContext;)V" line="629"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterDetailedType" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)V" line="635"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitDetailedType" desc="(LHoot/Compiler/HootParser$DetailedTypeContext;)V" line="641"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterTypeNotation" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)V" line="647"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeNotation" desc="(LHoot/Compiler/HootParser$TypeNotationContext;)V" line="653"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterGenericTypes" desc="(LHoot/Compiler/HootParser$GenericTypesContext;)V" line="659"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitGenericTypes" desc="(LHoot/Compiler/HootParser$GenericTypesContext;)V" line="665"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterExtendType" desc="(LHoot/Compiler/HootParser$ExtendTypeContext;)V" line="671"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitExtendType" desc="(LHoot/Compiler/HootParser$ExtendTypeContext;)V" line="677"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterSignedType" desc="(LHoot/Compiler/HootParser$SignedTypeContext;)V" line="683"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitSignedType" desc="(LHoot/Compiler/HootParser$SignedTypeContext;)V" line="689"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterLiteralNil" desc="(LHoot/Compiler/HootParser$LiteralNilContext;)V" line="695"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitLiteralNil" desc="(LHoot/Compiler/HootParser$LiteralNilContext;)V" line="701"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterLiteralSelf" desc="(LHoot/Compiler/HootParser$LiteralSelfContext;)V" line="707"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitLiteralSelf" desc="(LHoot/Compiler/HootParser$LiteralSelfContext;)V" line="713"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterLiteralSuper" desc="(LHoot/Compiler/HootParser$LiteralSuperContext;)V" line="719"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitLiteralSuper" desc="(LHoot/Compiler/HootParser$LiteralSuperContext;)V" line="725"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterLiteralBoolean" desc="(LHoot/Compiler/HootParser$LiteralBooleanContext;)V" line="731"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitLiteralBoolean" desc="(LHoot/Compiler/HootParser$LiteralBooleanContext;)V" line="737"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterValueName" desc="(LHoot/Compiler/HootParser$ValueNameContext;)V" line="743"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitValueName" desc="(LHoot/Compiler/HootParser$ValueNameContext;)V" line="749"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterVariableName" desc="(LHoot/Compiler/HootParser$VariableNameContext;)V" line="755"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitVariableName" desc="(LHoot/Compiler/HootParser$VariableNameContext;)V" line="761"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterGlobalName" desc="(LHoot/Compiler/HootParser$GlobalNameContext;)V" line="767"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitGlobalName" desc="(LHoot/Compiler/HootParser$GlobalNameContext;)V" line="773"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterGlobalReference" desc="(LHoot/Compiler/HootParser$GlobalReferenceContext;)V" line="779"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitGlobalReference" desc="(LHoot/Compiler/HootParser$GlobalReferenceContext;)V" line="785"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterSubclassKeyword" desc="(LHoot/Compiler/HootParser$SubclassKeywordContext;)V" line="791"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitSubclassKeyword" desc="(LHoot/Compiler/HootParser$SubclassKeywordContext;)V" line="797"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterSubtypeKeyword" desc="(LHoot/Compiler/HootParser$SubtypeKeywordContext;)V" line="803"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitSubtypeKeyword" desc="(LHoot/Compiler/HootParser$SubtypeKeywordContext;)V" line="809"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMetaclassKeyword" desc="(LHoot/Compiler/HootParser$MetaclassKeywordContext;)V" line="815"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitMetaclassKeyword" desc="(LHoot/Compiler/HootParser$MetaclassKeywordContext;)V" line="821"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterMetatypeKeyword" desc="(LHoot/Compiler/HootParser$MetatypeKeywordContext;)V" line="827"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitMetatypeKeyword" desc="(LHoot/Compiler/HootParser$MetatypeKeywordContext;)V" line="833"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterClassKeyword" desc="(LHoot/Compiler/HootParser$ClassKeywordContext;)V" line="839"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitClassKeyword" desc="(LHoot/Compiler/HootParser$ClassKeywordContext;)V" line="845"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterTypeKeyword" desc="(LHoot/Compiler/HootParser$TypeKeywordContext;)V" line="851"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitTypeKeyword" desc="(LHoot/Compiler/HootParser$TypeKeywordContext;)V" line="857"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterImplementsKeyword" desc="(LHoot/Compiler/HootParser$ImplementsKeywordContext;)V" line="863"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitImplementsKeyword" desc="(LHoot/Compiler/HootParser$ImplementsKeywordContext;)V" line="869"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterProtocolKeyword" desc="(LHoot/Compiler/HootParser$ProtocolKeywordContext;)V" line="875"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitProtocolKeyword" desc="(LHoot/Compiler/HootParser$ProtocolKeywordContext;)V" line="881"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterMembersKeyword" desc="(LHoot/Compiler/HootParser$MembersKeywordContext;)V" line="887"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMembersKeyword" desc="(LHoot/Compiler/HootParser$MembersKeywordContext;)V" line="893"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterReservedWord" desc="(LHoot/Compiler/HootParser$ReservedWordContext;)V" line="899"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitReservedWord" desc="(LHoot/Compiler/HootParser$ReservedWordContext;)V" line="905"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterKeywordHead" desc="(LHoot/Compiler/HootParser$KeywordHeadContext;)V" line="911"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitKeywordHead" desc="(LHoot/Compiler/HootParser$KeywordHeadContext;)V" line="917"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterKeywordTail" desc="(LHoot/Compiler/HootParser$KeywordTailContext;)V" line="923"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitKeywordTail" desc="(LHoot/Compiler/HootParser$KeywordTailContext;)V" line="929"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterMetaUnary" desc="(LHoot/Compiler/HootParser$MetaUnaryContext;)V" line="935"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitMetaUnary" desc="(LHoot/Compiler/HootParser$MetaUnaryContext;)V" line="941"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterClassUnary" desc="(LHoot/Compiler/HootParser$ClassUnaryContext;)V" line="947"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitClassUnary" desc="(LHoot/Compiler/HootParser$ClassUnaryContext;)V" line="953"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterTypeUnary" desc="(LHoot/Compiler/HootParser$TypeUnaryContext;)V" line="959"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitTypeUnary" desc="(LHoot/Compiler/HootParser$TypeUnaryContext;)V" line="965"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterUnarySelector" desc="(LHoot/Compiler/HootParser$UnarySelectorContext;)V" line="971"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitUnarySelector" desc="(LHoot/Compiler/HootParser$UnarySelectorContext;)V" line="977"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterBinaryOperator" desc="(LHoot/Compiler/HootParser$BinaryOperatorContext;)V" line="983"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitBinaryOperator" desc="(LHoot/Compiler/HootParser$BinaryOperatorContext;)V" line="989"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterPrimitiveValues" desc="(LHoot/Compiler/HootParser$PrimitiveValuesContext;)V" line="995"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitPrimitiveValues" desc="(LHoot/Compiler/HootParser$PrimitiveValuesContext;)V" line="1001"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterElementValues" desc="(LHoot/Compiler/HootParser$ElementValuesContext;)V" line="1007"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitElementValues" desc="(LHoot/Compiler/HootParser$ElementValuesContext;)V" line="1013"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterElementValue" desc="(LHoot/Compiler/HootParser$ElementValueContext;)V" line="1019"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitElementValue" desc="(LHoot/Compiler/HootParser$ElementValueContext;)V" line="1025"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterPrimitive" desc="(LHoot/Compiler/HootParser$PrimitiveContext;)V" line="1031"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitPrimitive" desc="(LHoot/Compiler/HootParser$PrimitiveContext;)V" line="1037"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterSelfish" desc="(LHoot/Compiler/HootParser$SelfishContext;)V" line="1043"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitSelfish" desc="(LHoot/Compiler/HootParser$SelfishContext;)V" line="1049"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterLiteral" desc="(LHoot/Compiler/HootParser$LiteralContext;)V" line="1055"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitLiteral" desc="(LHoot/Compiler/HootParser$LiteralContext;)V" line="1061"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRadixedNumber" desc="(LHoot/Compiler/HootParser$RadixedNumberContext;)V" line="1067"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRadixedNumber" desc="(LHoot/Compiler/HootParser$RadixedNumberContext;)V" line="1073"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterEveryRule" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;)V" line="1080"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitEveryRule" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;)V" line="1086"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTerminal" desc="(Lorg/antlr/v4/runtime/tree/TerminalNode;)V" line="1092"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitErrorNode" desc="(Lorg/antlr/v4/runtime/tree/ErrorNode;)V" line="1098"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="158"/><counter type="LINE" missed="23" covered="156"/><counter type="COMPLEXITY" missed="23" covered="156"/><counter type="METHOD" missed="23" covered="156"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$RadixedNumberContext" sourcefilename="HootParser.java"><method name="ConstantBinary" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5463"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantOctal" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5464"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantHex" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5465"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5467"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5469"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5472"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5476"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$NamedVariableContext" sourcefilename="HootParser.java"><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="875"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="878"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueName" desc="()LHoot/Compiler/HootParser$ValueNameContext;" line="881"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="883"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Assign" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="884"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="886"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="889"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="891"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="894"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="898"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BlockBegContext" sourcefilename="HootParser.java"><method name="BlockInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1570"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1572"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1574"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1577"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1581"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ProtocolKeywordContext" sourcefilename="HootParser.java"><method name="Protocol" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4392"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4394"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4396"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4399"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4403"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$UnarySignatureContext" sourcefilename="HootParser.java"><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="1180"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unarySelector" desc="()LHoot/Compiler/HootParser$UnarySelectorContext;" line="1183"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1195"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$CompilationUnitContext" sourcefilename="HootParser.java"><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="167"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classScope" desc="()LHoot/Compiler/HootParser$ClassScopeContext;" line="170"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeScope" desc="()LHoot/Compiler/HootParser$TypeScopeContext;" line="173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileImport" desc="()Ljava/util/List;" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileImport" desc="(I)LHoot/Compiler/HootParser$FileImportContext;" line="179"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="184"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassSignatureContext" sourcefilename="HootParser.java"><method name="classHeritage" desc="()LHoot/Compiler/HootParser$ClassHeritageContext;" line="606"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subclassKeyword" desc="()LHoot/Compiler/HootParser$SubclassKeywordContext;" line="609"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="612"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeNotes" desc="()LHoot/Compiler/HootParser$TypeNotesContext;" line="615"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="618"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedSignature" desc="()LHoot/Compiler/HootParser$DetailedSignatureContext;" line="621"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="623"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="625"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="627"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="630"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="634"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ExpressionContext" sourcefilename="HootParser.java"><method name="formula" desc="()LHoot/Compiler/HootParser$FormulaContext;" line="2315"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordMessage" desc="()LHoot/Compiler/HootParser$KeywordMessageContext;" line="2318"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="messageCascade" desc="()Ljava/util/List;" line="2321"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="messageCascade" desc="(I)LHoot/Compiler/HootParser$MessageCascadeContext;" line="2324"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2313"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2329"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2332"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2336"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ClassScopeContext" sourcefilename="HootParser.java"><method name="classSignature" desc="()LHoot/Compiler/HootParser$ClassSignatureContext;" line="253"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="protocolScope" desc="()Ljava/util/List;" line="256"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="protocolScope" desc="(I)LHoot/Compiler/HootParser$ProtocolScopeContext;" line="259"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="251"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="264"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="267"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="271"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$SelfishContext" sourcefilename="HootParser.java"><method name="literalSelf" desc="()LHoot/Compiler/HootParser$LiteralSelfContext;" line="5239"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalSuper" desc="()LHoot/Compiler/HootParser$LiteralSuperContext;" line="5242"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="5247"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5250"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5254"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$EvaluationContext" sourcefilename="HootParser.java"><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="2050"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2053"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2055"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2058"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2062"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$VariableNameContext" sourcefilename="HootParser.java"><method name="LocalName" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3987"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3985"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3991"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3994"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3998"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$LiteralContext" sourcefilename="HootParser.java"><method name="elementValues" desc="()LHoot/Compiler/HootParser$ElementValuesContext;" line="5305"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalNil" desc="()LHoot/Compiler/HootParser$LiteralNilContext;" line="5308"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalSelf" desc="()LHoot/Compiler/HootParser$LiteralSelfContext;" line="5311"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalSuper" desc="()LHoot/Compiler/HootParser$LiteralSuperContext;" line="5314"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalBoolean" desc="()LHoot/Compiler/HootParser$LiteralBooleanContext;" line="5317"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantCharacter" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5319"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantDecimal" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantFloat" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5321"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantInteger" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5322"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="radixedNumber" desc="()LHoot/Compiler/HootParser$RadixedNumberContext;" line="5324"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantSymbol" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5326"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantString" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5327"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5329"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="5331"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5334"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5338"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="68" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="13" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$LiteralNilContext" sourcefilename="HootParser.java"><method name="Nil" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3768"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3770"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3772"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3775"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3779"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$NotationContext" sourcefilename="HootParser.java"><method name="At" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3141"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="3143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Bang" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3145"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedValue" desc="()Ljava/util/List;" line="3147"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="namedValue" desc="(I)LHoot/Compiler/HootParser$NamedValueContext;" line="3150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nakedValue" desc="()Ljava/util/List;" line="3153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nakedValue" desc="(I)LHoot/Compiler/HootParser$NakedValueContext;" line="3156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3135"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3161"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3164"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3168"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="34"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$DetailedSignatureContext" sourcefilename="HootParser.java"><method name="Exit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3012"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="genericTypes" desc="()LHoot/Compiler/HootParser$GenericTypesContext;" line="3014"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedType" desc="()LHoot/Compiler/HootParser$DetailedTypeContext;" line="3017"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3009"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3022"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3025"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3029"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$KeywordMessageContext" sourcefilename="HootParser.java"><method name="keywordHead" desc="()Ljava/util/List;" line="2576"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordHead" desc="(I)LHoot/Compiler/HootParser$KeywordHeadContext;" line="2579"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formula" desc="()Ljava/util/List;" line="2582"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formula" desc="(I)LHoot/Compiler/HootParser$FormulaContext;" line="2585"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="()Ljava/util/List;" line="2588"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keywordTail" desc="(I)LHoot/Compiler/HootParser$KeywordTailContext;" line="2591"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2570"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2596"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2599"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2603"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="9"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeSignatureContext" sourcefilename="HootParser.java"><method name="typeHeritage" desc="()LHoot/Compiler/HootParser$TypeHeritageContext;" line="530"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtypeKeyword" desc="()LHoot/Compiler/HootParser$SubtypeKeywordContext;" line="533"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="536"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="539"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="detailedSignature" desc="()LHoot/Compiler/HootParser$DetailedSignatureContext;" line="542"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="544"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="546"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="548"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="551"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="555"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$PrimitiveContext" sourcefilename="HootParser.java"><method name="primitiveValues" desc="()LHoot/Compiler/HootParser$PrimitiveValuesContext;" line="5132"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="literalBoolean" desc="()LHoot/Compiler/HootParser$LiteralBooleanContext;" line="5135"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantCharacter" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5137"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantInteger" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantFloat" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantSymbol" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ConstantString" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="5141"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="5145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5148"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5152"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MetaUnaryContext" sourcefilename="HootParser.java"><method name="classUnary" desc="()LHoot/Compiler/HootParser$ClassUnaryContext;" line="4631"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeUnary" desc="()LHoot/Compiler/HootParser$TypeUnaryContext;" line="4634"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4637"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4639"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4642"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4646"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$GlobalReferenceContext" sourcefilename="HootParser.java"><method name="globalName" desc="()Ljava/util/List;" line="4069"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="(I)LHoot/Compiler/HootParser$GlobalNameContext;" line="4072"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4065"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4077"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4080"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4084"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MessageCascadeContext" sourcefilename="HootParser.java"><method name="Cascade" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2704"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="message" desc="()LHoot/Compiler/HootParser$MessageContext;" line="2706"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2709"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2711"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2714"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2718"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$LiteralSuperContext" sourcefilename="HootParser.java"><method name="Super" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3842"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3844"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3846"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3849"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3853"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$KeywordSelectionContext" sourcefilename="HootParser.java"><method name="keywordMessage" desc="()LHoot/Compiler/HootParser$KeywordMessageContext;" line="2761"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Compiler/HootParser$MessageContext;)V" line="2763"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2766"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2770"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BlockEndContext" sourcefilename="HootParser.java"><method name="BlockExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1608"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1610"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1612"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1615"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1619"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeUnaryContext" sourcefilename="HootParser.java"><method name="TypeUnary" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4728"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4730"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4732"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4735"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4739"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ImportSelectorContext" sourcefilename="HootParser.java"><method name="ImportOne" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="441"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ImportAll" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="442"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ImportStatics" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="443"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="445"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="447"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="450"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="454"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$TypeKeywordContext" sourcefilename="HootParser.java"><method name="Type" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4318"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4320"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4322"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4325"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4329"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$BlockContentContext" sourcefilename="HootParser.java"><method name="statement" desc="()Ljava/util/List;" line="1746"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="statement" desc="(I)LHoot/Compiler/HootParser$StatementContext;" line="1749"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitResult" desc="()LHoot/Compiler/HootParser$ExitResultContext;" line="1752"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="()Ljava/util/List;" line="1754"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="(I)Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1756"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1741"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1761"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1764"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1768"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$LiteralBooleanContext" sourcefilename="HootParser.java"><method name="True" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3879"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="False" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3880"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3882"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3884"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3887"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3891"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$FileImportContext" sourcefilename="HootParser.java"><method name="Period" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="380"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalReference" desc="()LHoot/Compiler/HootParser$GlobalReferenceContext;" line="382"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="importSelector" desc="()LHoot/Compiler/HootParser$ImportSelectorContext;" line="385"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="caseOption" desc="()LHoot/Compiler/HootParser$CaseOptionContext;" line="388"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="391"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="393"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="396"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="400"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$NakedValueContext" sourcefilename="HootParser.java"><method name="keywordTail" desc="()LHoot/Compiler/HootParser$KeywordTailContext;" line="3338"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitive" desc="()LHoot/Compiler/HootParser$PrimitiveContext;" line="3341"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="globalName" desc="()LHoot/Compiler/HootParser$GlobalNameContext;" line="3344"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3333"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3349"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3352"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3356"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ElementValueContext" sourcefilename="HootParser.java"><method name="literal" desc="()LHoot/Compiler/HootParser$LiteralContext;" line="5056"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="variableName" desc="()LHoot/Compiler/HootParser$VariableNameContext;" line="5059"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="5062"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="5064"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5067"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="5071"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$CaseOptionContext" sourcefilename="HootParser.java"><method name="CaseMessage" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="486"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="488"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="490"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="493"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="497"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$ExitResultContext" sourcefilename="HootParser.java"><method name="Exit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="1868"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="1870"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1873"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1875"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1878"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1882"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$NestedTermContext" sourcefilename="HootParser.java"><method name="TermInit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2263"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TermExit" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2264"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="2266"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2269"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2271"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2274"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2278"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$BinaryOperatorContext" sourcefilename="HootParser.java"><method name="At" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4838"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Bar" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4839"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Comma" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4840"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="BinaryOperator" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4841"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Usage" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4842"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4844"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4846"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4849"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4853"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$KeywordSignatureContext" sourcefilename="HootParser.java"><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="1280"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="headsAndTails" desc="()LHoot/Compiler/HootParser$HeadsAndTailsContext;" line="1283"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="1286"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="1288"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1291"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="1295"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$UnarySelectorContext" sourcefilename="HootParser.java"><method name="LocalName" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4767"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ClassUnary" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4768"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TypeUnary" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4769"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="GlobalName" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4770"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4765"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4774"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4777"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4781"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MetaclassKeywordContext" sourcefilename="HootParser.java"><method name="Metaclass" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4207"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4209"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4211"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4214"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4218"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$LiteralSelfContext" sourcefilename="HootParser.java"><method name="Self" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="3805"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="3807"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="3809"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3812"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="3816"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$UnarySequenceContext" sourcefilename="HootParser.java"><method name="primary" desc="()LHoot/Compiler/HootParser$PrimaryContext;" line="2459"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unarySelector" desc="()Ljava/util/List;" line="2462"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unarySelector" desc="(I)LHoot/Compiler/HootParser$UnarySelectorContext;" line="2465"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2457"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2470"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2473"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2477"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootListener" sourcefilename="HootListener.java"/><class name="Hoot/Compiler/HootParser$SubtypeKeywordContext" sourcefilename="HootParser.java"><method name="Subtype" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4169"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4171"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="4173"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4176"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4180"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$ImplementsKeywordContext" sourcefilename="HootParser.java"><method name="Implements" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="4355"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="4357"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleIndex" desc="()I" line="4359"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4362"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="4366"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/HootParser$FormulaContext" sourcefilename="HootParser.java"><method name="unarySequence" desc="()LHoot/Compiler/HootParser$UnarySequenceContext;" line="2393"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binaryMessage" desc="()Ljava/util/List;" line="2396"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binaryMessage" desc="(I)LHoot/Compiler/HootParser$BinaryMessageContext;" line="2399"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2391"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2404"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2407"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2411"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$AssignmentContext" sourcefilename="HootParser.java"><method name="Assign" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="2094"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="2096"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeNotation" desc="()LHoot/Compiler/HootParser$TypeNotationContext;" line="2099"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueName" desc="()LHoot/Compiler/HootParser$ValueNameContext;" line="2102"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expression" desc="()LHoot/Compiler/HootParser$ExpressionContext;" line="2105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="2108"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="2110"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2113"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="2117"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootMain" sourcefilename="HootMain.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mainly" desc="()LHoot/Compiler/HootMain;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseArgs" desc="([Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseCommand" desc="([Ljava/lang/String;)LHoot/Compiler/HootMain;" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runCommand" desc="()LHoot/Compiler/HootMain;" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="helpWanted" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testWanted" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMainSource" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasTestSource" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="needsDefaultSource" desc="()Z" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultSourcePath" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultSourceFolder" desc="()Ljava/io/File;" line="63"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeTail" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="targetTail" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceTail" desc="()Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectedSource" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetPath" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourcePath" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testTargetPath" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testSourcePath" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="basePath" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packages" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noPackages" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="somePackages" desc="()Z" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="packageList" desc="()Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cachePackages" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectPackagesUnder" desc="(Ljava/io/File;)Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="libs" desc="()Ljava/util/List;" line="114"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cacheLibs" desc="()V" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="libsList" desc="()Ljava/util/List;" line="116"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printHelp" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="helpPrinter" desc="()Lorg/apache/commons/cli/HelpFormatter;" line="121"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="availableOptions" desc="()Lorg/apache/commons/cli/Options;" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOptions" desc="()Ljava/util/List;" line="127"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareFolders" desc="()V" line="139"><counter type="INSTRUCTION" missed="1" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBasicPath" desc="(Ljava/lang/String;)V" line="151"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addQualifiedPath" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="153"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addPath" desc="(Ljava/lang/String;[Ljava/lang/String;)V" line="156"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadPaths" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="locate" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/io/File;" line="166"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="locateCode" desc="(Ljava/lang/String;[Ljava/lang/String;)Ljava/io/File;" line="168"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="locateRelative" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;" line="175"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportFolder" desc="(Ljava/lang/String;Ljava/io/File;)Ljava/io/File;" line="184"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportLoudly" desc="(Ljava/lang/String;Ljava/io/File;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compilePackages" desc="()V" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prepareCompile" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileOrTest" desc="()V" line="205"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileAllPackages" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportPackages" desc="()V" line="209"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testPackages" desc="()V" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportPackage" desc="(LHoot/Runtime/Maps/Package;)V" line="214"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isHoot" desc="(Ljava/io/File;)Z" line="220"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compilePackage" desc="(LHoot/Runtime/Maps/Package;)V" line="224"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="helpOption" desc="()Lorg/apache/commons/cli/Option;" line="237"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testOption" desc="()Lorg/apache/commons/cli/Option;" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseOption" desc="()Lorg/apache/commons/cli/Option;" line="251"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseOptBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="252"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceOption" desc="()Lorg/apache/commons/cli/Option;" line="254"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceOptBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="255"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testSourceOption" desc="()Lorg/apache/commons/cli/Option;" line="257"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testSourceBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="258"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetOption" desc="()Lorg/apache/commons/cli/Option;" line="262"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetOptBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="libsOption" desc="()Lorg/apache/commons/cli/Option;" line="267"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="libsOptBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="268"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="packageOption" desc="()Lorg/apache/commons/cli/Option;" line="272"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packageOptBuilder" desc="()Lorg/apache/commons/cli/Option$Builder;" line="273"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortened" desc="(Ljava/lang/String;)Ljava/lang/String;" line="275"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shortOption" desc="(Ljava/lang/String;)Ljava/lang/String;" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildOption" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;" line="277"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildOption" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;" line="281"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildCommand" desc="(Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;" line="286"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$compilePackage$21" desc="(LHoot/Runtime/Maps/Package;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$compilePackage$20" desc="(LHoot/Runtime/Faces/UnitFile;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$19" desc="(Ljava/io/File;)Z" line="219"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$reportPackage$18" desc="(Ljava/lang/String;Ljava/io/File;)V" line="216"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$testPackages$17" desc="(Ljava/lang/String;)V" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$compileAllPackages$16" desc="(Ljava/lang/String;)V" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$reportLoudly$15" desc="(Ljava/lang/String;Ljava/io/File;)V" line="200"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$availableOptions$14" desc="(Lorg/apache/commons/cli/Options;Lorg/apache/commons/cli/Option;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$13" desc="(Ljava/io/File;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$collectPackagesUnder$12" desc="(Ljava/io/File;Ljava/util/Collection;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$collectPackagesUnder$11" desc="(Ljava/io/File;Ljava/util/Collection;Ljava/io/File;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$cachePackages$10" desc="(Ljava/lang/String;)Z" line="89"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$basePath$9" desc="(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testSourcePath$8" desc="(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$testTargetPath$7" desc="(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sourcePath$6" desc="(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$targetPath$5" desc="(Lorg/apache/commons/cli/CommandLine;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasTestSource$4" desc="(Lorg/apache/commons/cli/CommandLine;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$hasMainSource$3" desc="(Lorg/apache/commons/cli/CommandLine;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$testWanted$2" desc="(Lorg/apache/commons/cli/CommandLine;)Z" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$helpWanted$1" desc="(Lorg/apache/commons/cli/CommandLine;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$parseArgs$0" desc="([Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="253" covered="780"/><counter type="BRANCH" missed="34" covered="30"/><counter type="LINE" missed="19" covered="120"/><counter type="COMPLEXITY" missed="46" covered="82"/><counter type="METHOD" missed="22" covered="74"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/HootParser$MethodScopeContext" sourcefilename="HootParser.java"><method name="notations" desc="()LHoot/Compiler/HootParser$NotationsContext;" line="951"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodSignature" desc="()LHoot/Compiler/HootParser$MethodSignatureContext;" line="954"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodBeg" desc="()LHoot/Compiler/HootParser$MethodBegContext;" line="957"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockContent" desc="()LHoot/Compiler/HootParser$BlockContentContext;" line="960"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodEnd" desc="()LHoot/Compiler/HootParser$MethodEndContext;" line="963"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="Period" desc="()Lorg/antlr/v4/runtime/tree/TerminalNode;" line="965"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="()LHoot/Compiler/HootParser$ConstructContext;" line="967"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/antlr/v4/runtime/ParserRuleContext;I)V" line="970"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleIndex" desc="()I" line="972"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enterRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="975"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitRule" desc="(Lorg/antlr/v4/runtime/tree/ParseTreeListener;)V" line="979"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HootMain.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="2"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="4" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="13" ci="0" mb="0" cb="0"/><line nr="65" mi="15" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="5" mb="1" cb="1"/><line nr="68" mi="2" ci="5" mb="1" cb="1"/><line nr="70" mi="3" ci="4" mb="1" cb="1"/><line nr="71" mi="2" ci="6" mb="1" cb="1"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="2" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="7" ci="8" mb="2" cb="0"/><line nr="90" mi="0" ci="3" mb="1" cb="1"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="14" mb="1" cb="3"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="14" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="20" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="0"/><line nr="141" mi="1" ci="3" mb="1" cb="1"/><line nr="143" mi="0" ci="17" mb="0" cb="0"/><line nr="144" mi="0" ci="17" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="18" ci="0" mb="0" cb="0"/><line nr="153" mi="24" ci="0" mb="2" cb="0"/><line nr="156" mi="14" ci="0" mb="2" cb="0"/><line nr="159" mi="0" ci="13" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="1" cb="3"/><line nr="170" mi="9" ci="4" mb="1" cb="1"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="2" ci="4" mb="1" cb="1"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="2"/><line nr="179" mi="2" ci="5" mb="1" cb="1"/><line nr="184" mi="0" ci="5" mb="0" cb="2"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="1" cb="1"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="25" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="9" mb="0" cb="0"/><line nr="205" mi="3" ci="6" mb="1" cb="1"/><line nr="206" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="17" ci="0" mb="0" cb="0"/><line nr="210" mi="11" ci="0" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="7" ci="0" mb="2" cb="0"/><line nr="216" mi="21" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="2" mb="0" cb="0"/><line nr="220" mi="12" ci="0" mb="4" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="2"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="12" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="11" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="9" ci="0" mb="0" cb="0"/><line nr="268" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="2"/><line nr="286" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="253" covered="780"/><counter type="BRANCH" missed="34" covered="30"/><counter type="LINE" missed="19" covered="120"/><counter type="COMPLEXITY" missed="46" covered="82"/><counter type="METHOD" missed="22" covered="74"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HootLexer.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="419" mb="0" cb="0"/><line nr="70" mi="0" ci="187" mb="0" cb="0"/><line nr="78" mi="0" ci="227" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="4" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="8" mb="0" cb="2"/><line nr="404" mi="0" ci="10" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="932"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HootListener.java"/><sourcefile name="HootBaseListener.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="1" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="1" mb="0" cb="0"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="479" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="1" ci="0" mb="0" cb="0"/><line nr="521" mi="1" ci="0" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="533" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="0" ci="1" mb="0" cb="0"/><line nr="563" mi="0" ci="1" mb="0" cb="0"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="587" mi="0" ci="1" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="599" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><line nr="611" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="1" mb="0" cb="0"/><line nr="623" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="1" mb="0" cb="0"/><line nr="635" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="647" mi="0" ci="1" mb="0" cb="0"/><line nr="653" mi="0" ci="1" mb="0" cb="0"/><line nr="659" mi="0" ci="1" mb="0" cb="0"/><line nr="665" mi="0" ci="1" mb="0" cb="0"/><line nr="671" mi="0" ci="1" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="701" mi="0" ci="1" mb="0" cb="0"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="713" mi="0" ci="1" mb="0" cb="0"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="725" mi="0" ci="1" mb="0" cb="0"/><line nr="731" mi="0" ci="1" mb="0" cb="0"/><line nr="737" mi="0" ci="1" mb="0" cb="0"/><line nr="743" mi="0" ci="1" mb="0" cb="0"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="755" mi="0" ci="1" mb="0" cb="0"/><line nr="761" mi="0" ci="1" mb="0" cb="0"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="773" mi="0" ci="1" mb="0" cb="0"/><line nr="779" mi="0" ci="1" mb="0" cb="0"/><line nr="785" mi="0" ci="1" mb="0" cb="0"/><line nr="791" mi="0" ci="1" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="803" mi="0" ci="1" mb="0" cb="0"/><line nr="809" mi="0" ci="1" mb="0" cb="0"/><line nr="815" mi="1" ci="0" mb="0" cb="0"/><line nr="821" mi="1" ci="0" mb="0" cb="0"/><line nr="827" mi="1" ci="0" mb="0" cb="0"/><line nr="833" mi="1" ci="0" mb="0" cb="0"/><line nr="839" mi="1" ci="0" mb="0" cb="0"/><line nr="845" mi="1" ci="0" mb="0" cb="0"/><line nr="851" mi="1" ci="0" mb="0" cb="0"/><line nr="857" mi="1" ci="0" mb="0" cb="0"/><line nr="863" mi="1" ci="0" mb="0" cb="0"/><line nr="869" mi="1" ci="0" mb="0" cb="0"/><line nr="875" mi="1" ci="0" mb="0" cb="0"/><line nr="881" mi="1" ci="0" mb="0" cb="0"/><line nr="887" mi="0" ci="1" mb="0" cb="0"/><line nr="893" mi="0" ci="1" mb="0" cb="0"/><line nr="899" mi="0" ci="1" mb="0" cb="0"/><line nr="905" mi="0" ci="1" mb="0" cb="0"/><line nr="911" mi="0" ci="1" mb="0" cb="0"/><line nr="917" mi="0" ci="1" mb="0" cb="0"/><line nr="923" mi="0" ci="1" mb="0" cb="0"/><line nr="929" mi="0" ci="1" mb="0" cb="0"/><line nr="935" mi="0" ci="1" mb="0" cb="0"/><line nr="941" mi="0" ci="1" mb="0" cb="0"/><line nr="947" mi="0" ci="1" mb="0" cb="0"/><line nr="953" mi="0" ci="1" mb="0" cb="0"/><line nr="959" mi="0" ci="1" mb="0" cb="0"/><line nr="965" mi="0" ci="1" mb="0" cb="0"/><line nr="971" mi="0" ci="1" mb="0" cb="0"/><line nr="977" mi="0" ci="1" mb="0" cb="0"/><line nr="983" mi="0" ci="1" mb="0" cb="0"/><line nr="989" mi="0" ci="1" mb="0" cb="0"/><line nr="995" mi="1" ci="0" mb="0" cb="0"/><line nr="1001" mi="1" ci="0" mb="0" cb="0"/><line nr="1007" mi="0" ci="1" mb="0" cb="0"/><line nr="1013" mi="0" ci="1" mb="0" cb="0"/><line nr="1019" mi="1" ci="0" mb="0" cb="0"/><line nr="1025" mi="1" ci="0" mb="0" cb="0"/><line nr="1031" mi="0" ci="1" mb="0" cb="0"/><line nr="1037" mi="0" ci="1" mb="0" cb="0"/><line nr="1043" mi="0" ci="1" mb="0" cb="0"/><line nr="1049" mi="0" ci="1" mb="0" cb="0"/><line nr="1055" mi="0" ci="1" mb="0" cb="0"/><line nr="1061" mi="0" ci="1" mb="0" cb="0"/><line nr="1067" mi="1" ci="0" mb="0" cb="0"/><line nr="1073" mi="1" ci="0" mb="0" cb="0"/><line nr="1080" mi="0" ci="1" mb="0" cb="0"/><line nr="1086" mi="0" ci="1" mb="0" cb="0"/><line nr="1092" mi="0" ci="1" mb="0" cb="0"/><line nr="1098" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="158"/><counter type="LINE" missed="23" covered="156"/><counter type="COMPLEXITY" missed="23" covered="156"/><counter type="METHOD" missed="23" covered="156"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HootParser.java"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="343" mb="0" cb="0"/><line nr="93" mi="0" ci="187" mb="0" cb="0"/><line nr="101" mi="0" ci="227" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="1" cb="1"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="1" cb="1"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="1" cb="3"/><line nr="208" mi="0" ci="3" mb="1" cb="1"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="11" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="1" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="1" ci="0" mb="0" cb="0"/><line nr="238" mi="3" ci="0" mb="0" cb="0"/><line nr="239" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="6" ci="0" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="1" cb="1"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="1" cb="1"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="1" cb="3"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="3" ci="0" mb="0" cb="0"/><line nr="303" mi="5" ci="0" mb="0" cb="0"/><line nr="304" mi="5" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="6" ci="0" mb="0" cb="0"/><line nr="320" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="6" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="328" mi="2" ci="0" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="1" cb="1"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="7" mb="1" cb="1"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="8" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="1" cb="3"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="1" ci="0" mb="0" cb="0"/><line nr="366" mi="3" ci="0" mb="0" cb="0"/><line nr="367" mi="5" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="2" mb="0" cb="0"/><line nr="380" mi="5" ci="0" mb="0" cb="0"/><line nr="382" mi="6" ci="0" mb="0" cb="0"/><line nr="385" mi="6" ci="0" mb="0" cb="0"/><line nr="388" mi="6" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="396" mi="0" ci="7" mb="1" cb="1"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="7" mb="1" cb="1"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="1" cb="1"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="1" ci="24" mb="1" cb="1"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="430" mi="3" ci="0" mb="0" cb="0"/><line nr="431" mi="5" ci="0" mb="0" cb="0"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="5" ci="0" mb="0" cb="0"/><line nr="442" mi="5" ci="0" mb="0" cb="0"/><line nr="443" mi="5" ci="0" mb="0" cb="0"/><line nr="445" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="2" ci="0" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="1" cb="1"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="454" mi="0" ci="7" mb="1" cb="1"/><line nr="455" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="8" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="12" mb="2" cb="2"/><line nr="468" mi="6" ci="0" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="474" mi="1" ci="0" mb="0" cb="0"/><line nr="475" mi="3" ci="0" mb="0" cb="0"/><line nr="476" mi="5" ci="0" mb="0" cb="0"/><line nr="477" mi="5" ci="0" mb="0" cb="0"/><line nr="480" mi="0" ci="2" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="486" mi="5" ci="0" mb="0" cb="0"/><line nr="488" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="1" ci="0" mb="0" cb="0"/><line nr="490" mi="2" ci="0" mb="0" cb="0"/><line nr="493" mi="7" ci="0" mb="2" cb="0"/><line nr="494" mi="1" ci="0" mb="0" cb="0"/><line nr="497" mi="7" ci="0" mb="2" cb="0"/><line nr="498" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="8" ci="0" mb="0" cb="0"/><line nr="503" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="4" ci="0" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="508" mi="4" ci="0" mb="0" cb="0"/><line nr="511" mi="1" ci="0" mb="0" cb="0"/><line nr="512" mi="3" ci="0" mb="0" cb="0"/><line nr="513" mi="5" ci="0" mb="0" cb="0"/><line nr="514" mi="5" ci="0" mb="0" cb="0"/><line nr="517" mi="2" ci="0" mb="0" cb="0"/><line nr="519" mi="2" ci="0" mb="0" cb="0"/><line nr="530" mi="6" ci="0" mb="0" cb="0"/><line nr="533" mi="6" ci="0" mb="0" cb="0"/><line nr="536" mi="6" ci="0" mb="0" cb="0"/><line nr="539" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="6" ci="0" mb="0" cb="0"/><line nr="544" mi="5" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="4" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="551" mi="0" ci="7" mb="1" cb="1"/><line nr="552" mi="0" ci="1" mb="0" cb="0"/><line nr="555" mi="0" ci="7" mb="1" cb="1"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="8" mb="0" cb="0"/><line nr="561" mi="0" ci="5" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="0"/><line nr="566" mi="0" ci="4" mb="0" cb="0"/><line nr="567" mi="0" ci="3" mb="0" cb="0"/><line nr="568" mi="0" ci="4" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="4" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="4" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="5" mb="0" cb="0"/><line nr="577" mi="0" ci="5" mb="0" cb="0"/><line nr="578" mi="0" ci="12" mb="0" cb="0"/><line nr="579" mi="0" ci="7" mb="0" cb="0"/><line nr="580" mi="0" ci="8" mb="0" cb="0"/><line nr="581" mi="0" ci="12" mb="0" cb="0"/><line nr="582" mi="3" ci="7" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="0"/><line nr="586" mi="1" ci="0" mb="0" cb="0"/><line nr="587" mi="3" ci="0" mb="0" cb="0"/><line nr="588" mi="5" ci="0" mb="0" cb="0"/><line nr="589" mi="5" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="0"/><line nr="606" mi="6" ci="0" mb="0" cb="0"/><line nr="609" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="6" ci="0" mb="0" cb="0"/><line nr="615" mi="6" ci="0" mb="0" cb="0"/><line nr="618" mi="6" ci="0" mb="0" cb="0"/><line nr="621" mi="6" ci="0" mb="0" cb="0"/><line nr="623" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="0" ci="4" mb="0" cb="0"/><line nr="626" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="7" mb="1" cb="1"/><line nr="631" mi="0" ci="1" mb="0" cb="0"/><line nr="634" mi="0" ci="7" mb="1" cb="1"/><line nr="635" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="8" mb="0" cb="0"/><line nr="640" mi="0" ci="5" mb="0" cb="0"/><line nr="642" mi="0" ci="4" mb="0" cb="0"/><line nr="644" mi="0" ci="3" mb="0" cb="0"/><line nr="645" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="3" mb="0" cb="0"/><line nr="647" mi="0" ci="4" mb="0" cb="0"/><line nr="648" mi="0" ci="3" mb="0" cb="0"/><line nr="649" mi="0" ci="4" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="0"/><line nr="653" mi="0" ci="4" mb="0" cb="0"/><line nr="654" mi="0" ci="3" mb="0" cb="0"/><line nr="655" mi="0" ci="4" mb="0" cb="0"/><line nr="656" mi="0" ci="3" mb="0" cb="0"/><line nr="657" mi="0" ci="5" mb="0" cb="0"/><line nr="658" mi="0" ci="5" mb="0" cb="0"/><line nr="659" mi="0" ci="12" mb="0" cb="0"/><line nr="660" mi="0" ci="7" mb="0" cb="0"/><line nr="661" mi="0" ci="8" mb="0" cb="0"/><line nr="662" mi="0" ci="9" mb="0" cb="0"/><line nr="663" mi="0" ci="12" mb="0" cb="0"/><line nr="664" mi="0" ci="10" mb="0" cb="0"/><line nr="665" mi="0" ci="4" mb="0" cb="0"/><line nr="668" mi="1" ci="0" mb="0" cb="0"/><line nr="669" mi="3" ci="0" mb="0" cb="0"/><line nr="670" mi="5" ci="0" mb="0" cb="0"/><line nr="671" mi="5" ci="0" mb="0" cb="0"/><line nr="674" mi="0" ci="2" mb="0" cb="0"/><line nr="676" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="0" ci="5" mb="0" cb="0"/><line nr="686" mi="6" ci="0" mb="0" cb="0"/><line nr="688" mi="5" ci="0" mb="0" cb="0"/><line nr="689" mi="5" ci="0" mb="0" cb="0"/><line nr="691" mi="4" ci="0" mb="0" cb="0"/><line nr="694" mi="6" ci="0" mb="0" cb="0"/><line nr="697" mi="0" ci="4" mb="0" cb="0"/><line nr="698" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="2" ci="0" mb="0" cb="0"/><line nr="702" mi="0" ci="7" mb="1" cb="1"/><line nr="703" mi="0" ci="1" mb="0" cb="0"/><line nr="706" mi="0" ci="7" mb="1" cb="1"/><line nr="707" mi="0" ci="1" mb="0" cb="0"/><line nr="711" mi="0" ci="8" mb="0" cb="0"/><line nr="712" mi="0" ci="5" mb="0" cb="0"/><line nr="715" mi="0" ci="4" mb="0" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="5" mb="0" cb="0"/><line nr="721" mi="0" ci="3" mb="0" cb="0"/><line nr="722" mi="0" ci="4" mb="0" cb="0"/><line nr="723" mi="0" ci="5" mb="0" cb="0"/><line nr="724" mi="0" ci="12" mb="1" cb="3"/><line nr="727" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="6" mb="0" cb="0"/><line nr="732" mi="0" ci="3" mb="0" cb="0"/><line nr="733" mi="0" ci="4" mb="0" cb="0"/><line nr="734" mi="0" ci="6" mb="0" cb="0"/><line nr="736" mi="0" ci="3" mb="0" cb="0"/><line nr="737" mi="0" ci="5" mb="0" cb="0"/><line nr="740" mi="1" ci="0" mb="0" cb="0"/><line nr="741" mi="3" ci="0" mb="0" cb="0"/><line nr="742" mi="5" ci="0" mb="0" cb="0"/><line nr="743" mi="5" ci="0" mb="0" cb="0"/><line nr="746" mi="0" ci="2" mb="0" cb="0"/><line nr="748" mi="0" ci="2" mb="0" cb="0"/><line nr="755" mi="6" ci="0" mb="0" cb="0"/><line nr="758" mi="6" ci="0" mb="0" cb="0"/><line nr="761" mi="0" ci="4" mb="0" cb="0"/><line nr="762" mi="0" ci="1" mb="0" cb="0"/><line nr="763" mi="2" ci="0" mb="0" cb="0"/><line nr="766" mi="0" ci="7" mb="1" cb="1"/><line nr="767" mi="0" ci="1" mb="0" cb="0"/><line nr="770" mi="0" ci="7" mb="1" cb="1"/><line nr="771" mi="0" ci="1" mb="0" cb="0"/><line nr="775" mi="0" ci="8" mb="0" cb="0"/><line nr="776" mi="0" ci="5" mb="0" cb="0"/><line nr="778" mi="0" ci="3" mb="0" cb="0"/><line nr="779" mi="0" ci="10" mb="1" cb="2"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><line nr="783" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="4" mb="0" cb="0"/><line nr="786" mi="0" ci="1" mb="0" cb="0"/><line nr="788" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="0"/><line nr="791" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="1" ci="0" mb="0" cb="0"/><line nr="797" mi="3" ci="0" mb="0" cb="0"/><line nr="798" mi="5" ci="0" mb="0" cb="0"/><line nr="799" mi="5" ci="0" mb="0" cb="0"/><line nr="802" mi="0" ci="2" mb="0" cb="0"/><line nr="804" mi="0" ci="2" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="814" mi="6" ci="0" mb="0" cb="0"/><line nr="817" mi="6" ci="0" mb="0" cb="0"/><line nr="820" mi="6" ci="0" mb="0" cb="0"/><line nr="823" mi="6" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="4" mb="0" cb="0"/><line nr="827" mi="0" ci="1" mb="0" cb="0"/><line nr="828" mi="2" ci="0" mb="0" cb="0"/><line nr="831" mi="0" ci="7" mb="1" cb="1"/><line nr="832" mi="0" ci="1" mb="0" cb="0"/><line nr="835" mi="0" ci="7" mb="1" cb="1"/><line nr="836" mi="0" ci="1" mb="0" cb="0"/><line nr="840" mi="0" ci="8" mb="0" cb="0"/><line nr="841" mi="0" ci="5" mb="0" cb="0"/><line nr="843" mi="0" ci="4" mb="0" cb="0"/><line nr="845" mi="0" ci="3" mb="0" cb="0"/><line nr="846" mi="0" ci="4" mb="0" cb="0"/><line nr="847" mi="0" ci="3" mb="0" cb="0"/><line nr="848" mi="0" ci="4" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="0"/><line nr="850" mi="0" ci="4" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="4" mb="0" cb="0"/><line nr="853" mi="1" ci="20" mb="1" cb="1"/><line nr="856" mi="1" ci="0" mb="0" cb="0"/><line nr="857" mi="3" ci="0" mb="0" cb="0"/><line nr="858" mi="5" ci="0" mb="0" cb="0"/><line nr="859" mi="5" ci="0" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="0"/><line nr="864" mi="0" ci="2" mb="0" cb="0"/><line nr="875" mi="6" ci="0" mb="0" cb="0"/><line nr="878" mi="6" ci="0" mb="0" cb="0"/><line nr="881" mi="6" ci="0" mb="0" cb="0"/><line nr="883" mi="5" ci="0" mb="0" cb="0"/><line nr="884" mi="5" ci="0" mb="0" cb="0"/><line nr="886" mi="6" ci="0" mb="0" cb="0"/><line nr="889" mi="0" ci="4" mb="0" cb="0"/><line nr="890" mi="0" ci="1" mb="0" cb="0"/><line nr="891" mi="2" ci="0" mb="0" cb="0"/><line nr="894" mi="0" ci="7" mb="1" cb="1"/><line nr="895" mi="0" ci="1" mb="0" cb="0"/><line nr="898" mi="0" ci="7" mb="1" cb="1"/><line nr="899" mi="0" ci="1" mb="0" cb="0"/><line nr="903" mi="0" ci="8" mb="0" cb="0"/><line nr="904" mi="0" ci="5" mb="0" cb="0"/><line nr="907" mi="0" ci="4" mb="0" cb="0"/><line nr="909" mi="0" ci="3" mb="0" cb="0"/><line nr="910" mi="0" ci="4" mb="0" cb="0"/><line nr="911" mi="0" ci="3" mb="0" cb="0"/><line nr="912" mi="0" ci="4" mb="0" cb="0"/><line nr="913" mi="0" ci="3" mb="0" cb="0"/><line nr="914" mi="0" ci="4" mb="0" cb="0"/><line nr="915" mi="0" ci="3" mb="0" cb="0"/><line nr="916" mi="0" ci="5" mb="0" cb="0"/><line nr="917" mi="0" ci="3" mb="0" cb="2"/><line nr="919" mi="0" ci="3" mb="0" cb="0"/><line nr="920" mi="0" ci="4" mb="0" cb="0"/><line nr="921" mi="0" ci="3" mb="0" cb="0"/><line nr="922" mi="0" ci="4" mb="0" cb="0"/><line nr="926" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="5" mb="0" cb="0"/><line nr="928" mi="0" ci="32" mb="0" cb="0"/><line nr="931" mi="1" ci="0" mb="0" cb="0"/><line nr="932" mi="3" ci="0" mb="0" cb="0"/><line nr="933" mi="5" ci="0" mb="0" cb="0"/><line nr="934" mi="5" ci="0" mb="0" cb="0"/><line nr="937" mi="0" ci="2" mb="0" cb="0"/><line nr="939" mi="0" ci="2" mb="0" cb="0"/><line nr="951" mi="6" ci="0" mb="0" cb="0"/><line nr="954" mi="6" ci="0" mb="0" cb="0"/><line nr="957" mi="6" ci="0" mb="0" cb="0"/><line nr="960" mi="6" ci="0" mb="0" cb="0"/><line nr="963" mi="6" ci="0" mb="0" cb="0"/><line nr="965" mi="5" ci="0" mb="0" cb="0"/><line nr="967" mi="6" ci="0" mb="0" cb="0"/><line nr="970" mi="0" ci="4" mb="0" cb="0"/><line nr="971" mi="0" ci="1" mb="0" cb="0"/><line nr="972" mi="0" ci="2" mb="0" cb="0"/><line nr="975" mi="0" ci="7" mb="1" cb="1"/><line nr="976" mi="0" ci="1" mb="0" cb="0"/><line nr="979" mi="0" ci="7" mb="1" cb="1"/><line nr="980" mi="0" ci="1" mb="0" cb="0"/><line nr="984" mi="0" ci="8" mb="0" cb="0"/><line nr="985" mi="0" ci="5" mb="0" cb="0"/><line nr="987" mi="0" ci="4" mb="0" cb="0"/><line nr="989" mi="0" ci="3" mb="0" cb="0"/><line nr="990" mi="0" ci="4" mb="0" cb="0"/><line nr="991" mi="0" ci="3" mb="0" cb="0"/><line nr="992" mi="0" ci="4" mb="0" cb="0"/><line nr="993" mi="0" ci="3" mb="0" cb="0"/><line nr="994" mi="0" ci="4" mb="0" cb="0"/><line nr="995" mi="0" ci="3" mb="0" cb="0"/><line nr="996" mi="0" ci="10" mb="0" cb="2"/><line nr="999" mi="0" ci="3" mb="0" cb="0"/><line nr="1000" mi="0" ci="4" mb="0" cb="0"/><line nr="1001" mi="0" ci="3" mb="0" cb="0"/><line nr="1002" mi="0" ci="4" mb="0" cb="0"/><line nr="1006" mi="0" ci="3" mb="0" cb="0"/><line nr="1007" mi="0" ci="4" mb="0" cb="0"/><line nr="1008" mi="0" ci="3" mb="0" cb="0"/><line nr="1009" mi="0" ci="4" mb="0" cb="0"/><line nr="1012" mi="1" ci="0" mb="0" cb="0"/><line nr="1013" mi="3" ci="0" mb="0" cb="0"/><line nr="1014" mi="5" ci="0" mb="0" cb="0"/><line nr="1015" mi="5" ci="0" mb="0" cb="0"/><line nr="1018" mi="0" ci="2" mb="0" cb="0"/><line nr="1020" mi="0" ci="2" mb="0" cb="0"/><line nr="1024" mi="5" ci="0" mb="0" cb="0"/><line nr="1026" mi="0" ci="4" mb="0" cb="0"/><line nr="1027" mi="0" ci="1" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="0" cb="0"/><line nr="1031" mi="0" ci="7" mb="1" cb="1"/><line nr="1032" mi="0" ci="1" mb="0" cb="0"/><line nr="1035" mi="0" ci="7" mb="1" cb="1"/><line nr="1036" mi="0" ci="1" mb="0" cb="0"/><line nr="1040" mi="0" ci="8" mb="0" cb="0"/><line nr="1041" mi="0" ci="5" mb="0" cb="0"/><line nr="1043" mi="0" ci="4" mb="0" cb="0"/><line nr="1045" mi="0" ci="3" mb="0" cb="0"/><line nr="1046" mi="0" ci="4" mb="0" cb="0"/><line nr="1047" mi="0" ci="9" mb="0" cb="0"/><line nr="1048" mi="0" ci="4" mb="0" cb="0"/><line nr="1049" mi="0" ci="16" mb="0" cb="0"/><line nr="1050" mi="0" ci="9" mb="0" cb="0"/><line nr="1053" mi="1" ci="0" mb="0" cb="0"/><line nr="1054" mi="3" ci="0" mb="0" cb="0"/><line nr="1055" mi="5" ci="0" mb="0" cb="0"/><line nr="1056" mi="5" ci="0" mb="0" cb="0"/><line nr="1059" mi="0" ci="2" mb="0" cb="0"/><line nr="1061" mi="0" ci="2" mb="0" cb="0"/><line nr="1065" mi="5" ci="0" mb="0" cb="0"/><line nr="1067" mi="0" ci="4" mb="0" cb="0"/><line nr="1068" mi="0" ci="1" mb="0" cb="0"/><line nr="1069" mi="0" ci="2" mb="0" cb="0"/><line nr="1072" mi="0" ci="7" mb="1" cb="1"/><line nr="1073" mi="0" ci="1" mb="0" cb="0"/><line nr="1076" mi="0" ci="7" mb="1" cb="1"/><line nr="1077" mi="0" ci="1" mb="0" cb="0"/><line nr="1081" mi="0" ci="8" mb="0" cb="0"/><line nr="1082" mi="0" ci="5" mb="0" cb="0"/><line nr="1084" mi="0" ci="4" mb="0" cb="0"/><line nr="1086" mi="0" ci="3" mb="0" cb="0"/><line nr="1087" mi="0" ci="4" mb="0" cb="0"/><line nr="1088" mi="0" ci="4" mb="0" cb="0"/><line nr="1089" mi="0" ci="9" mb="0" cb="0"/><line nr="1090" mi="0" ci="19" mb="0" cb="0"/><line nr="1091" mi="0" ci="7" mb="0" cb="0"/><line nr="1094" mi="1" ci="0" mb="0" cb="0"/><line nr="1095" mi="3" ci="0" mb="0" cb="0"/><line nr="1096" mi="5" ci="0" mb="0" cb="0"/><line nr="1097" mi="5" ci="0" mb="0" cb="0"/><line nr="1100" mi="0" ci="2" mb="0" cb="0"/><line nr="1102" mi="0" ci="2" mb="0" cb="0"/><line nr="1111" mi="6" ci="0" mb="0" cb="0"/><line nr="1114" mi="6" ci="0" mb="0" cb="0"/><line nr="1117" mi="6" ci="0" mb="0" cb="0"/><line nr="1120" mi="0" ci="4" mb="0" cb="0"/><line nr="1121" mi="0" ci="1" mb="0" cb="0"/><line nr="1122" mi="2" ci="0" mb="0" cb="0"/><line nr="1125" mi="0" ci="7" mb="1" cb="1"/><line nr="1126" mi="0" ci="1" mb="0" cb="0"/><line nr="1129" mi="0" ci="7" mb="1" cb="1"/><line nr="1130" mi="0" ci="1" mb="0" cb="0"/><line nr="1134" mi="0" ci="8" mb="0" cb="0"/><line nr="1135" mi="0" ci="5" mb="0" cb="0"/><line nr="1137" mi="0" ci="3" mb="0" cb="0"/><line nr="1138" mi="0" ci="10" mb="1" cb="3"/><line nr="1140" mi="0" ci="4" mb="0" cb="0"/><line nr="1142" mi="0" ci="3" mb="0" cb="0"/><line nr="1143" mi="0" ci="4" mb="0" cb="0"/><line nr="1144" mi="0" ci="24" mb="0" cb="0"/><line nr="1146" mi="0" ci="1" mb="0" cb="0"/><line nr="1148" mi="0" ci="4" mb="0" cb="0"/><line nr="1150" mi="0" ci="3" mb="0" cb="0"/><line nr="1151" mi="0" ci="4" mb="0" cb="0"/><line nr="1152" mi="0" ci="24" mb="0" cb="0"/><line nr="1154" mi="0" ci="1" mb="0" cb="0"/><line nr="1156" mi="0" ci="4" mb="0" cb="0"/><line nr="1158" mi="0" ci="3" mb="0" cb="0"/><line nr="1159" mi="0" ci="4" mb="0" cb="0"/><line nr="1160" mi="0" ci="16" mb="0" cb="0"/><line nr="1165" mi="1" ci="0" mb="0" cb="0"/><line nr="1166" mi="3" ci="0" mb="0" cb="0"/><line nr="1167" mi="5" ci="0" mb="0" cb="0"/><line nr="1168" mi="5" ci="0" mb="0" cb="0"/><line nr="1171" mi="0" ci="2" mb="0" cb="0"/><line nr="1173" mi="0" ci="2" mb="0" cb="0"/><line nr="1180" mi="6" ci="0" mb="0" cb="0"/><line nr="1183" mi="6" ci="0" mb="0" cb="0"/><line nr="1186" mi="0" ci="4" mb="0" cb="0"/><line nr="1187" mi="0" ci="1" mb="0" cb="0"/><line nr="1188" mi="2" ci="0" mb="0" cb="0"/><line nr="1191" mi="0" ci="7" mb="1" cb="1"/><line nr="1192" mi="0" ci="1" mb="0" cb="0"/><line nr="1195" mi="0" ci="7" mb="1" cb="1"/><line nr="1196" mi="0" ci="1" mb="0" cb="0"/><line nr="1200" mi="0" ci="8" mb="0" cb="0"/><line nr="1201" mi="0" ci="5" mb="0" cb="0"/><line nr="1203" mi="0" ci="4" mb="0" cb="0"/><line nr="1205" mi="0" ci="3" mb="0" cb="0"/><line nr="1206" mi="0" ci="4" mb="0" cb="0"/><line nr="1207" mi="0" ci="3" mb="0" cb="0"/><line nr="1208" mi="0" ci="4" mb="0" cb="0"/><line nr="1211" mi="1" ci="0" mb="0" cb="0"/><line nr="1212" mi="3" ci="0" mb="0" cb="0"/><line nr="1213" mi="5" ci="0" mb="0" cb="0"/><line nr="1214" mi="5" ci="0" mb="0" cb="0"/><line nr="1217" mi="0" ci="2" mb="0" cb="0"/><line nr="1219" mi="0" ci="2" mb="0" cb="0"/><line nr="1226" mi="0" ci="5" mb="0" cb="0"/><line nr="1228" mi="6" ci="0" mb="0" cb="0"/><line nr="1231" mi="6" ci="0" mb="0" cb="0"/><line nr="1234" mi="6" ci="0" mb="0" cb="0"/><line nr="1237" mi="0" ci="4" mb="0" cb="0"/><line nr="1238" mi="0" ci="1" mb="0" cb="0"/><line nr="1239" mi="2" ci="0" mb="0" cb="0"/><line nr="1242" mi="0" ci="7" mb="1" cb="1"/><line nr="1243" mi="0" ci="1" mb="0" cb="0"/><line nr="1246" mi="0" ci="7" mb="1" cb="1"/><line nr="1247" mi="0" ci="1" mb="0" cb="0"/><line nr="1251" mi="0" ci="8" mb="0" cb="0"/><line nr="1252" mi="0" ci="5" mb="0" cb="0"/><line nr="1254" mi="0" ci="4" mb="0" cb="0"/><line nr="1256" mi="0" ci="3" mb="0" cb="0"/><line nr="1257" mi="0" ci="4" mb="0" cb="0"/><line nr="1258" mi="0" ci="3" mb="0" cb="0"/><line nr="1259" mi="0" ci="4" mb="0" cb="0"/><line nr="1260" mi="0" ci="3" mb="0" cb="0"/><line nr="1261" mi="0" ci="4" mb="0" cb="0"/><line nr="1262" mi="0" ci="6" mb="0" cb="0"/><line nr="1265" mi="1" ci="0" mb="0" cb="0"/><line nr="1266" mi="3" ci="0" mb="0" cb="0"/><line nr="1267" mi="5" ci="0" mb="0" cb="0"/><line nr="1268" mi="5" ci="0" mb="0" cb="0"/><line nr="1271" mi="0" ci="2" mb="0" cb="0"/><line nr="1273" mi="0" ci="2" mb="0" cb="0"/><line nr="1280" mi="6" ci="0" mb="0" cb="0"/><line nr="1283" mi="6" ci="0" mb="0" cb="0"/><line nr="1286" mi="0" ci="4" mb="0" cb="0"/><line nr="1287" mi="0" ci="1" mb="0" cb="0"/><line nr="1288" mi="2" ci="0" mb="0" cb="0"/><line nr="1291" mi="0" ci="7" mb="1" cb="1"/><line nr="1292" mi="0" ci="1" mb="0" cb="0"/><line nr="1295" mi="0" ci="7" mb="1" cb="1"/><line nr="1296" mi="0" ci="1" mb="0" cb="0"/><line nr="1300" mi="0" ci="8" mb="0" cb="0"/><line nr="1301" mi="0" ci="5" mb="0" cb="0"/><line nr="1303" mi="0" ci="4" mb="0" cb="0"/><line nr="1305" mi="0" ci="3" mb="0" cb="0"/><line nr="1306" mi="0" ci="4" mb="0" cb="0"/><line nr="1307" mi="0" ci="3" mb="0" cb="0"/><line nr="1308" mi="0" ci="4" mb="0" cb="0"/><line nr="1311" mi="1" ci="0" mb="0" cb="0"/><line nr="1312" mi="3" ci="0" mb="0" cb="0"/><line nr="1313" mi="5" ci="0" mb="0" cb="0"/><line nr="1314" mi="5" ci="0" mb="0" cb="0"/><line nr="1317" mi="0" ci="2" mb="0" cb="0"/><line nr="1319" mi="0" ci="2" mb="0" cb="0"/><line nr="1327" mi="0" ci="5" mb="0" cb="0"/><line nr="1329" mi="0" ci="5" mb="0" cb="0"/><line nr="1331" mi="0" ci="5" mb="0" cb="0"/><line nr="1333" mi="4" ci="0" mb="0" cb="0"/><line nr="1336" mi="6" ci="0" mb="0" cb="0"/><line nr="1339" mi="4" ci="0" mb="0" cb="0"/><line nr="1342" mi="6" ci="0" mb="0" cb="0"/><line nr="1345" mi="4" ci="0" mb="0" cb="0"/><line nr="1348" mi="6" ci="0" mb="0" cb="0"/><line nr="1351" mi="0" ci="4" mb="0" cb="0"/><line nr="1352" mi="0" ci="1" mb="0" cb="0"/><line nr="1353" mi="2" ci="0" mb="0" cb="0"/><line nr="1356" mi="0" ci="7" mb="1" cb="1"/><line nr="1357" mi="0" ci="1" mb="0" cb="0"/><line nr="1360" mi="0" ci="7" mb="1" cb="1"/><line nr="1361" mi="0" ci="1" mb="0" cb="0"/><line nr="1365" mi="0" ci="8" mb="0" cb="0"/><line nr="1366" mi="0" ci="5" mb="0" cb="0"/><line nr="1369" mi="0" ci="4" mb="0" cb="0"/><line nr="1371" mi="0" ci="3" mb="0" cb="0"/><line nr="1372" mi="0" ci="4" mb="0" cb="0"/><line nr="1373" mi="0" ci="6" mb="0" cb="0"/><line nr="1374" mi="0" ci="3" mb="0" cb="0"/><line nr="1375" mi="0" ci="4" mb="0" cb="0"/><line nr="1376" mi="0" ci="6" mb="0" cb="0"/><line nr="1377" mi="0" ci="3" mb="0" cb="0"/><line nr="1378" mi="0" ci="5" mb="1" cb="3"/><line nr="1382" mi="0" ci="1" mb="0" cb="0"/><line nr="1397" mi="0" ci="3" mb="0" cb="0"/><line nr="1398" mi="0" ci="4" mb="0" cb="0"/><line nr="1399" mi="0" ci="5" mb="0" cb="0"/><line nr="1403" mi="0" ci="3" mb="0" cb="0"/><line nr="1404" mi="0" ci="4" mb="0" cb="0"/><line nr="1405" mi="0" ci="6" mb="0" cb="0"/><line nr="1406" mi="0" ci="3" mb="0" cb="0"/><line nr="1407" mi="0" ci="4" mb="0" cb="0"/><line nr="1408" mi="0" ci="6" mb="0" cb="0"/><line nr="1411" mi="0" ci="3" mb="0" cb="0"/><line nr="1412" mi="0" ci="4" mb="0" cb="0"/><line nr="1413" mi="0" ci="5" mb="0" cb="0"/><line nr="1414" mi="0" ci="12" mb="1" cb="3"/><line nr="1416" mi="0" ci="1" mb="0" cb="0"/><line nr="1419" mi="0" ci="3" mb="0" cb="0"/><line nr="1420" mi="0" ci="4" mb="0" cb="0"/><line nr="1421" mi="0" ci="5" mb="0" cb="0"/><line nr="1425" mi="0" ci="3" mb="0" cb="0"/><line nr="1426" mi="0" ci="4" mb="0" cb="0"/><line nr="1427" mi="0" ci="6" mb="0" cb="0"/><line nr="1428" mi="0" ci="3" mb="0" cb="0"/><line nr="1429" mi="0" ci="4" mb="0" cb="0"/><line nr="1430" mi="0" ci="6" mb="0" cb="0"/><line nr="1433" mi="0" ci="3" mb="0" cb="0"/><line nr="1434" mi="0" ci="4" mb="0" cb="0"/><line nr="1435" mi="0" ci="5" mb="0" cb="0"/><line nr="1436" mi="0" ci="3" mb="1" cb="1"/><line nr="1438" mi="0" ci="1" mb="0" cb="0"/><line nr="1440" mi="5" ci="0" mb="0" cb="0"/><line nr="1442" mi="0" ci="9" mb="0" cb="0"/><line nr="1443" mi="0" ci="9" mb="0" cb="0"/><line nr="1444" mi="0" ci="9" mb="0" cb="0"/><line nr="1447" mi="1" ci="0" mb="0" cb="0"/><line nr="1448" mi="3" ci="0" mb="0" cb="0"/><line nr="1449" mi="5" ci="0" mb="0" cb="0"/><line nr="1450" mi="5" ci="0" mb="0" cb="0"/><line nr="1453" mi="0" ci="2" mb="0" cb="0"/><line nr="1455" mi="0" ci="2" mb="0" cb="0"/><line nr="1464" mi="6" ci="0" mb="0" cb="0"/><line nr="1467" mi="6" ci="0" mb="0" cb="0"/><line nr="1470" mi="6" ci="0" mb="0" cb="0"/><line nr="1473" mi="0" ci="4" mb="0" cb="0"/><line nr="1474" mi="0" ci="1" mb="0" cb="0"/><line nr="1475" mi="2" ci="0" mb="0" cb="0"/><line nr="1478" mi="0" ci="7" mb="1" cb="1"/><line nr="1479" mi="0" ci="1" mb="0" cb="0"/><line nr="1482" mi="0" ci="7" mb="1" cb="1"/><line nr="1483" mi="0" ci="1" mb="0" cb="0"/><line nr="1487" mi="0" ci="8" mb="0" cb="0"/><line nr="1488" mi="0" ci="5" mb="0" cb="0"/><line nr="1490" mi="0" ci="4" mb="0" cb="0"/><line nr="1492" mi="0" ci="3" mb="0" cb="0"/><line nr="1493" mi="0" ci="4" mb="0" cb="0"/><line nr="1494" mi="0" ci="3" mb="0" cb="0"/><line nr="1495" mi="0" ci="4" mb="0" cb="0"/><line nr="1496" mi="0" ci="3" mb="0" cb="0"/><line nr="1497" mi="0" ci="4" mb="0" cb="0"/><line nr="1498" mi="3" ci="20" mb="0" cb="0"/><line nr="1501" mi="1" ci="0" mb="0" cb="0"/><line nr="1502" mi="3" ci="0" mb="0" cb="0"/><line nr="1503" mi="5" ci="0" mb="0" cb="0"/><line nr="1504" mi="5" ci="0" mb="0" cb="0"/><line nr="1507" mi="0" ci="2" mb="0" cb="0"/><line nr="1509" mi="0" ci="2" mb="0" cb="0"/><line nr="1517" mi="6" ci="0" mb="0" cb="0"/><line nr="1520" mi="6" ci="0" mb="0" cb="0"/><line nr="1523" mi="6" ci="0" mb="0" cb="0"/><line nr="1526" mi="6" ci="0" mb="0" cb="0"/><line nr="1529" mi="0" ci="4" mb="0" cb="0"/><line nr="1530" mi="0" ci="1" mb="0" cb="0"/><line nr="1531" mi="0" ci="2" mb="0" cb="0"/><line nr="1534" mi="0" ci="7" mb="1" cb="1"/><line nr="1535" mi="0" ci="1" mb="0" cb="0"/><line nr="1538" mi="0" ci="7" mb="1" cb="1"/><line nr="1539" mi="0" ci="1" mb="0" cb="0"/><line nr="1543" mi="0" ci="8" mb="0" cb="0"/><line nr="1544" mi="0" ci="5" mb="0" cb="0"/><line nr="1546" mi="0" ci="4" mb="0" cb="0"/><line nr="1548" mi="0" ci="3" mb="0" cb="0"/><line nr="1549" mi="0" ci="3" mb="0" cb="0"/><line nr="1550" mi="0" ci="3" mb="0" cb="0"/><line nr="1551" mi="0" ci="4" mb="0" cb="0"/><line nr="1552" mi="0" ci="3" mb="0" cb="0"/><line nr="1553" mi="0" ci="4" mb="0" cb="0"/><line nr="1554" mi="0" ci="3" mb="0" cb="0"/><line nr="1555" mi="0" ci="3" mb="0" cb="0"/><line nr="1558" mi="1" ci="0" mb="0" cb="0"/><line nr="1559" mi="3" ci="0" mb="0" cb="0"/><line nr="1560" mi="5" ci="0" mb="0" cb="0"/><line nr="1561" mi="5" ci="0" mb="0" cb="0"/><line nr="1564" mi="0" ci="2" mb="0" cb="0"/><line nr="1566" mi="0" ci="2" mb="0" cb="0"/><line nr="1570" mi="5" ci="0" mb="0" cb="0"/><line nr="1572" mi="0" ci="4" mb="0" cb="0"/><line nr="1573" mi="0" ci="1" mb="0" cb="0"/><line nr="1574" mi="0" ci="2" mb="0" cb="0"/><line nr="1577" mi="0" ci="7" mb="1" cb="1"/><line nr="1578" mi="0" ci="1" mb="0" cb="0"/><line nr="1581" mi="0" ci="7" mb="1" cb="1"/><line nr="1582" mi="0" ci="1" mb="0" cb="0"/><line nr="1586" mi="0" ci="8" mb="0" cb="0"/><line nr="1587" mi="0" ci="5" mb="0" cb="0"/><line nr="1589" mi="0" ci="4" mb="0" cb="0"/><line nr="1591" mi="0" ci="3" mb="0" cb="0"/><line nr="1592" mi="0" ci="4" mb="0" cb="0"/><line nr="1593" mi="0" ci="9" mb="0" cb="0"/><line nr="1596" mi="1" ci="0" mb="0" cb="0"/><line nr="1597" mi="3" ci="0" mb="0" cb="0"/><line nr="1598" mi="5" ci="0" mb="0" cb="0"/><line nr="1599" mi="5" ci="0" mb="0" cb="0"/><line nr="1602" mi="0" ci="2" mb="0" cb="0"/><line nr="1604" mi="0" ci="2" mb="0" cb="0"/><line nr="1608" mi="5" ci="0" mb="0" cb="0"/><line nr="1610" mi="0" ci="4" mb="0" cb="0"/><line nr="1611" mi="0" ci="1" mb="0" cb="0"/><line nr="1612" mi="0" ci="2" mb="0" cb="0"/><line nr="1615" mi="0" ci="7" mb="1" cb="1"/><line nr="1616" mi="0" ci="1" mb="0" cb="0"/><line nr="1619" mi="0" ci="7" mb="1" cb="1"/><line nr="1620" mi="0" ci="1" mb="0" cb="0"/><line nr="1624" mi="0" ci="8" mb="0" cb="0"/><line nr="1625" mi="0" ci="5" mb="0" cb="0"/><line nr="1627" mi="0" ci="4" mb="0" cb="0"/><line nr="1629" mi="0" ci="3" mb="0" cb="0"/><line nr="1630" mi="0" ci="4" mb="0" cb="0"/><line nr="1631" mi="0" ci="11" mb="0" cb="0"/><line nr="1632" mi="0" ci="7" mb="0" cb="0"/><line nr="1635" mi="1" ci="0" mb="0" cb="0"/><line nr="1636" mi="3" ci="0" mb="0" cb="0"/><line nr="1637" mi="5" ci="0" mb="0" cb="0"/><line nr="1638" mi="5" ci="0" mb="0" cb="0"/><line nr="1641" mi="0" ci="2" mb="0" cb="0"/><line nr="1643" mi="0" ci="2" mb="0" cb="0"/><line nr="1650" mi="0" ci="5" mb="0" cb="0"/><line nr="1652" mi="0" ci="5" mb="0" cb="0"/><line nr="1653" mi="5" ci="0" mb="0" cb="0"/><line nr="1655" mi="6" ci="0" mb="0" cb="0"/><line nr="1658" mi="4" ci="0" mb="0" cb="0"/><line nr="1661" mi="6" ci="0" mb="0" cb="0"/><line nr="1664" mi="4" ci="0" mb="0" cb="0"/><line nr="1667" mi="6" ci="0" mb="0" cb="0"/><line nr="1670" mi="0" ci="4" mb="0" cb="0"/><line nr="1671" mi="0" ci="1" mb="0" cb="0"/><line nr="1672" mi="0" ci="2" mb="0" cb="0"/><line nr="1675" mi="0" ci="7" mb="1" cb="1"/><line nr="1676" mi="0" ci="1" mb="0" cb="0"/><line nr="1679" mi="0" ci="7" mb="1" cb="1"/><line nr="1680" mi="0" ci="1" mb="0" cb="0"/><line nr="1684" mi="0" ci="8" mb="0" cb="0"/><line nr="1685" mi="0" ci="5" mb="0" cb="0"/><line nr="1688" mi="0" ci="4" mb="0" cb="0"/><line nr="1690" mi="0" ci="3" mb="0" cb="0"/><line nr="1691" mi="0" ci="10" mb="1" cb="2"/><line nr="1695" mi="0" ci="1" mb="0" cb="0"/><line nr="1698" mi="0" ci="3" mb="0" cb="0"/><line nr="1699" mi="0" ci="4" mb="0" cb="0"/><line nr="1700" mi="0" ci="3" mb="0" cb="0"/><line nr="1701" mi="0" ci="4" mb="0" cb="0"/><line nr="1702" mi="0" ci="5" mb="0" cb="0"/><line nr="1706" mi="0" ci="3" mb="0" cb="0"/><line nr="1707" mi="0" ci="4" mb="0" cb="0"/><line nr="1708" mi="0" ci="6" mb="0" cb="0"/><line nr="1709" mi="0" ci="3" mb="0" cb="0"/><line nr="1710" mi="0" ci="4" mb="0" cb="0"/><line nr="1711" mi="0" ci="6" mb="0" cb="0"/><line nr="1714" mi="0" ci="3" mb="0" cb="0"/><line nr="1715" mi="0" ci="4" mb="0" cb="0"/><line nr="1716" mi="0" ci="5" mb="0" cb="0"/><line nr="1717" mi="0" ci="3" mb="1" cb="1"/><line nr="1718" mi="0" ci="3" mb="0" cb="0"/><line nr="1719" mi="0" ci="4" mb="0" cb="0"/><line nr="1723" mi="0" ci="18" mb="0" cb="0"/><line nr="1724" mi="0" ci="8" mb="0" cb="0"/><line nr="1727" mi="1" ci="0" mb="0" cb="0"/><line nr="1728" mi="3" ci="0" mb="0" cb="0"/><line nr="1729" mi="5" ci="0" mb="0" cb="0"/><line nr="1730" mi="5" ci="0" mb="0" cb="0"/><line nr="1733" mi="0" ci="2" mb="0" cb="0"/><line nr="1735" mi="0" ci="2" mb="0" cb="0"/><line nr="1741" mi="0" ci="5" mb="0" cb="0"/><line nr="1743" mi="0" ci="5" mb="0" cb="0"/><line nr="1746" mi="4" ci="0" mb="0" cb="0"/><line nr="1749" mi="6" ci="0" mb="0" cb="0"/><line nr="1752" mi="6" ci="0" mb="0" cb="0"/><line nr="1754" mi="4" ci="0" mb="0" cb="0"/><line nr="1756" mi="5" ci="0" mb="0" cb="0"/><line nr="1759" mi="0" ci="4" mb="0" cb="0"/><line nr="1760" mi="0" ci="1" mb="0" cb="0"/><line nr="1761" mi="2" ci="0" mb="0" cb="0"/><line nr="1764" mi="0" ci="7" mb="1" cb="1"/><line nr="1765" mi="0" ci="1" mb="0" cb="0"/><line nr="1768" mi="0" ci="7" mb="1" cb="1"/><line nr="1769" mi="0" ci="1" mb="0" cb="0"/><line nr="1773" mi="0" ci="8" mb="0" cb="0"/><line nr="1774" mi="0" ci="5" mb="0" cb="0"/><line nr="1778" mi="0" ci="4" mb="0" cb="0"/><line nr="1780" mi="0" ci="3" mb="0" cb="0"/><line nr="1781" mi="0" ci="4" mb="0" cb="0"/><line nr="1782" mi="0" ci="10" mb="0" cb="0"/><line nr="1783" mi="0" ci="5" mb="1" cb="3"/><line nr="1784" mi="0" ci="3" mb="1" cb="1"/><line nr="1787" mi="0" ci="3" mb="0" cb="0"/><line nr="1788" mi="0" ci="4" mb="0" cb="0"/><line nr="1789" mi="0" ci="6" mb="0" cb="0"/><line nr="1790" mi="0" ci="3" mb="0" cb="0"/><line nr="1791" mi="0" ci="5" mb="0" cb="0"/><line nr="1792" mi="0" ci="6" mb="0" cb="0"/><line nr="1796" mi="0" ci="3" mb="0" cb="0"/><line nr="1797" mi="0" ci="4" mb="0" cb="0"/><line nr="1798" mi="0" ci="11" mb="0" cb="0"/><line nr="1800" mi="0" ci="3" mb="0" cb="0"/><line nr="1801" mi="0" ci="5" mb="1" cb="3"/><line nr="1823" mi="0" ci="3" mb="0" cb="0"/><line nr="1824" mi="0" ci="4" mb="0" cb="0"/><line nr="1825" mi="0" ci="6" mb="0" cb="0"/><line nr="1826" mi="0" ci="3" mb="0" cb="0"/><line nr="1827" mi="0" ci="5" mb="0" cb="0"/><line nr="1828" mi="0" ci="3" mb="1" cb="1"/><line nr="1830" mi="3" ci="0" mb="0" cb="0"/><line nr="1831" mi="5" ci="0" mb="0" cb="0"/><line nr="1832" mi="7" ci="0" mb="0" cb="0"/><line nr="1840" mi="0" ci="3" mb="0" cb="0"/><line nr="1841" mi="0" ci="4" mb="0" cb="0"/><line nr="1843" mi="0" ci="1" mb="0" cb="0"/><line nr="1847" mi="0" ci="1" mb="0" cb="0"/><line nr="1849" mi="5" ci="0" mb="0" cb="0"/><line nr="1851" mi="0" ci="21" mb="0" cb="0"/><line nr="1854" mi="1" ci="0" mb="0" cb="0"/><line nr="1855" mi="3" ci="0" mb="0" cb="0"/><line nr="1856" mi="5" ci="0" mb="0" cb="0"/><line nr="1857" mi="5" ci="0" mb="0" cb="0"/><line nr="1860" mi="0" ci="2" mb="0" cb="0"/><line nr="1862" mi="0" ci="2" mb="0" cb="0"/><line nr="1868" mi="5" ci="0" mb="0" cb="0"/><line nr="1870" mi="6" ci="0" mb="0" cb="0"/><line nr="1873" mi="0" ci="4" mb="0" cb="0"/><line nr="1874" mi="0" ci="1" mb="0" cb="0"/><line nr="1875" mi="2" ci="0" mb="0" cb="0"/><line nr="1878" mi="0" ci="7" mb="1" cb="1"/><line nr="1879" mi="0" ci="1" mb="0" cb="0"/><line nr="1882" mi="0" ci="7" mb="1" cb="1"/><line nr="1883" mi="0" ci="1" mb="0" cb="0"/><line nr="1887" mi="0" ci="8" mb="0" cb="0"/><line nr="1888" mi="0" ci="5" mb="0" cb="0"/><line nr="1890" mi="0" ci="4" mb="0" cb="0"/><line nr="1892" mi="0" ci="3" mb="0" cb="0"/><line nr="1893" mi="0" ci="4" mb="0" cb="0"/><line nr="1894" mi="0" ci="3" mb="0" cb="0"/><line nr="1895" mi="0" ci="4" mb="0" cb="0"/><line nr="1896" mi="0" ci="6" mb="0" cb="0"/><line nr="1899" mi="1" ci="0" mb="0" cb="0"/><line nr="1900" mi="3" ci="0" mb="0" cb="0"/><line nr="1901" mi="5" ci="0" mb="0" cb="0"/><line nr="1902" mi="5" ci="0" mb="0" cb="0"/><line nr="1905" mi="0" ci="2" mb="0" cb="0"/><line nr="1907" mi="0" ci="2" mb="0" cb="0"/><line nr="1915" mi="6" ci="0" mb="0" cb="0"/><line nr="1918" mi="6" ci="0" mb="0" cb="0"/><line nr="1921" mi="0" ci="4" mb="0" cb="0"/><line nr="1922" mi="0" ci="1" mb="0" cb="0"/><line nr="1923" mi="2" ci="0" mb="0" cb="0"/><line nr="1926" mi="0" ci="7" mb="1" cb="1"/><line nr="1927" mi="0" ci="1" mb="0" cb="0"/><line nr="1930" mi="0" ci="7" mb="1" cb="1"/><line nr="1931" mi="0" ci="1" mb="0" cb="0"/><line nr="1935" mi="0" ci="8" mb="0" cb="0"/><line nr="1936" mi="0" ci="5" mb="0" cb="0"/><line nr="1938" mi="0" ci="4" mb="0" cb="0"/><line nr="1940" mi="0" ci="3" mb="0" cb="0"/><line nr="1941" mi="0" ci="10" mb="1" cb="2"/><line nr="1944" mi="0" ci="3" mb="0" cb="0"/><line nr="1945" mi="0" ci="4" mb="0" cb="0"/><line nr="1947" mi="0" ci="1" mb="0" cb="0"/><line nr="1950" mi="0" ci="3" mb="0" cb="0"/><line nr="1951" mi="0" ci="4" mb="0" cb="0"/><line nr="1955" mi="0" ci="13" mb="0" cb="2"/><line nr="1958" mi="1" ci="0" mb="0" cb="0"/><line nr="1959" mi="3" ci="0" mb="0" cb="0"/><line nr="1960" mi="5" ci="0" mb="0" cb="0"/><line nr="1961" mi="5" ci="0" mb="0" cb="0"/><line nr="1964" mi="0" ci="2" mb="0" cb="0"/><line nr="1966" mi="0" ci="2" mb="0" cb="0"/><line nr="1973" mi="0" ci="5" mb="0" cb="0"/><line nr="1975" mi="0" ci="5" mb="0" cb="0"/><line nr="1977" mi="6" ci="0" mb="0" cb="0"/><line nr="1980" mi="4" ci="0" mb="0" cb="0"/><line nr="1983" mi="6" ci="0" mb="0" cb="0"/><line nr="1986" mi="4" ci="0" mb="0" cb="0"/><line nr="1989" mi="6" ci="0" mb="0" cb="0"/><line nr="1992" mi="0" ci="4" mb="0" cb="0"/><line nr="1993" mi="0" ci="1" mb="0" cb="0"/><line nr="1994" mi="2" ci="0" mb="0" cb="0"/><line nr="1997" mi="0" ci="7" mb="1" cb="1"/><line nr="1998" mi="0" ci="1" mb="0" cb="0"/><line nr="2001" mi="0" ci="7" mb="1" cb="1"/><line nr="2002" mi="0" ci="1" mb="0" cb="0"/><line nr="2006" mi="0" ci="8" mb="0" cb="0"/><line nr="2007" mi="0" ci="5" mb="0" cb="0"/><line nr="2010" mi="0" ci="4" mb="0" cb="0"/><line nr="2012" mi="0" ci="3" mb="0" cb="0"/><line nr="2013" mi="0" ci="4" mb="0" cb="0"/><line nr="2014" mi="0" ci="3" mb="0" cb="0"/><line nr="2015" mi="0" ci="4" mb="0" cb="0"/><line nr="2016" mi="0" ci="5" mb="0" cb="0"/><line nr="2017" mi="0" ci="3" mb="1" cb="1"/><line nr="2020" mi="3" ci="0" mb="0" cb="0"/><line nr="2021" mi="4" ci="0" mb="0" cb="0"/><line nr="2022" mi="6" ci="0" mb="0" cb="0"/><line nr="2023" mi="3" ci="0" mb="0" cb="0"/><line nr="2024" mi="4" ci="0" mb="0" cb="0"/><line nr="2025" mi="6" ci="0" mb="0" cb="0"/><line nr="2028" mi="3" ci="0" mb="0" cb="0"/><line nr="2029" mi="4" ci="0" mb="0" cb="0"/><line nr="2030" mi="6" ci="0" mb="0" cb="0"/><line nr="2032" mi="3" ci="10" mb="0" cb="0"/><line nr="2035" mi="1" ci="0" mb="0" cb="0"/><line nr="2036" mi="3" ci="0" mb="0" cb="0"/><line nr="2037" mi="5" ci="0" mb="0" cb="0"/><line nr="2038" mi="5" ci="0" mb="0" cb="0"/><line nr="2041" mi="0" ci="2" mb="0" cb="0"/><line nr="2043" mi="0" ci="2" mb="0" cb="0"/><line nr="2050" mi="6" ci="0" mb="0" cb="0"/><line nr="2053" mi="0" ci="4" mb="0" cb="0"/><line nr="2054" mi="0" ci="1" mb="0" cb="0"/><line nr="2055" mi="2" ci="0" mb="0" cb="0"/><line nr="2058" mi="0" ci="7" mb="1" cb="1"/><line nr="2059" mi="0" ci="1" mb="0" cb="0"/><line nr="2062" mi="0" ci="7" mb="1" cb="1"/><line nr="2063" mi="0" ci="1" mb="0" cb="0"/><line nr="2067" mi="0" ci="8" mb="0" cb="0"/><line nr="2068" mi="0" ci="5" mb="0" cb="0"/><line nr="2070" mi="0" ci="4" mb="0" cb="0"/><line nr="2072" mi="0" ci="3" mb="0" cb="0"/><line nr="2073" mi="0" ci="4" mb="0" cb="0"/><line nr="2074" mi="0" ci="6" mb="0" cb="0"/><line nr="2077" mi="1" ci="0" mb="0" cb="0"/><line nr="2078" mi="3" ci="0" mb="0" cb="0"/><line nr="2079" mi="5" ci="0" mb="0" cb="0"/><line nr="2080" mi="5" ci="0" mb="0" cb="0"/><line nr="2083" mi="0" ci="2" mb="0" cb="0"/><line nr="2085" mi="0" ci="2" mb="0" cb="0"/><line nr="2094" mi="5" ci="0" mb="0" cb="0"/><line nr="2096" mi="6" ci="0" mb="0" cb="0"/><line nr="2099" mi="6" ci="0" mb="0" cb="0"/><line nr="2102" mi="6" ci="0" mb="0" cb="0"/><line nr="2105" mi="6" ci="0" mb="0" cb="0"/><line nr="2108" mi="0" ci="4" mb="0" cb="0"/><line nr="2109" mi="0" ci="1" mb="0" cb="0"/><line nr="2110" mi="2" ci="0" mb="0" cb="0"/><line nr="2113" mi="0" ci="7" mb="1" cb="1"/><line nr="2114" mi="0" ci="1" mb="0" cb="0"/><line nr="2117" mi="0" ci="7" mb="1" cb="1"/><line nr="2118" mi="0" ci="1" mb="0" cb="0"/><line nr="2122" mi="0" ci="8" mb="0" cb="0"/><line nr="2123" mi="0" ci="5" mb="0" cb="0"/><line nr="2125" mi="0" ci="4" mb="0" cb="0"/><line nr="2127" mi="0" ci="3" mb="0" cb="0"/><line nr="2128" mi="0" ci="4" mb="0" cb="0"/><line nr="2129" mi="0" ci="3" mb="0" cb="0"/><line nr="2130" mi="0" ci="4" mb="0" cb="0"/><line nr="2131" mi="0" ci="3" mb="0" cb="0"/><line nr="2132" mi="0" ci="4" mb="0" cb="0"/><line nr="2133" mi="0" ci="3" mb="0" cb="0"/><line nr="2134" mi="0" ci="4" mb="0" cb="0"/><line nr="2135" mi="0" ci="3" mb="0" cb="0"/><line nr="2136" mi="0" ci="4" mb="0" cb="0"/><line nr="2137" mi="3" ci="29" mb="0" cb="0"/><line nr="2140" mi="1" ci="0" mb="0" cb="0"/><line nr="2141" mi="3" ci="0" mb="0" cb="0"/><line nr="2142" mi="5" ci="0" mb="0" cb="0"/><line nr="2143" mi="5" ci="0" mb="0" cb="0"/><line nr="2146" mi="0" ci="2" mb="0" cb="0"/><line nr="2148" mi="0" ci="2" mb="0" cb="0"/><line nr="2152" mi="0" ci="3" mb="0" cb="0"/><line nr="2159" mi="6" ci="0" mb="0" cb="0"/><line nr="2162" mi="6" ci="0" mb="0" cb="0"/><line nr="2165" mi="6" ci="0" mb="0" cb="0"/><line nr="2168" mi="6" ci="0" mb="0" cb="0"/><line nr="2171" mi="6" ci="0" mb="0" cb="0"/><line nr="2174" mi="0" ci="4" mb="0" cb="0"/><line nr="2175" mi="0" ci="1" mb="0" cb="0"/><line nr="2176" mi="2" ci="0" mb="0" cb="0"/><line nr="2179" mi="0" ci="7" mb="1" cb="1"/><line nr="2180" mi="0" ci="1" mb="0" cb="0"/><line nr="2183" mi="0" ci="7" mb="1" cb="1"/><line nr="2184" mi="0" ci="1" mb="0" cb="0"/><line nr="2188" mi="0" ci="8" mb="0" cb="0"/><line nr="2189" mi="0" ci="5" mb="0" cb="0"/><line nr="2191" mi="0" ci="4" mb="0" cb="0"/><line nr="2193" mi="0" ci="3" mb="0" cb="0"/><line nr="2194" mi="0" ci="5" mb="1" cb="5"/><line nr="2197" mi="0" ci="3" mb="0" cb="0"/><line nr="2198" mi="0" ci="4" mb="0" cb="0"/><line nr="2199" mi="0" ci="6" mb="0" cb="0"/><line nr="2201" mi="0" ci="1" mb="0" cb="0"/><line nr="2204" mi="0" ci="3" mb="0" cb="0"/><line nr="2205" mi="0" ci="4" mb="0" cb="0"/><line nr="2206" mi="0" ci="7" mb="0" cb="0"/><line nr="2208" mi="0" ci="1" mb="0" cb="0"/><line nr="2225" mi="0" ci="3" mb="0" cb="0"/><line nr="2226" mi="0" ci="4" mb="0" cb="0"/><line nr="2227" mi="0" ci="6" mb="0" cb="0"/><line nr="2229" mi="0" ci="1" mb="0" cb="0"/><line nr="2232" mi="0" ci="3" mb="0" cb="0"/><line nr="2233" mi="0" ci="4" mb="0" cb="0"/><line nr="2234" mi="0" ci="7" mb="0" cb="0"/><line nr="2236" mi="0" ci="1" mb="0" cb="0"/><line nr="2239" mi="0" ci="3" mb="0" cb="0"/><line nr="2240" mi="0" ci="4" mb="0" cb="0"/><line nr="2241" mi="0" ci="7" mb="0" cb="0"/><line nr="2243" mi="0" ci="1" mb="0" cb="0"/><line nr="2245" mi="5" ci="0" mb="0" cb="0"/><line nr="2249" mi="1" ci="0" mb="0" cb="0"/><line nr="2250" mi="3" ci="0" mb="0" cb="0"/><line nr="2251" mi="5" ci="0" mb="0" cb="0"/><line nr="2252" mi="5" ci="0" mb="0" cb="0"/><line nr="2255" mi="0" ci="2" mb="0" cb="0"/><line nr="2257" mi="0" ci="2" mb="0" cb="0"/><line nr="2263" mi="5" ci="0" mb="0" cb="0"/><line nr="2264" mi="5" ci="0" mb="0" cb="0"/><line nr="2266" mi="6" ci="0" mb="0" cb="0"/><line nr="2269" mi="0" ci="4" mb="0" cb="0"/><line nr="2270" mi="0" ci="1" mb="0" cb="0"/><line nr="2271" mi="2" ci="0" mb="0" cb="0"/><line nr="2274" mi="0" ci="7" mb="1" cb="1"/><line nr="2275" mi="0" ci="1" mb="0" cb="0"/><line nr="2278" mi="0" ci="7" mb="1" cb="1"/><line nr="2279" mi="0" ci="1" mb="0" cb="0"/><line nr="2283" mi="0" ci="8" mb="0" cb="0"/><line nr="2284" mi="0" ci="5" mb="0" cb="0"/><line nr="2286" mi="0" ci="4" mb="0" cb="0"/><line nr="2288" mi="0" ci="3" mb="0" cb="0"/><line nr="2289" mi="0" ci="4" mb="0" cb="0"/><line nr="2290" mi="0" ci="3" mb="0" cb="0"/><line nr="2291" mi="0" ci="4" mb="0" cb="0"/><line nr="2292" mi="0" ci="3" mb="0" cb="0"/><line nr="2293" mi="0" ci="4" mb="0" cb="0"/><line nr="2294" mi="0" ci="5" mb="0" cb="0"/><line nr="2297" mi="1" ci="0" mb="0" cb="0"/><line nr="2298" mi="3" ci="0" mb="0" cb="0"/><line nr="2299" mi="5" ci="0" mb="0" cb="0"/><line nr="2300" mi="5" ci="0" mb="0" cb="0"/><line nr="2303" mi="0" ci="2" mb="0" cb="0"/><line nr="2305" mi="0" ci="2" mb="0" cb="0"/><line nr="2313" mi="0" ci="5" mb="0" cb="0"/><line nr="2315" mi="6" ci="0" mb="0" cb="0"/><line nr="2318" mi="6" ci="0" mb="0" cb="0"/><line nr="2321" mi="4" ci="0" mb="0" cb="0"/><line nr="2324" mi="6" ci="0" mb="0" cb="0"/><line nr="2327" mi="0" ci="4" mb="0" cb="0"/><line nr="2328" mi="0" ci="1" mb="0" cb="0"/><line nr="2329" mi="2" ci="0" mb="0" cb="0"/><line nr="2332" mi="0" ci="7" mb="1" cb="1"/><line nr="2333" mi="0" ci="1" mb="0" cb="0"/><line nr="2336" mi="0" ci="7" mb="1" cb="1"/><line nr="2337" mi="0" ci="1" mb="0" cb="0"/><line nr="2341" mi="0" ci="8" mb="0" cb="0"/><line nr="2342" mi="0" ci="5" mb="0" cb="0"/><line nr="2345" mi="0" ci="4" mb="0" cb="0"/><line nr="2347" mi="0" ci="3" mb="0" cb="0"/><line nr="2348" mi="0" ci="4" mb="0" cb="0"/><line nr="2349" mi="0" ci="3" mb="0" cb="0"/><line nr="2350" mi="0" ci="5" mb="0" cb="0"/><line nr="2351" mi="0" ci="12" mb="1" cb="3"/><line nr="2353" mi="0" ci="3" mb="0" cb="0"/><line nr="2354" mi="0" ci="4" mb="0" cb="0"/><line nr="2358" mi="0" ci="3" mb="0" cb="0"/><line nr="2359" mi="0" ci="4" mb="0" cb="0"/><line nr="2360" mi="0" ci="5" mb="0" cb="0"/><line nr="2361" mi="0" ci="3" mb="0" cb="2"/><line nr="2364" mi="0" ci="3" mb="0" cb="0"/><line nr="2365" mi="0" ci="4" mb="0" cb="0"/><line nr="2366" mi="0" ci="6" mb="0" cb="0"/><line nr="2369" mi="0" ci="3" mb="0" cb="0"/><line nr="2370" mi="0" ci="4" mb="0" cb="0"/><line nr="2371" mi="0" ci="6" mb="0" cb="0"/><line nr="2373" mi="0" ci="22" mb="0" cb="0"/><line nr="2376" mi="1" ci="0" mb="0" cb="0"/><line nr="2377" mi="3" ci="0" mb="0" cb="0"/><line nr="2378" mi="5" ci="0" mb="0" cb="0"/><line nr="2379" mi="5" ci="0" mb="0" cb="0"/><line nr="2382" mi="0" ci="2" mb="0" cb="0"/><line nr="2384" mi="0" ci="2" mb="0" cb="0"/><line nr="2391" mi="0" ci="5" mb="0" cb="0"/><line nr="2393" mi="6" ci="0" mb="0" cb="0"/><line nr="2396" mi="4" ci="0" mb="0" cb="0"/><line nr="2399" mi="6" ci="0" mb="0" cb="0"/><line nr="2402" mi="0" ci="4" mb="0" cb="0"/><line nr="2403" mi="0" ci="1" mb="0" cb="0"/><line nr="2404" mi="2" ci="0" mb="0" cb="0"/><line nr="2407" mi="0" ci="7" mb="1" cb="1"/><line nr="2408" mi="0" ci="1" mb="0" cb="0"/><line nr="2411" mi="0" ci="7" mb="1" cb="1"/><line nr="2412" mi="0" ci="1" mb="0" cb="0"/><line nr="2416" mi="0" ci="8" mb="0" cb="0"/><line nr="2417" mi="0" ci="5" mb="0" cb="0"/><line nr="2420" mi="0" ci="4" mb="0" cb="0"/><line nr="2422" mi="0" ci="3" mb="0" cb="0"/><line nr="2423" mi="0" ci="4" mb="0" cb="0"/><line nr="2424" mi="0" ci="3" mb="0" cb="0"/><line nr="2425" mi="0" ci="4" mb="0" cb="0"/><line nr="2426" mi="0" ci="5" mb="0" cb="0"/><line nr="2427" mi="0" ci="12" mb="1" cb="3"/><line nr="2430" mi="0" ci="3" mb="0" cb="0"/><line nr="2431" mi="0" ci="4" mb="0" cb="0"/><line nr="2432" mi="0" ci="6" mb="0" cb="0"/><line nr="2435" mi="0" ci="3" mb="0" cb="0"/><line nr="2436" mi="0" ci="4" mb="0" cb="0"/><line nr="2437" mi="0" ci="6" mb="0" cb="0"/><line nr="2439" mi="0" ci="13" mb="0" cb="0"/><line nr="2442" mi="1" ci="0" mb="0" cb="0"/><line nr="2443" mi="3" ci="0" mb="0" cb="0"/><line nr="2444" mi="5" ci="0" mb="0" cb="0"/><line nr="2445" mi="5" ci="0" mb="0" cb="0"/><line nr="2448" mi="0" ci="2" mb="0" cb="0"/><line nr="2450" mi="0" ci="2" mb="0" cb="0"/><line nr="2457" mi="0" ci="5" mb="0" cb="0"/><line nr="2459" mi="6" ci="0" mb="0" cb="0"/><line nr="2462" mi="4" ci="0" mb="0" cb="0"/><line nr="2465" mi="6" ci="0" mb="0" cb="0"/><line nr="2468" mi="0" ci="4" mb="0" cb="0"/><line nr="2469" mi="0" ci="1" mb="0" cb="0"/><line nr="2470" mi="2" ci="0" mb="0" cb="0"/><line nr="2473" mi="0" ci="7" mb="1" cb="1"/><line nr="2474" mi="0" ci="1" mb="0" cb="0"/><line nr="2477" mi="0" ci="7" mb="1" cb="1"/><line nr="2478" mi="0" ci="1" mb="0" cb="0"/><line nr="2482" mi="0" ci="8" mb="0" cb="0"/><line nr="2483" mi="0" ci="5" mb="0" cb="0"/><line nr="2486" mi="0" ci="4" mb="0" cb="0"/><line nr="2488" mi="0" ci="3" mb="0" cb="0"/><line nr="2489" mi="0" ci="4" mb="0" cb="0"/><line nr="2490" mi="0" ci="3" mb="0" cb="0"/><line nr="2491" mi="0" ci="4" mb="0" cb="0"/><line nr="2492" mi="0" ci="5" mb="0" cb="0"/><line nr="2493" mi="0" ci="12" mb="1" cb="3"/><line nr="2496" mi="0" ci="3" mb="0" cb="0"/><line nr="2497" mi="0" ci="4" mb="0" cb="0"/><line nr="2498" mi="0" ci="6" mb="0" cb="0"/><line nr="2501" mi="0" ci="3" mb="0" cb="0"/><line nr="2502" mi="0" ci="4" mb="0" cb="0"/><line nr="2503" mi="0" ci="6" mb="0" cb="0"/><line nr="2505" mi="0" ci="13" mb="0" cb="0"/><line nr="2508" mi="1" ci="0" mb="0" cb="0"/><line nr="2509" mi="3" ci="0" mb="0" cb="0"/><line nr="2510" mi="5" ci="0" mb="0" cb="0"/><line nr="2511" mi="5" ci="0" mb="0" cb="0"/><line nr="2514" mi="0" ci="2" mb="0" cb="0"/><line nr="2516" mi="0" ci="2" mb="0" cb="0"/><line nr="2524" mi="6" ci="0" mb="0" cb="0"/><line nr="2527" mi="6" ci="0" mb="0" cb="0"/><line nr="2530" mi="0" ci="4" mb="0" cb="0"/><line nr="2531" mi="0" ci="1" mb="0" cb="0"/><line nr="2532" mi="2" ci="0" mb="0" cb="0"/><line nr="2535" mi="0" ci="7" mb="1" cb="1"/><line nr="2536" mi="0" ci="1" mb="0" cb="0"/><line nr="2539" mi="0" ci="7" mb="1" cb="1"/><line nr="2540" mi="0" ci="1" mb="0" cb="0"/><line nr="2544" mi="0" ci="8" mb="0" cb="0"/><line nr="2545" mi="0" ci="5" mb="0" cb="0"/><line nr="2547" mi="0" ci="4" mb="0" cb="0"/><line nr="2549" mi="0" ci="3" mb="0" cb="0"/><line nr="2550" mi="0" ci="4" mb="0" cb="0"/><line nr="2551" mi="0" ci="3" mb="0" cb="0"/><line nr="2552" mi="0" ci="4" mb="0" cb="0"/><line nr="2553" mi="0" ci="10" mb="0" cb="0"/><line nr="2556" mi="1" ci="0" mb="0" cb="0"/><line nr="2557" mi="3" ci="0" mb="0" cb="0"/><line nr="2558" mi="5" ci="0" mb="0" cb="0"/><line nr="2559" mi="5" ci="0" mb="0" cb="0"/><line nr="2562" mi="0" ci="2" mb="0" cb="0"/><line nr="2564" mi="0" ci="2" mb="0" cb="0"/><line nr="2570" mi="0" ci="5" mb="0" cb="0"/><line nr="2572" mi="0" ci="5" mb="0" cb="0"/><line nr="2574" mi="0" ci="5" mb="0" cb="0"/><line nr="2576" mi="4" ci="0" mb="0" cb="0"/><line nr="2579" mi="6" ci="0" mb="0" cb="0"/><line nr="2582" mi="4" ci="0" mb="0" cb="0"/><line nr="2585" mi="6" ci="0" mb="0" cb="0"/><line nr="2588" mi="4" ci="0" mb="0" cb="0"/><line nr="2591" mi="6" ci="0" mb="0" cb="0"/><line nr="2594" mi="0" ci="4" mb="0" cb="0"/><line nr="2595" mi="0" ci="1" mb="0" cb="0"/><line nr="2596" mi="2" ci="0" mb="0" cb="0"/><line nr="2599" mi="0" ci="7" mb="1" cb="1"/><line nr="2600" mi="0" ci="1" mb="0" cb="0"/><line nr="2603" mi="0" ci="7" mb="1" cb="1"/><line nr="2604" mi="0" ci="1" mb="0" cb="0"/><line nr="2608" mi="0" ci="8" mb="0" cb="0"/><line nr="2609" mi="0" ci="5" mb="0" cb="0"/><line nr="2612" mi="0" ci="4" mb="0" cb="0"/><line nr="2614" mi="0" ci="3" mb="0" cb="0"/><line nr="2615" mi="0" ci="4" mb="0" cb="0"/><line nr="2616" mi="0" ci="6" mb="0" cb="0"/><line nr="2617" mi="0" ci="3" mb="0" cb="0"/><line nr="2618" mi="0" ci="4" mb="0" cb="0"/><line nr="2619" mi="0" ci="6" mb="0" cb="0"/><line nr="2620" mi="0" ci="3" mb="0" cb="0"/><line nr="2621" mi="0" ci="5" mb="1" cb="3"/><line nr="2636" mi="0" ci="3" mb="0" cb="0"/><line nr="2637" mi="0" ci="4" mb="0" cb="0"/><line nr="2638" mi="0" ci="5" mb="0" cb="0"/><line nr="2642" mi="0" ci="3" mb="0" cb="0"/><line nr="2643" mi="0" ci="4" mb="0" cb="0"/><line nr="2644" mi="0" ci="6" mb="0" cb="0"/><line nr="2645" mi="0" ci="3" mb="0" cb="0"/><line nr="2646" mi="0" ci="4" mb="0" cb="0"/><line nr="2647" mi="0" ci="6" mb="0" cb="0"/><line nr="2650" mi="0" ci="3" mb="0" cb="0"/><line nr="2651" mi="0" ci="4" mb="0" cb="0"/><line nr="2652" mi="0" ci="5" mb="0" cb="0"/><line nr="2653" mi="0" ci="12" mb="2" cb="2"/><line nr="2655" mi="0" ci="1" mb="0" cb="0"/><line nr="2658" mi="0" ci="3" mb="0" cb="0"/><line nr="2659" mi="0" ci="4" mb="0" cb="0"/><line nr="2660" mi="0" ci="5" mb="0" cb="0"/><line nr="2664" mi="0" ci="3" mb="0" cb="0"/><line nr="2665" mi="0" ci="4" mb="0" cb="0"/><line nr="2666" mi="0" ci="6" mb="0" cb="0"/><line nr="2667" mi="0" ci="3" mb="0" cb="0"/><line nr="2668" mi="0" ci="4" mb="0" cb="0"/><line nr="2669" mi="0" ci="6" mb="0" cb="0"/><line nr="2672" mi="0" ci="3" mb="0" cb="0"/><line nr="2673" mi="0" ci="4" mb="0" cb="0"/><line nr="2674" mi="0" ci="5" mb="0" cb="0"/><line nr="2675" mi="0" ci="3" mb="0" cb="2"/><line nr="2677" mi="0" ci="1" mb="0" cb="0"/><line nr="2684" mi="0" ci="1" mb="0" cb="0"/><line nr="2686" mi="5" ci="0" mb="0" cb="0"/><line nr="2688" mi="0" ci="24" mb="0" cb="0"/><line nr="2691" mi="1" ci="0" mb="0" cb="0"/><line nr="2692" mi="3" ci="0" mb="0" cb="0"/><line nr="2693" mi="5" ci="0" mb="0" cb="0"/><line nr="2694" mi="5" ci="0" mb="0" cb="0"/><line nr="2697" mi="0" ci="2" mb="0" cb="0"/><line nr="2699" mi="0" ci="2" mb="0" cb="0"/><line nr="2704" mi="5" ci="0" mb="0" cb="0"/><line nr="2706" mi="6" ci="0" mb="0" cb="0"/><line nr="2709" mi="0" ci="4" mb="0" cb="0"/><line nr="2710" mi="0" ci="1" mb="0" cb="0"/><line nr="2711" mi="2" ci="0" mb="0" cb="0"/><line nr="2714" mi="0" ci="7" mb="1" cb="1"/><line nr="2715" mi="0" ci="1" mb="0" cb="0"/><line nr="2718" mi="0" ci="7" mb="1" cb="1"/><line nr="2719" mi="0" ci="1" mb="0" cb="0"/><line nr="2723" mi="0" ci="8" mb="0" cb="0"/><line nr="2724" mi="0" ci="5" mb="0" cb="0"/><line nr="2726" mi="0" ci="4" mb="0" cb="0"/><line nr="2728" mi="0" ci="3" mb="0" cb="0"/><line nr="2729" mi="0" ci="4" mb="0" cb="0"/><line nr="2730" mi="0" ci="3" mb="0" cb="0"/><line nr="2731" mi="0" ci="4" mb="0" cb="0"/><line nr="2734" mi="1" ci="0" mb="0" cb="0"/><line nr="2735" mi="3" ci="0" mb="0" cb="0"/><line nr="2736" mi="5" ci="0" mb="0" cb="0"/><line nr="2737" mi="5" ci="0" mb="0" cb="0"/><line nr="2740" mi="0" ci="2" mb="0" cb="0"/><line nr="2742" mi="0" ci="2" mb="0" cb="0"/><line nr="2746" mi="0" ci="6" mb="0" cb="0"/><line nr="2748" mi="0" ci="4" mb="0" cb="0"/><line nr="2749" mi="0" ci="1" mb="0" cb="0"/><line nr="2750" mi="2" ci="0" mb="0" cb="0"/><line nr="2752" mi="0" ci="3" mb="0" cb="0"/><line nr="2754" mi="0" ci="3" mb="0" cb="0"/><line nr="2755" mi="0" ci="4" mb="0" cb="0"/><line nr="2756" mi="0" ci="1" mb="0" cb="0"/><line nr="2761" mi="6" ci="0" mb="0" cb="0"/><line nr="2763" mi="0" ci="6" mb="0" cb="0"/><line nr="2766" mi="0" ci="7" mb="1" cb="1"/><line nr="2767" mi="0" ci="1" mb="0" cb="0"/><line nr="2770" mi="0" ci="7" mb="1" cb="1"/><line nr="2771" mi="0" ci="1" mb="0" cb="0"/><line nr="2776" mi="6" ci="0" mb="0" cb="0"/><line nr="2778" mi="0" ci="6" mb="0" cb="0"/><line nr="2781" mi="0" ci="7" mb="1" cb="1"/><line nr="2782" mi="0" ci="1" mb="0" cb="0"/><line nr="2785" mi="0" ci="7" mb="1" cb="1"/><line nr="2786" mi="0" ci="1" mb="0" cb="0"/><line nr="2791" mi="6" ci="0" mb="0" cb="0"/><line nr="2793" mi="6" ci="0" mb="0" cb="0"/><line nr="2796" mi="7" ci="0" mb="2" cb="0"/><line nr="2797" mi="1" ci="0" mb="0" cb="0"/><line nr="2800" mi="7" ci="0" mb="2" cb="0"/><line nr="2801" mi="1" ci="0" mb="0" cb="0"/><line nr="2805" mi="0" ci="8" mb="0" cb="0"/><line nr="2806" mi="0" ci="5" mb="0" cb="0"/><line nr="2808" mi="0" ci="3" mb="0" cb="0"/><line nr="2809" mi="0" ci="5" mb="2" cb="2"/><line nr="2823" mi="0" ci="5" mb="0" cb="0"/><line nr="2824" mi="0" ci="4" mb="0" cb="0"/><line nr="2826" mi="0" ci="3" mb="0" cb="0"/><line nr="2827" mi="0" ci="5" mb="0" cb="0"/><line nr="2828" mi="0" ci="7" mb="0" cb="0"/><line nr="2830" mi="0" ci="1" mb="0" cb="0"/><line nr="2836" mi="5" ci="0" mb="0" cb="0"/><line nr="2837" mi="4" ci="0" mb="0" cb="0"/><line nr="2839" mi="3" ci="0" mb="0" cb="0"/><line nr="2840" mi="5" ci="0" mb="0" cb="0"/><line nr="2841" mi="7" ci="0" mb="0" cb="0"/><line nr="2843" mi="1" ci="0" mb="0" cb="0"/><line nr="2848" mi="0" ci="5" mb="0" cb="0"/><line nr="2849" mi="0" ci="4" mb="0" cb="0"/><line nr="2851" mi="0" ci="3" mb="0" cb="0"/><line nr="2852" mi="0" ci="5" mb="0" cb="0"/><line nr="2853" mi="0" ci="8" mb="0" cb="0"/><line nr="2855" mi="0" ci="1" mb="0" cb="0"/><line nr="2857" mi="5" ci="0" mb="0" cb="0"/><line nr="2860" mi="1" ci="0" mb="0" cb="0"/><line nr="2861" mi="3" ci="0" mb="0" cb="0"/><line nr="2862" mi="5" ci="0" mb="0" cb="0"/><line nr="2863" mi="5" ci="0" mb="0" cb="0"/><line nr="2866" mi="0" ci="2" mb="0" cb="0"/><line nr="2868" mi="0" ci="2" mb="0" cb="0"/><line nr="2873" mi="5" ci="0" mb="0" cb="0"/><line nr="2875" mi="6" ci="0" mb="0" cb="0"/><line nr="2878" mi="0" ci="4" mb="0" cb="0"/><line nr="2879" mi="0" ci="1" mb="0" cb="0"/><line nr="2880" mi="2" ci="0" mb="0" cb="0"/><line nr="2883" mi="0" ci="7" mb="1" cb="1"/><line nr="2884" mi="0" ci="1" mb="0" cb="0"/><line nr="2887" mi="0" ci="7" mb="1" cb="1"/><line nr="2888" mi="0" ci="1" mb="0" cb="0"/><line nr="2892" mi="0" ci="8" mb="0" cb="0"/><line nr="2893" mi="0" ci="5" mb="0" cb="0"/><line nr="2895" mi="0" ci="3" mb="0" cb="0"/><line nr="2896" mi="0" ci="5" mb="2" cb="1"/><line nr="2898" mi="4" ci="0" mb="0" cb="0"/><line nr="2900" mi="3" ci="0" mb="0" cb="0"/><line nr="2901" mi="4" ci="0" mb="0" cb="0"/><line nr="2903" mi="1" ci="0" mb="0" cb="0"/><line nr="2905" mi="0" ci="4" mb="0" cb="0"/><line nr="2907" mi="0" ci="3" mb="0" cb="0"/><line nr="2908" mi="0" ci="4" mb="0" cb="0"/><line nr="2910" mi="0" ci="1" mb="0" cb="0"/><line nr="2912" mi="5" ci="0" mb="0" cb="0"/><line nr="2915" mi="1" ci="0" mb="0" cb="0"/><line nr="2916" mi="3" ci="0" mb="0" cb="0"/><line nr="2917" mi="5" ci="0" mb="0" cb="0"/><line nr="2918" mi="5" ci="0" mb="0" cb="0"/><line nr="2921" mi="0" ci="2" mb="0" cb="0"/><line nr="2923" mi="0" ci="2" mb="0" cb="0"/><line nr="2928" mi="0" ci="5" mb="0" cb="0"/><line nr="2929" mi="5" ci="0" mb="0" cb="0"/><line nr="2931" mi="4" ci="0" mb="0" cb="0"/><line nr="2934" mi="6" ci="0" mb="0" cb="0"/><line nr="2936" mi="4" ci="0" mb="0" cb="0"/><line nr="2938" mi="5" ci="0" mb="0" cb="0"/><line nr="2941" mi="0" ci="4" mb="0" cb="0"/><line nr="2942" mi="0" ci="1" mb="0" cb="0"/><line nr="2943" mi="2" ci="0" mb="0" cb="0"/><line nr="2946" mi="0" ci="7" mb="1" cb="1"/><line nr="2947" mi="0" ci="1" mb="0" cb="0"/><line nr="2950" mi="0" ci="7" mb="1" cb="1"/><line nr="2951" mi="0" ci="1" mb="0" cb="0"/><line nr="2955" mi="0" ci="8" mb="0" cb="0"/><line nr="2956" mi="0" ci="5" mb="0" cb="0"/><line nr="2959" mi="0" ci="3" mb="0" cb="0"/><line nr="2960" mi="0" ci="5" mb="1" cb="2"/><line nr="2962" mi="0" ci="4" mb="0" cb="0"/><line nr="2964" mi="0" ci="3" mb="0" cb="0"/><line nr="2965" mi="0" ci="4" mb="0" cb="0"/><line nr="2967" mi="0" ci="1" mb="0" cb="0"/><line nr="2969" mi="0" ci="4" mb="0" cb="0"/><line nr="2971" mi="0" ci="3" mb="0" cb="0"/><line nr="2972" mi="0" ci="4" mb="0" cb="0"/><line nr="2973" mi="0" ci="6" mb="0" cb="0"/><line nr="2974" mi="0" ci="3" mb="0" cb="0"/><line nr="2975" mi="0" ci="4" mb="0" cb="0"/><line nr="2976" mi="0" ci="5" mb="0" cb="0"/><line nr="2977" mi="0" ci="3" mb="0" cb="2"/><line nr="2980" mi="0" ci="3" mb="0" cb="0"/><line nr="2981" mi="0" ci="4" mb="0" cb="0"/><line nr="2982" mi="0" ci="3" mb="0" cb="0"/><line nr="2983" mi="0" ci="4" mb="0" cb="0"/><line nr="2984" mi="0" ci="6" mb="0" cb="0"/><line nr="2987" mi="0" ci="3" mb="0" cb="0"/><line nr="2988" mi="0" ci="4" mb="0" cb="0"/><line nr="2989" mi="0" ci="6" mb="0" cb="0"/><line nr="2994" mi="5" ci="0" mb="0" cb="0"/><line nr="2997" mi="1" ci="0" mb="0" cb="0"/><line nr="2998" mi="3" ci="0" mb="0" cb="0"/><line nr="2999" mi="5" ci="0" mb="0" cb="0"/><line nr="3000" mi="5" ci="0" mb="0" cb="0"/><line nr="3003" mi="0" ci="2" mb="0" cb="0"/><line nr="3005" mi="0" ci="2" mb="0" cb="0"/><line nr="3009" mi="0" ci="3" mb="0" cb="0"/><line nr="3012" mi="5" ci="0" mb="0" cb="0"/><line nr="3014" mi="6" ci="0" mb="0" cb="0"/><line nr="3017" mi="6" ci="0" mb="0" cb="0"/><line nr="3020" mi="0" ci="4" mb="0" cb="0"/><line nr="3021" mi="0" ci="1" mb="0" cb="0"/><line nr="3022" mi="2" ci="0" mb="0" cb="0"/><line nr="3025" mi="0" ci="7" mb="1" cb="1"/><line nr="3026" mi="0" ci="1" mb="0" cb="0"/><line nr="3029" mi="0" ci="7" mb="1" cb="1"/><line nr="3030" mi="0" ci="1" mb="0" cb="0"/><line nr="3034" mi="0" ci="8" mb="0" cb="0"/><line nr="3035" mi="0" ci="5" mb="0" cb="0"/><line nr="3038" mi="0" ci="4" mb="0" cb="0"/><line nr="3040" mi="0" ci="3" mb="0" cb="0"/><line nr="3041" mi="0" ci="5" mb="0" cb="0"/><line nr="3042" mi="0" ci="3" mb="0" cb="2"/><line nr="3044" mi="0" ci="3" mb="0" cb="0"/><line nr="3045" mi="0" ci="4" mb="0" cb="0"/><line nr="3049" mi="0" ci="3" mb="0" cb="0"/><line nr="3050" mi="0" ci="10" mb="1" cb="1"/><line nr="3053" mi="3" ci="0" mb="0" cb="0"/><line nr="3054" mi="4" ci="0" mb="0" cb="0"/><line nr="3055" mi="3" ci="0" mb="0" cb="0"/><line nr="3056" mi="4" ci="0" mb="0" cb="0"/><line nr="3060" mi="3" ci="21" mb="0" cb="0"/><line nr="3063" mi="1" ci="0" mb="0" cb="0"/><line nr="3064" mi="3" ci="0" mb="0" cb="0"/><line nr="3065" mi="5" ci="0" mb="0" cb="0"/><line nr="3066" mi="5" ci="0" mb="0" cb="0"/><line nr="3069" mi="0" ci="2" mb="0" cb="0"/><line nr="3071" mi="0" ci="2" mb="0" cb="0"/><line nr="3076" mi="0" ci="5" mb="0" cb="0"/><line nr="3078" mi="4" ci="0" mb="0" cb="0"/><line nr="3081" mi="6" ci="0" mb="0" cb="0"/><line nr="3084" mi="0" ci="4" mb="0" cb="0"/><line nr="3085" mi="0" ci="1" mb="0" cb="0"/><line nr="3086" mi="2" ci="0" mb="0" cb="0"/><line nr="3089" mi="0" ci="7" mb="1" cb="1"/><line nr="3090" mi="0" ci="1" mb="0" cb="0"/><line nr="3093" mi="0" ci="7" mb="1" cb="1"/><line nr="3094" mi="0" ci="1" mb="0" cb="0"/><line nr="3098" mi="0" ci="8" mb="0" cb="0"/><line nr="3099" mi="0" ci="5" mb="0" cb="0"/><line nr="3102" mi="0" ci="4" mb="0" cb="0"/><line nr="3104" mi="0" ci="3" mb="0" cb="0"/><line nr="3105" mi="0" ci="4" mb="0" cb="0"/><line nr="3106" mi="0" ci="10" mb="0" cb="0"/><line nr="3107" mi="0" ci="5" mb="1" cb="3"/><line nr="3108" mi="0" ci="3" mb="1" cb="1"/><line nr="3111" mi="0" ci="3" mb="0" cb="0"/><line nr="3112" mi="0" ci="4" mb="0" cb="0"/><line nr="3113" mi="0" ci="6" mb="0" cb="0"/><line nr="3117" mi="0" ci="3" mb="0" cb="0"/><line nr="3118" mi="0" ci="4" mb="0" cb="0"/><line nr="3119" mi="0" ci="11" mb="0" cb="0"/><line nr="3123" mi="1" ci="0" mb="0" cb="0"/><line nr="3124" mi="3" ci="0" mb="0" cb="0"/><line nr="3125" mi="5" ci="0" mb="0" cb="0"/><line nr="3126" mi="5" ci="0" mb="0" cb="0"/><line nr="3129" mi="0" ci="2" mb="0" cb="0"/><line nr="3131" mi="0" ci="2" mb="0" cb="0"/><line nr="3135" mi="0" ci="3" mb="0" cb="0"/><line nr="3138" mi="0" ci="5" mb="0" cb="0"/><line nr="3140" mi="0" ci="5" mb="0" cb="0"/><line nr="3141" mi="5" ci="0" mb="0" cb="0"/><line nr="3143" mi="6" ci="0" mb="0" cb="0"/><line nr="3145" mi="5" ci="0" mb="0" cb="0"/><line nr="3147" mi="4" ci="0" mb="0" cb="0"/><line nr="3150" mi="6" ci="0" mb="0" cb="0"/><line nr="3153" mi="4" ci="0" mb="0" cb="0"/><line nr="3156" mi="6" ci="0" mb="0" cb="0"/><line nr="3159" mi="0" ci="4" mb="0" cb="0"/><line nr="3160" mi="0" ci="1" mb="0" cb="0"/><line nr="3161" mi="2" ci="0" mb="0" cb="0"/><line nr="3164" mi="0" ci="7" mb="1" cb="1"/><line nr="3165" mi="0" ci="1" mb="0" cb="0"/><line nr="3168" mi="0" ci="7" mb="1" cb="1"/><line nr="3169" mi="0" ci="1" mb="0" cb="0"/><line nr="3173" mi="0" ci="8" mb="0" cb="0"/><line nr="3174" mi="0" ci="5" mb="0" cb="0"/><line nr="3177" mi="0" ci="4" mb="0" cb="0"/><line nr="3179" mi="0" ci="3" mb="0" cb="0"/><line nr="3180" mi="0" ci="4" mb="0" cb="0"/><line nr="3181" mi="0" ci="3" mb="0" cb="0"/><line nr="3182" mi="0" ci="4" mb="0" cb="0"/><line nr="3183" mi="0" ci="3" mb="0" cb="0"/><line nr="3184" mi="0" ci="10" mb="0" cb="2"/><line nr="3187" mi="0" ci="3" mb="0" cb="0"/><line nr="3188" mi="0" ci="5" mb="2" cb="2"/><line nr="3192" mi="1" ci="0" mb="0" cb="0"/><line nr="3207" mi="0" ci="3" mb="0" cb="0"/><line nr="3208" mi="0" ci="4" mb="0" cb="0"/><line nr="3209" mi="0" ci="5" mb="0" cb="0"/><line nr="3213" mi="0" ci="3" mb="0" cb="0"/><line nr="3214" mi="0" ci="4" mb="0" cb="0"/><line nr="3215" mi="0" ci="6" mb="0" cb="0"/><line nr="3218" mi="0" ci="3" mb="0" cb="0"/><line nr="3219" mi="0" ci="4" mb="0" cb="0"/><line nr="3220" mi="0" ci="5" mb="0" cb="0"/><line nr="3221" mi="0" ci="12" mb="2" cb="2"/><line nr="3223" mi="0" ci="1" mb="0" cb="0"/><line nr="3226" mi="0" ci="3" mb="0" cb="0"/><line nr="3227" mi="0" ci="4" mb="0" cb="0"/><line nr="3228" mi="0" ci="5" mb="0" cb="0"/><line nr="3232" mi="0" ci="3" mb="0" cb="0"/><line nr="3233" mi="0" ci="4" mb="0" cb="0"/><line nr="3234" mi="0" ci="6" mb="0" cb="0"/><line nr="3237" mi="0" ci="3" mb="0" cb="0"/><line nr="3238" mi="0" ci="4" mb="0" cb="0"/><line nr="3239" mi="0" ci="5" mb="0" cb="0"/><line nr="3240" mi="0" ci="3" mb="1" cb="1"/><line nr="3242" mi="0" ci="1" mb="0" cb="0"/><line nr="3244" mi="5" ci="0" mb="0" cb="0"/><line nr="3246" mi="0" ci="3" mb="0" cb="0"/><line nr="3247" mi="0" ci="4" mb="0" cb="0"/><line nr="3251" mi="0" ci="20" mb="0" cb="0"/><line nr="3254" mi="1" ci="0" mb="0" cb="0"/><line nr="3255" mi="3" ci="0" mb="0" cb="0"/><line nr="3256" mi="5" ci="0" mb="0" cb="0"/><line nr="3257" mi="5" ci="0" mb="0" cb="0"/><line nr="3260" mi="0" ci="2" mb="0" cb="0"/><line nr="3262" mi="0" ci="2" mb="0" cb="0"/><line nr="3266" mi="0" ci="3" mb="0" cb="0"/><line nr="3271" mi="6" ci="0" mb="0" cb="0"/><line nr="3274" mi="6" ci="0" mb="0" cb="0"/><line nr="3277" mi="6" ci="0" mb="0" cb="0"/><line nr="3280" mi="0" ci="4" mb="0" cb="0"/><line nr="3281" mi="0" ci="1" mb="0" cb="0"/><line nr="3282" mi="2" ci="0" mb="0" cb="0"/><line nr="3285" mi="0" ci="7" mb="1" cb="1"/><line nr="3286" mi="0" ci="1" mb="0" cb="0"/><line nr="3289" mi="0" ci="7" mb="1" cb="1"/><line nr="3290" mi="0" ci="1" mb="0" cb="0"/><line nr="3294" mi="0" ci="8" mb="0" cb="0"/><line nr="3295" mi="0" ci="5" mb="0" cb="0"/><line nr="3297" mi="0" ci="3" mb="0" cb="0"/><line nr="3298" mi="0" ci="10" mb="2" cb="1"/><line nr="3300" mi="4" ci="0" mb="0" cb="0"/><line nr="3302" mi="3" ci="0" mb="0" cb="0"/><line nr="3303" mi="4" ci="0" mb="0" cb="0"/><line nr="3304" mi="3" ci="0" mb="0" cb="0"/><line nr="3305" mi="4" ci="0" mb="0" cb="0"/><line nr="3306" mi="20" ci="0" mb="2" cb="0"/><line nr="3308" mi="1" ci="0" mb="0" cb="0"/><line nr="3310" mi="0" ci="4" mb="0" cb="0"/><line nr="3312" mi="0" ci="3" mb="0" cb="0"/><line nr="3313" mi="0" ci="4" mb="0" cb="0"/><line nr="3314" mi="0" ci="3" mb="0" cb="0"/><line nr="3315" mi="0" ci="4" mb="0" cb="0"/><line nr="3316" mi="1" ci="25" mb="1" cb="1"/><line nr="3321" mi="1" ci="0" mb="0" cb="0"/><line nr="3322" mi="3" ci="0" mb="0" cb="0"/><line nr="3323" mi="5" ci="0" mb="0" cb="0"/><line nr="3324" mi="5" ci="0" mb="0" cb="0"/><line nr="3327" mi="0" ci="2" mb="0" cb="0"/><line nr="3329" mi="0" ci="2" mb="0" cb="0"/><line nr="3333" mi="0" ci="3" mb="0" cb="0"/><line nr="3338" mi="6" ci="0" mb="0" cb="0"/><line nr="3341" mi="6" ci="0" mb="0" cb="0"/><line nr="3344" mi="6" ci="0" mb="0" cb="0"/><line nr="3347" mi="0" ci="4" mb="0" cb="0"/><line nr="3348" mi="0" ci="1" mb="0" cb="0"/><line nr="3349" mi="2" ci="0" mb="0" cb="0"/><line nr="3352" mi="0" ci="7" mb="1" cb="1"/><line nr="3353" mi="0" ci="1" mb="0" cb="0"/><line nr="3356" mi="0" ci="7" mb="1" cb="1"/><line nr="3357" mi="0" ci="1" mb="0" cb="0"/><line nr="3361" mi="0" ci="8" mb="0" cb="0"/><line nr="3362" mi="0" ci="5" mb="0" cb="0"/><line nr="3364" mi="0" ci="3" mb="0" cb="0"/><line nr="3365" mi="0" ci="10" mb="2" cb="1"/><line nr="3367" mi="0" ci="4" mb="0" cb="0"/><line nr="3369" mi="0" ci="3" mb="0" cb="0"/><line nr="3370" mi="0" ci="4" mb="0" cb="0"/><line nr="3371" mi="0" ci="3" mb="0" cb="0"/><line nr="3372" mi="0" ci="4" mb="0" cb="0"/><line nr="3373" mi="0" ci="7" mb="0" cb="0"/><line nr="3375" mi="0" ci="1" mb="0" cb="0"/><line nr="3377" mi="4" ci="0" mb="0" cb="0"/><line nr="3379" mi="3" ci="0" mb="0" cb="0"/><line nr="3380" mi="4" ci="0" mb="0" cb="0"/><line nr="3381" mi="3" ci="0" mb="0" cb="0"/><line nr="3382" mi="4" ci="0" mb="0" cb="0"/><line nr="3383" mi="13" ci="0" mb="0" cb="0"/><line nr="3388" mi="1" ci="0" mb="0" cb="0"/><line nr="3389" mi="3" ci="0" mb="0" cb="0"/><line nr="3390" mi="5" ci="0" mb="0" cb="0"/><line nr="3391" mi="5" ci="0" mb="0" cb="0"/><line nr="3394" mi="0" ci="2" mb="0" cb="0"/><line nr="3396" mi="0" ci="2" mb="0" cb="0"/><line nr="3401" mi="0" ci="5" mb="0" cb="0"/><line nr="3402" mi="4" ci="0" mb="0" cb="0"/><line nr="3404" mi="5" ci="0" mb="0" cb="0"/><line nr="3407" mi="4" ci="0" mb="0" cb="0"/><line nr="3410" mi="6" ci="0" mb="0" cb="0"/><line nr="3413" mi="0" ci="4" mb="0" cb="0"/><line nr="3414" mi="0" ci="1" mb="0" cb="0"/><line nr="3415" mi="2" ci="0" mb="0" cb="0"/><line nr="3418" mi="0" ci="7" mb="1" cb="1"/><line nr="3419" mi="0" ci="1" mb="0" cb="0"/><line nr="3422" mi="0" ci="7" mb="1" cb="1"/><line nr="3423" mi="0" ci="1" mb="0" cb="0"/><line nr="3427" mi="0" ci="8" mb="0" cb="0"/><line nr="3428" mi="0" ci="5" mb="0" cb="0"/><line nr="3431" mi="0" ci="4" mb="0" cb="0"/><line nr="3433" mi="0" ci="3" mb="0" cb="0"/><line nr="3434" mi="0" ci="4" mb="0" cb="0"/><line nr="3435" mi="0" ci="10" mb="0" cb="0"/><line nr="3436" mi="0" ci="5" mb="1" cb="3"/><line nr="3437" mi="0" ci="3" mb="1" cb="1"/><line nr="3440" mi="0" ci="3" mb="0" cb="0"/><line nr="3441" mi="0" ci="4" mb="0" cb="0"/><line nr="3442" mi="0" ci="6" mb="0" cb="0"/><line nr="3443" mi="0" ci="3" mb="0" cb="0"/><line nr="3444" mi="0" ci="4" mb="0" cb="0"/><line nr="3448" mi="0" ci="3" mb="0" cb="0"/><line nr="3449" mi="0" ci="4" mb="0" cb="0"/><line nr="3450" mi="0" ci="11" mb="0" cb="0"/><line nr="3454" mi="1" ci="0" mb="0" cb="0"/><line nr="3455" mi="3" ci="0" mb="0" cb="0"/><line nr="3456" mi="5" ci="0" mb="0" cb="0"/><line nr="3457" mi="5" ci="0" mb="0" cb="0"/><line nr="3460" mi="0" ci="2" mb="0" cb="0"/><line nr="3462" mi="0" ci="2" mb="0" cb="0"/><line nr="3466" mi="0" ci="3" mb="0" cb="0"/><line nr="3470" mi="6" ci="0" mb="0" cb="0"/><line nr="3473" mi="6" ci="0" mb="0" cb="0"/><line nr="3476" mi="0" ci="4" mb="0" cb="0"/><line nr="3477" mi="0" ci="1" mb="0" cb="0"/><line nr="3478" mi="2" ci="0" mb="0" cb="0"/><line nr="3481" mi="0" ci="7" mb="1" cb="1"/><line nr="3482" mi="0" ci="1" mb="0" cb="0"/><line nr="3485" mi="0" ci="7" mb="1" cb="1"/><line nr="3486" mi="0" ci="1" mb="0" cb="0"/><line nr="3490" mi="0" ci="8" mb="0" cb="0"/><line nr="3491" mi="0" ci="5" mb="0" cb="0"/><line nr="3493" mi="0" ci="3" mb="0" cb="0"/><line nr="3494" mi="0" ci="10" mb="1" cb="2"/><line nr="3496" mi="0" ci="4" mb="0" cb="0"/><line nr="3498" mi="0" ci="3" mb="0" cb="0"/><line nr="3499" mi="0" ci="4" mb="0" cb="0"/><line nr="3500" mi="0" ci="5" mb="0" cb="0"/><line nr="3502" mi="0" ci="1" mb="0" cb="0"/><line nr="3504" mi="0" ci="4" mb="0" cb="0"/><line nr="3506" mi="0" ci="3" mb="0" cb="0"/><line nr="3507" mi="0" ci="4" mb="0" cb="0"/><line nr="3508" mi="0" ci="5" mb="0" cb="0"/><line nr="3513" mi="1" ci="0" mb="0" cb="0"/><line nr="3514" mi="3" ci="0" mb="0" cb="0"/><line nr="3515" mi="5" ci="0" mb="0" cb="0"/><line nr="3516" mi="5" ci="0" mb="0" cb="0"/><line nr="3519" mi="0" ci="2" mb="0" cb="0"/><line nr="3521" mi="0" ci="2" mb="0" cb="0"/><line nr="3525" mi="0" ci="3" mb="0" cb="0"/><line nr="3528" mi="5" ci="0" mb="0" cb="0"/><line nr="3530" mi="6" ci="0" mb="0" cb="0"/><line nr="3532" mi="5" ci="0" mb="0" cb="0"/><line nr="3534" mi="0" ci="4" mb="0" cb="0"/><line nr="3535" mi="0" ci="1" mb="0" cb="0"/><line nr="3536" mi="2" ci="0" mb="0" cb="0"/><line nr="3539" mi="0" ci="7" mb="1" cb="1"/><line nr="3540" mi="0" ci="1" mb="0" cb="0"/><line nr="3543" mi="0" ci="7" mb="1" cb="1"/><line nr="3544" mi="0" ci="1" mb="0" cb="0"/><line nr="3548" mi="0" ci="8" mb="0" cb="0"/><line nr="3549" mi="0" ci="5" mb="0" cb="0"/><line nr="3552" mi="0" ci="4" mb="0" cb="0"/><line nr="3554" mi="0" ci="3" mb="0" cb="0"/><line nr="3555" mi="0" ci="10" mb="1" cb="2"/><line nr="3559" mi="0" ci="1" mb="0" cb="0"/><line nr="3562" mi="0" ci="3" mb="0" cb="0"/><line nr="3563" mi="0" ci="4" mb="0" cb="0"/><line nr="3564" mi="0" ci="3" mb="0" cb="0"/><line nr="3565" mi="0" ci="4" mb="0" cb="0"/><line nr="3566" mi="0" ci="3" mb="0" cb="0"/><line nr="3567" mi="0" ci="5" mb="0" cb="0"/><line nr="3568" mi="0" ci="3" mb="0" cb="2"/><line nr="3570" mi="0" ci="3" mb="0" cb="0"/><line nr="3571" mi="0" ci="5" mb="0" cb="0"/><line nr="3578" mi="0" ci="18" mb="0" cb="2"/><line nr="3581" mi="1" ci="0" mb="0" cb="0"/><line nr="3582" mi="3" ci="0" mb="0" cb="0"/><line nr="3583" mi="5" ci="0" mb="0" cb="0"/><line nr="3584" mi="5" ci="0" mb="0" cb="0"/><line nr="3587" mi="0" ci="2" mb="0" cb="0"/><line nr="3589" mi="0" ci="2" mb="0" cb="0"/><line nr="3593" mi="0" ci="3" mb="0" cb="0"/><line nr="3595" mi="0" ci="5" mb="0" cb="0"/><line nr="3596" mi="5" ci="0" mb="0" cb="0"/><line nr="3598" mi="4" ci="0" mb="0" cb="0"/><line nr="3601" mi="6" ci="0" mb="0" cb="0"/><line nr="3604" mi="4" ci="0" mb="0" cb="0"/><line nr="3607" mi="6" ci="0" mb="0" cb="0"/><line nr="3610" mi="0" ci="4" mb="0" cb="0"/><line nr="3611" mi="0" ci="1" mb="0" cb="0"/><line nr="3612" mi="2" ci="0" mb="0" cb="0"/><line nr="3615" mi="0" ci="7" mb="1" cb="1"/><line nr="3616" mi="0" ci="1" mb="0" cb="0"/><line nr="3619" mi="0" ci="7" mb="1" cb="1"/><line nr="3620" mi="0" ci="1" mb="0" cb="0"/><line nr="3624" mi="0" ci="8" mb="0" cb="0"/><line nr="3625" mi="0" ci="5" mb="0" cb="0"/><line nr="3628" mi="0" ci="4" mb="0" cb="0"/><line nr="3630" mi="0" ci="3" mb="0" cb="0"/><line nr="3631" mi="0" ci="4" mb="0" cb="0"/><line nr="3632" mi="0" ci="3" mb="0" cb="0"/><line nr="3633" mi="0" ci="4" mb="0" cb="0"/><line nr="3634" mi="0" ci="6" mb="0" cb="0"/><line nr="3635" mi="0" ci="3" mb="0" cb="0"/><line nr="3636" mi="0" ci="4" mb="0" cb="0"/><line nr="3637" mi="0" ci="10" mb="0" cb="0"/><line nr="3638" mi="2" ci="3" mb="3" cb="1"/><line nr="3639" mi="3" ci="0" mb="2" cb="0"/><line nr="3642" mi="3" ci="0" mb="0" cb="0"/><line nr="3643" mi="3" ci="0" mb="0" cb="0"/><line nr="3644" mi="3" ci="0" mb="0" cb="0"/><line nr="3645" mi="4" ci="0" mb="0" cb="0"/><line nr="3646" mi="6" ci="0" mb="0" cb="0"/><line nr="3650" mi="3" ci="0" mb="0" cb="0"/><line nr="3651" mi="4" ci="0" mb="0" cb="0"/><line nr="3652" mi="11" ci="0" mb="0" cb="0"/><line nr="3654" mi="0" ci="10" mb="0" cb="0"/><line nr="3657" mi="1" ci="0" mb="0" cb="0"/><line nr="3658" mi="3" ci="0" mb="0" cb="0"/><line nr="3659" mi="5" ci="0" mb="0" cb="0"/><line nr="3660" mi="5" ci="0" mb="0" cb="0"/><line nr="3663" mi="0" ci="2" mb="0" cb="0"/><line nr="3665" mi="0" ci="2" mb="0" cb="0"/><line nr="3669" mi="0" ci="3" mb="0" cb="0"/><line nr="3672" mi="5" ci="0" mb="0" cb="0"/><line nr="3674" mi="6" ci="0" mb="0" cb="0"/><line nr="3677" mi="6" ci="0" mb="0" cb="0"/><line nr="3680" mi="0" ci="4" mb="0" cb="0"/><line nr="3681" mi="0" ci="1" mb="0" cb="0"/><line nr="3682" mi="2" ci="0" mb="0" cb="0"/><line nr="3685" mi="0" ci="7" mb="1" cb="1"/><line nr="3686" mi="0" ci="1" mb="0" cb="0"/><line nr="3689" mi="0" ci="7" mb="1" cb="1"/><line nr="3690" mi="0" ci="1" mb="0" cb="0"/><line nr="3694" mi="0" ci="8" mb="0" cb="0"/><line nr="3695" mi="0" ci="5" mb="0" cb="0"/><line nr="3697" mi="0" ci="4" mb="0" cb="0"/><line nr="3699" mi="0" ci="3" mb="0" cb="0"/><line nr="3700" mi="0" ci="4" mb="0" cb="0"/><line nr="3701" mi="0" ci="3" mb="0" cb="0"/><line nr="3702" mi="0" ci="4" mb="0" cb="0"/><line nr="3703" mi="0" ci="3" mb="0" cb="0"/><line nr="3704" mi="0" ci="4" mb="0" cb="0"/><line nr="3705" mi="0" ci="16" mb="0" cb="0"/><line nr="3708" mi="1" ci="0" mb="0" cb="0"/><line nr="3709" mi="3" ci="0" mb="0" cb="0"/><line nr="3710" mi="5" ci="0" mb="0" cb="0"/><line nr="3711" mi="5" ci="0" mb="0" cb="0"/><line nr="3714" mi="0" ci="2" mb="0" cb="0"/><line nr="3716" mi="0" ci="2" mb="0" cb="0"/><line nr="3720" mi="0" ci="3" mb="0" cb="0"/><line nr="3724" mi="6" ci="0" mb="0" cb="0"/><line nr="3727" mi="6" ci="0" mb="0" cb="0"/><line nr="3730" mi="0" ci="4" mb="0" cb="0"/><line nr="3731" mi="0" ci="1" mb="0" cb="0"/><line nr="3732" mi="2" ci="0" mb="0" cb="0"/><line nr="3735" mi="0" ci="7" mb="1" cb="1"/><line nr="3736" mi="0" ci="1" mb="0" cb="0"/><line nr="3739" mi="0" ci="7" mb="1" cb="1"/><line nr="3740" mi="0" ci="1" mb="0" cb="0"/><line nr="3744" mi="0" ci="8" mb="0" cb="0"/><line nr="3745" mi="0" ci="5" mb="0" cb="0"/><line nr="3747" mi="0" ci="4" mb="0" cb="0"/><line nr="3749" mi="0" ci="3" mb="0" cb="0"/><line nr="3750" mi="0" ci="4" mb="0" cb="0"/><line nr="3751" mi="0" ci="3" mb="0" cb="0"/><line nr="3752" mi="0" ci="4" mb="0" cb="0"/><line nr="3753" mi="0" ci="9" mb="0" cb="0"/><line nr="3756" mi="1" ci="0" mb="0" cb="0"/><line nr="3757" mi="3" ci="0" mb="0" cb="0"/><line nr="3758" mi="5" ci="0" mb="0" cb="0"/><line nr="3759" mi="5" ci="0" mb="0" cb="0"/><line nr="3762" mi="0" ci="2" mb="0" cb="0"/><line nr="3764" mi="0" ci="2" mb="0" cb="0"/><line nr="3768" mi="5" ci="0" mb="0" cb="0"/><line nr="3770" mi="0" ci="4" mb="0" cb="0"/><line nr="3771" mi="0" ci="1" mb="0" cb="0"/><line nr="3772" mi="2" ci="0" mb="0" cb="0"/><line nr="3775" mi="0" ci="7" mb="1" cb="1"/><line nr="3776" mi="0" ci="1" mb="0" cb="0"/><line nr="3779" mi="0" ci="7" mb="1" cb="1"/><line nr="3780" mi="0" ci="1" mb="0" cb="0"/><line nr="3784" mi="0" ci="8" mb="0" cb="0"/><line nr="3785" mi="0" ci="5" mb="0" cb="0"/><line nr="3787" mi="0" ci="4" mb="0" cb="0"/><line nr="3789" mi="0" ci="3" mb="0" cb="0"/><line nr="3790" mi="0" ci="4" mb="0" cb="0"/><line nr="3793" mi="1" ci="0" mb="0" cb="0"/><line nr="3794" mi="3" ci="0" mb="0" cb="0"/><line nr="3795" mi="5" ci="0" mb="0" cb="0"/><line nr="3796" mi="5" ci="0" mb="0" cb="0"/><line nr="3799" mi="0" ci="2" mb="0" cb="0"/><line nr="3801" mi="0" ci="2" mb="0" cb="0"/><line nr="3805" mi="5" ci="0" mb="0" cb="0"/><line nr="3807" mi="0" ci="4" mb="0" cb="0"/><line nr="3808" mi="0" ci="1" mb="0" cb="0"/><line nr="3809" mi="2" ci="0" mb="0" cb="0"/><line nr="3812" mi="0" ci="7" mb="1" cb="1"/><line nr="3813" mi="0" ci="1" mb="0" cb="0"/><line nr="3816" mi="0" ci="7" mb="1" cb="1"/><line nr="3817" mi="0" ci="1" mb="0" cb="0"/><line nr="3821" mi="0" ci="8" mb="0" cb="0"/><line nr="3822" mi="0" ci="5" mb="0" cb="0"/><line nr="3824" mi="0" ci="4" mb="0" cb="0"/><line nr="3826" mi="0" ci="3" mb="0" cb="0"/><line nr="3827" mi="0" ci="4" mb="0" cb="0"/><line nr="3830" mi="1" ci="0" mb="0" cb="0"/><line nr="3831" mi="3" ci="0" mb="0" cb="0"/><line nr="3832" mi="5" ci="0" mb="0" cb="0"/><line nr="3833" mi="5" ci="0" mb="0" cb="0"/><line nr="3836" mi="0" ci="2" mb="0" cb="0"/><line nr="3838" mi="0" ci="2" mb="0" cb="0"/><line nr="3842" mi="5" ci="0" mb="0" cb="0"/><line nr="3844" mi="0" ci="4" mb="0" cb="0"/><line nr="3845" mi="0" ci="1" mb="0" cb="0"/><line nr="3846" mi="2" ci="0" mb="0" cb="0"/><line nr="3849" mi="0" ci="7" mb="1" cb="1"/><line nr="3850" mi="0" ci="1" mb="0" cb="0"/><line nr="3853" mi="0" ci="7" mb="1" cb="1"/><line nr="3854" mi="0" ci="1" mb="0" cb="0"/><line nr="3858" mi="0" ci="8" mb="0" cb="0"/><line nr="3859" mi="0" ci="5" mb="0" cb="0"/><line nr="3861" mi="0" ci="4" mb="0" cb="0"/><line nr="3863" mi="0" ci="3" mb="0" cb="0"/><line nr="3864" mi="0" ci="4" mb="0" cb="0"/><line nr="3867" mi="1" ci="0" mb="0" cb="0"/><line nr="3868" mi="3" ci="0" mb="0" cb="0"/><line nr="3869" mi="5" ci="0" mb="0" cb="0"/><line nr="3870" mi="5" ci="0" mb="0" cb="0"/><line nr="3873" mi="0" ci="2" mb="0" cb="0"/><line nr="3875" mi="0" ci="2" mb="0" cb="0"/><line nr="3879" mi="5" ci="0" mb="0" cb="0"/><line nr="3880" mi="5" ci="0" mb="0" cb="0"/><line nr="3882" mi="0" ci="4" mb="0" cb="0"/><line nr="3883" mi="0" ci="1" mb="0" cb="0"/><line nr="3884" mi="2" ci="0" mb="0" cb="0"/><line nr="3887" mi="0" ci="7" mb="1" cb="1"/><line nr="3888" mi="0" ci="1" mb="0" cb="0"/><line nr="3891" mi="0" ci="7" mb="1" cb="1"/><line nr="3892" mi="0" ci="1" mb="0" cb="0"/><line nr="3896" mi="0" ci="8" mb="0" cb="0"/><line nr="3897" mi="0" ci="5" mb="0" cb="0"/><line nr="3900" mi="0" ci="4" mb="0" cb="0"/><line nr="3902" mi="0" ci="3" mb="0" cb="0"/><line nr="3903" mi="0" ci="5" mb="0" cb="0"/><line nr="3904" mi="0" ci="6" mb="1" cb="3"/><line nr="3905" mi="6" ci="0" mb="0" cb="0"/><line nr="3907" mi="0" ci="3" mb="0" cb="0"/><line nr="3911" mi="1" ci="0" mb="0" cb="0"/><line nr="3912" mi="3" ci="0" mb="0" cb="0"/><line nr="3913" mi="5" ci="0" mb="0" cb="0"/><line nr="3914" mi="5" ci="0" mb="0" cb="0"/><line nr="3917" mi="0" ci="2" mb="0" cb="0"/><line nr="3919" mi="0" ci="2" mb="0" cb="0"/><line nr="3923" mi="0" ci="3" mb="0" cb="0"/><line nr="3927" mi="6" ci="0" mb="0" cb="0"/><line nr="3930" mi="6" ci="0" mb="0" cb="0"/><line nr="3933" mi="0" ci="4" mb="0" cb="0"/><line nr="3934" mi="0" ci="1" mb="0" cb="0"/><line nr="3935" mi="2" ci="0" mb="0" cb="0"/><line nr="3938" mi="0" ci="7" mb="1" cb="1"/><line nr="3939" mi="0" ci="1" mb="0" cb="0"/><line nr="3942" mi="0" ci="7" mb="1" cb="1"/><line nr="3943" mi="0" ci="1" mb="0" cb="0"/><line nr="3947" mi="0" ci="8" mb="0" cb="0"/><line nr="3948" mi="0" ci="5" mb="0" cb="0"/><line nr="3950" mi="0" ci="4" mb="0" cb="0"/><line nr="3952" mi="0" ci="3" mb="0" cb="0"/><line nr="3953" mi="0" ci="5" mb="1" cb="2"/><line nr="3956" mi="0" ci="3" mb="0" cb="0"/><line nr="3957" mi="0" ci="4" mb="0" cb="0"/><line nr="3958" mi="0" ci="5" mb="0" cb="0"/><line nr="3960" mi="0" ci="1" mb="0" cb="0"/><line nr="3963" mi="0" ci="3" mb="0" cb="0"/><line nr="3964" mi="0" ci="4" mb="0" cb="0"/><line nr="3965" mi="0" ci="5" mb="0" cb="0"/><line nr="3967" mi="0" ci="1" mb="0" cb="0"/><line nr="3969" mi="5" ci="0" mb="0" cb="0"/><line nr="3973" mi="1" ci="0" mb="0" cb="0"/><line nr="3974" mi="3" ci="0" mb="0" cb="0"/><line nr="3975" mi="5" ci="0" mb="0" cb="0"/><line nr="3976" mi="5" ci="0" mb="0" cb="0"/><line nr="3979" mi="0" ci="2" mb="0" cb="0"/><line nr="3981" mi="0" ci="2" mb="0" cb="0"/><line nr="3985" mi="0" ci="3" mb="0" cb="0"/><line nr="3987" mi="5" ci="0" mb="0" cb="0"/><line nr="3989" mi="0" ci="4" mb="0" cb="0"/><line nr="3990" mi="0" ci="1" mb="0" cb="0"/><line nr="3991" mi="2" ci="0" mb="0" cb="0"/><line nr="3994" mi="0" ci="7" mb="1" cb="1"/><line nr="3995" mi="0" ci="1" mb="0" cb="0"/><line nr="3998" mi="0" ci="7" mb="1" cb="1"/><line nr="3999" mi="0" ci="1" mb="0" cb="0"/><line nr="4003" mi="0" ci="8" mb="0" cb="0"/><line nr="4004" mi="0" ci="5" mb="0" cb="0"/><line nr="4006" mi="0" ci="4" mb="0" cb="0"/><line nr="4008" mi="0" ci="3" mb="0" cb="0"/><line nr="4009" mi="0" ci="5" mb="0" cb="0"/><line nr="4010" mi="1" ci="9" mb="1" cb="1"/><line nr="4013" mi="1" ci="0" mb="0" cb="0"/><line nr="4014" mi="3" ci="0" mb="0" cb="0"/><line nr="4015" mi="5" ci="0" mb="0" cb="0"/><line nr="4016" mi="5" ci="0" mb="0" cb="0"/><line nr="4019" mi="0" ci="2" mb="0" cb="0"/><line nr="4021" mi="0" ci="2" mb="0" cb="0"/><line nr="4025" mi="0" ci="3" mb="0" cb="0"/><line nr="4027" mi="5" ci="0" mb="0" cb="0"/><line nr="4029" mi="0" ci="4" mb="0" cb="0"/><line nr="4030" mi="0" ci="1" mb="0" cb="0"/><line nr="4031" mi="2" ci="0" mb="0" cb="0"/><line nr="4034" mi="0" ci="7" mb="1" cb="1"/><line nr="4035" mi="0" ci="1" mb="0" cb="0"/><line nr="4038" mi="0" ci="7" mb="1" cb="1"/><line nr="4039" mi="0" ci="1" mb="0" cb="0"/><line nr="4043" mi="0" ci="8" mb="0" cb="0"/><line nr="4044" mi="0" ci="5" mb="0" cb="0"/><line nr="4046" mi="0" ci="4" mb="0" cb="0"/><line nr="4048" mi="0" ci="3" mb="0" cb="0"/><line nr="4049" mi="0" ci="5" mb="0" cb="0"/><line nr="4050" mi="1" ci="9" mb="1" cb="1"/><line nr="4053" mi="1" ci="0" mb="0" cb="0"/><line nr="4054" mi="3" ci="0" mb="0" cb="0"/><line nr="4055" mi="5" ci="0" mb="0" cb="0"/><line nr="4056" mi="5" ci="0" mb="0" cb="0"/><line nr="4059" mi="0" ci="2" mb="0" cb="0"/><line nr="4061" mi="0" ci="2" mb="0" cb="0"/><line nr="4065" mi="0" ci="3" mb="0" cb="0"/><line nr="4067" mi="0" ci="5" mb="0" cb="0"/><line nr="4069" mi="4" ci="0" mb="0" cb="0"/><line nr="4072" mi="6" ci="0" mb="0" cb="0"/><line nr="4075" mi="0" ci="4" mb="0" cb="0"/><line nr="4076" mi="0" ci="1" mb="0" cb="0"/><line nr="4077" mi="2" ci="0" mb="0" cb="0"/><line nr="4080" mi="0" ci="7" mb="1" cb="1"/><line nr="4081" mi="0" ci="1" mb="0" cb="0"/><line nr="4084" mi="0" ci="7" mb="1" cb="1"/><line nr="4085" mi="0" ci="1" mb="0" cb="0"/><line nr="4089" mi="0" ci="8" mb="0" cb="0"/><line nr="4090" mi="0" ci="5" mb="0" cb="0"/><line nr="4093" mi="0" ci="4" mb="0" cb="0"/><line nr="4095" mi="0" ci="3" mb="0" cb="0"/><line nr="4096" mi="0" ci="4" mb="0" cb="0"/><line nr="4097" mi="0" ci="2" mb="0" cb="0"/><line nr="4099" mi="0" ci="2" mb="1" cb="1"/><line nr="4103" mi="0" ci="3" mb="0" cb="0"/><line nr="4104" mi="0" ci="4" mb="0" cb="0"/><line nr="4105" mi="0" ci="6" mb="0" cb="0"/><line nr="4108" mi="0" ci="1" mb="0" cb="0"/><line nr="4110" mi="5" ci="0" mb="0" cb="0"/><line nr="4112" mi="0" ci="3" mb="0" cb="0"/><line nr="4113" mi="0" ci="4" mb="0" cb="0"/><line nr="4114" mi="0" ci="10" mb="0" cb="0"/><line nr="4115" mi="0" ci="5" mb="1" cb="3"/><line nr="4116" mi="0" ci="10" mb="0" cb="0"/><line nr="4119" mi="1" ci="0" mb="0" cb="0"/><line nr="4120" mi="3" ci="0" mb="0" cb="0"/><line nr="4121" mi="5" ci="0" mb="0" cb="0"/><line nr="4122" mi="5" ci="0" mb="0" cb="0"/><line nr="4125" mi="0" ci="2" mb="0" cb="0"/><line nr="4127" mi="0" ci="2" mb="0" cb="0"/><line nr="4131" mi="5" ci="0" mb="0" cb="0"/><line nr="4133" mi="0" ci="4" mb="0" cb="0"/><line nr="4134" mi="0" ci="1" mb="0" cb="0"/><line nr="4135" mi="2" ci="0" mb="0" cb="0"/><line nr="4138" mi="0" ci="7" mb="1" cb="1"/><line nr="4139" mi="0" ci="1" mb="0" cb="0"/><line nr="4142" mi="0" ci="7" mb="1" cb="1"/><line nr="4143" mi="0" ci="1" mb="0" cb="0"/><line nr="4147" mi="0" ci="8" mb="0" cb="0"/><line nr="4148" mi="0" ci="5" mb="0" cb="0"/><line nr="4150" mi="0" ci="4" mb="0" cb="0"/><line nr="4152" mi="0" ci="3" mb="0" cb="0"/><line nr="4153" mi="0" ci="4" mb="0" cb="0"/><line nr="4154" mi="0" ci="4" mb="0" cb="0"/><line nr="4157" mi="1" ci="0" mb="0" cb="0"/><line nr="4158" mi="3" ci="0" mb="0" cb="0"/><line nr="4159" mi="5" ci="0" mb="0" cb="0"/><line nr="4160" mi="5" ci="0" mb="0" cb="0"/><line nr="4163" mi="0" ci="2" mb="0" cb="0"/><line nr="4165" mi="0" ci="2" mb="0" cb="0"/><line nr="4169" mi="5" ci="0" mb="0" cb="0"/><line nr="4171" mi="0" ci="4" mb="0" cb="0"/><line nr="4172" mi="0" ci="1" mb="0" cb="0"/><line nr="4173" mi="2" ci="0" mb="0" cb="0"/><line nr="4176" mi="0" ci="7" mb="1" cb="1"/><line nr="4177" mi="0" ci="1" mb="0" cb="0"/><line nr="4180" mi="0" ci="7" mb="1" cb="1"/><line nr="4181" mi="0" ci="1" mb="0" cb="0"/><line nr="4185" mi="0" ci="8" mb="0" cb="0"/><line nr="4186" mi="0" ci="5" mb="0" cb="0"/><line nr="4188" mi="0" ci="4" mb="0" cb="0"/><line nr="4190" mi="0" ci="3" mb="0" cb="0"/><line nr="4191" mi="0" ci="4" mb="0" cb="0"/><line nr="4192" mi="0" ci="4" mb="0" cb="0"/><line nr="4195" mi="1" ci="0" mb="0" cb="0"/><line nr="4196" mi="3" ci="0" mb="0" cb="0"/><line nr="4197" mi="5" ci="0" mb="0" cb="0"/><line nr="4198" mi="5" ci="0" mb="0" cb="0"/><line nr="4201" mi="0" ci="2" mb="0" cb="0"/><line nr="4203" mi="0" ci="2" mb="0" cb="0"/><line nr="4207" mi="5" ci="0" mb="0" cb="0"/><line nr="4209" mi="4" ci="0" mb="0" cb="0"/><line nr="4210" mi="1" ci="0" mb="0" cb="0"/><line nr="4211" mi="2" ci="0" mb="0" cb="0"/><line nr="4214" mi="7" ci="0" mb="2" cb="0"/><line nr="4215" mi="1" ci="0" mb="0" cb="0"/><line nr="4218" mi="7" ci="0" mb="2" cb="0"/><line nr="4219" mi="1" ci="0" mb="0" cb="0"/><line nr="4223" mi="8" ci="0" mb="0" cb="0"/><line nr="4224" mi="5" ci="0" mb="0" cb="0"/><line nr="4226" mi="4" ci="0" mb="0" cb="0"/><line nr="4228" mi="3" ci="0" mb="0" cb="0"/><line nr="4229" mi="4" ci="0" mb="0" cb="0"/><line nr="4232" mi="1" ci="0" mb="0" cb="0"/><line nr="4233" mi="3" ci="0" mb="0" cb="0"/><line nr="4234" mi="5" ci="0" mb="0" cb="0"/><line nr="4235" mi="5" ci="0" mb="0" cb="0"/><line nr="4238" mi="2" ci="0" mb="0" cb="0"/><line nr="4240" mi="2" ci="0" mb="0" cb="0"/><line nr="4244" mi="5" ci="0" mb="0" cb="0"/><line nr="4246" mi="4" ci="0" mb="0" cb="0"/><line nr="4247" mi="1" ci="0" mb="0" cb="0"/><line nr="4248" mi="2" ci="0" mb="0" cb="0"/><line nr="4251" mi="7" ci="0" mb="2" cb="0"/><line nr="4252" mi="1" ci="0" mb="0" cb="0"/><line nr="4255" mi="7" ci="0" mb="2" cb="0"/><line nr="4256" mi="1" ci="0" mb="0" cb="0"/><line nr="4260" mi="8" ci="0" mb="0" cb="0"/><line nr="4261" mi="5" ci="0" mb="0" cb="0"/><line nr="4263" mi="4" ci="0" mb="0" cb="0"/><line nr="4265" mi="3" ci="0" mb="0" cb="0"/><line nr="4266" mi="4" ci="0" mb="0" cb="0"/><line nr="4269" mi="1" ci="0" mb="0" cb="0"/><line nr="4270" mi="3" ci="0" mb="0" cb="0"/><line nr="4271" mi="5" ci="0" mb="0" cb="0"/><line nr="4272" mi="5" ci="0" mb="0" cb="0"/><line nr="4275" mi="2" ci="0" mb="0" cb="0"/><line nr="4277" mi="2" ci="0" mb="0" cb="0"/><line nr="4281" mi="5" ci="0" mb="0" cb="0"/><line nr="4283" mi="4" ci="0" mb="0" cb="0"/><line nr="4284" mi="1" ci="0" mb="0" cb="0"/><line nr="4285" mi="2" ci="0" mb="0" cb="0"/><line nr="4288" mi="7" ci="0" mb="2" cb="0"/><line nr="4289" mi="1" ci="0" mb="0" cb="0"/><line nr="4292" mi="7" ci="0" mb="2" cb="0"/><line nr="4293" mi="1" ci="0" mb="0" cb="0"/><line nr="4297" mi="8" ci="0" mb="0" cb="0"/><line nr="4298" mi="5" ci="0" mb="0" cb="0"/><line nr="4300" mi="4" ci="0" mb="0" cb="0"/><line nr="4302" mi="3" ci="0" mb="0" cb="0"/><line nr="4303" mi="4" ci="0" mb="0" cb="0"/><line nr="4306" mi="1" ci="0" mb="0" cb="0"/><line nr="4307" mi="3" ci="0" mb="0" cb="0"/><line nr="4308" mi="5" ci="0" mb="0" cb="0"/><line nr="4309" mi="5" ci="0" mb="0" cb="0"/><line nr="4312" mi="2" ci="0" mb="0" cb="0"/><line nr="4314" mi="2" ci="0" mb="0" cb="0"/><line nr="4318" mi="5" ci="0" mb="0" cb="0"/><line nr="4320" mi="4" ci="0" mb="0" cb="0"/><line nr="4321" mi="1" ci="0" mb="0" cb="0"/><line nr="4322" mi="2" ci="0" mb="0" cb="0"/><line nr="4325" mi="7" ci="0" mb="2" cb="0"/><line nr="4326" mi="1" ci="0" mb="0" cb="0"/><line nr="4329" mi="7" ci="0" mb="2" cb="0"/><line nr="4330" mi="1" ci="0" mb="0" cb="0"/><line nr="4334" mi="8" ci="0" mb="0" cb="0"/><line nr="4335" mi="5" ci="0" mb="0" cb="0"/><line nr="4337" mi="4" ci="0" mb="0" cb="0"/><line nr="4339" mi="3" ci="0" mb="0" cb="0"/><line nr="4340" mi="4" ci="0" mb="0" cb="0"/><line nr="4343" mi="1" ci="0" mb="0" cb="0"/><line nr="4344" mi="3" ci="0" mb="0" cb="0"/><line nr="4345" mi="5" ci="0" mb="0" cb="0"/><line nr="4346" mi="5" ci="0" mb="0" cb="0"/><line nr="4349" mi="2" ci="0" mb="0" cb="0"/><line nr="4351" mi="2" ci="0" mb="0" cb="0"/><line nr="4355" mi="5" ci="0" mb="0" cb="0"/><line nr="4357" mi="4" ci="0" mb="0" cb="0"/><line nr="4358" mi="1" ci="0" mb="0" cb="0"/><line nr="4359" mi="2" ci="0" mb="0" cb="0"/><line nr="4362" mi="7" ci="0" mb="2" cb="0"/><line nr="4363" mi="1" ci="0" mb="0" cb="0"/><line nr="4366" mi="7" ci="0" mb="2" cb="0"/><line nr="4367" mi="1" ci="0" mb="0" cb="0"/><line nr="4371" mi="8" ci="0" mb="0" cb="0"/><line nr="4372" mi="5" ci="0" mb="0" cb="0"/><line nr="4374" mi="4" ci="0" mb="0" cb="0"/><line nr="4376" mi="3" ci="0" mb="0" cb="0"/><line nr="4377" mi="4" ci="0" mb="0" cb="0"/><line nr="4380" mi="1" ci="0" mb="0" cb="0"/><line nr="4381" mi="3" ci="0" mb="0" cb="0"/><line nr="4382" mi="5" ci="0" mb="0" cb="0"/><line nr="4383" mi="5" ci="0" mb="0" cb="0"/><line nr="4386" mi="2" ci="0" mb="0" cb="0"/><line nr="4388" mi="2" ci="0" mb="0" cb="0"/><line nr="4392" mi="5" ci="0" mb="0" cb="0"/><line nr="4394" mi="4" ci="0" mb="0" cb="0"/><line nr="4395" mi="1" ci="0" mb="0" cb="0"/><line nr="4396" mi="2" ci="0" mb="0" cb="0"/><line nr="4399" mi="7" ci="0" mb="2" cb="0"/><line nr="4400" mi="1" ci="0" mb="0" cb="0"/><line nr="4403" mi="7" ci="0" mb="2" cb="0"/><line nr="4404" mi="1" ci="0" mb="0" cb="0"/><line nr="4408" mi="8" ci="0" mb="0" cb="0"/><line nr="4409" mi="5" ci="0" mb="0" cb="0"/><line nr="4411" mi="4" ci="0" mb="0" cb="0"/><line nr="4413" mi="3" ci="0" mb="0" cb="0"/><line nr="4414" mi="4" ci="0" mb="0" cb="0"/><line nr="4417" mi="1" ci="0" mb="0" cb="0"/><line nr="4418" mi="3" ci="0" mb="0" cb="0"/><line nr="4419" mi="5" ci="0" mb="0" cb="0"/><line nr="4420" mi="5" ci="0" mb="0" cb="0"/><line nr="4423" mi="2" ci="0" mb="0" cb="0"/><line nr="4425" mi="2" ci="0" mb="0" cb="0"/><line nr="4429" mi="5" ci="0" mb="0" cb="0"/><line nr="4431" mi="0" ci="4" mb="0" cb="0"/><line nr="4432" mi="0" ci="1" mb="0" cb="0"/><line nr="4433" mi="2" ci="0" mb="0" cb="0"/><line nr="4436" mi="0" ci="7" mb="1" cb="1"/><line nr="4437" mi="0" ci="1" mb="0" cb="0"/><line nr="4440" mi="0" ci="7" mb="1" cb="1"/><line nr="4441" mi="0" ci="1" mb="0" cb="0"/><line nr="4445" mi="0" ci="8" mb="0" cb="0"/><line nr="4446" mi="0" ci="5" mb="0" cb="0"/><line nr="4448" mi="0" ci="4" mb="0" cb="0"/><line nr="4450" mi="0" ci="3" mb="0" cb="0"/><line nr="4451" mi="0" ci="4" mb="0" cb="0"/><line nr="4454" mi="1" ci="0" mb="0" cb="0"/><line nr="4455" mi="3" ci="0" mb="0" cb="0"/><line nr="4456" mi="5" ci="0" mb="0" cb="0"/><line nr="4457" mi="5" ci="0" mb="0" cb="0"/><line nr="4460" mi="0" ci="2" mb="0" cb="0"/><line nr="4462" mi="0" ci="2" mb="0" cb="0"/><line nr="4466" mi="5" ci="0" mb="0" cb="0"/><line nr="4467" mi="5" ci="0" mb="0" cb="0"/><line nr="4468" mi="5" ci="0" mb="0" cb="0"/><line nr="4469" mi="5" ci="0" mb="0" cb="0"/><line nr="4470" mi="5" ci="0" mb="0" cb="0"/><line nr="4471" mi="5" ci="0" mb="0" cb="0"/><line nr="4472" mi="5" ci="0" mb="0" cb="0"/><line nr="4473" mi="5" ci="0" mb="0" cb="0"/><line nr="4474" mi="5" ci="0" mb="0" cb="0"/><line nr="4475" mi="5" ci="0" mb="0" cb="0"/><line nr="4476" mi="5" ci="0" mb="0" cb="0"/><line nr="4477" mi="5" ci="0" mb="0" cb="0"/><line nr="4479" mi="0" ci="4" mb="0" cb="0"/><line nr="4480" mi="0" ci="1" mb="0" cb="0"/><line nr="4481" mi="2" ci="0" mb="0" cb="0"/><line nr="4484" mi="0" ci="7" mb="1" cb="1"/><line nr="4485" mi="0" ci="1" mb="0" cb="0"/><line nr="4488" mi="0" ci="7" mb="1" cb="1"/><line nr="4489" mi="0" ci="1" mb="0" cb="0"/><line nr="4493" mi="0" ci="8" mb="0" cb="0"/><line nr="4494" mi="0" ci="5" mb="0" cb="0"/><line nr="4497" mi="0" ci="4" mb="0" cb="0"/><line nr="4499" mi="0" ci="3" mb="0" cb="0"/><line nr="4500" mi="0" ci="5" mb="0" cb="0"/><line nr="4501" mi="0" ci="12" mb="2" cb="2"/><line nr="4502" mi="6" ci="0" mb="0" cb="0"/><line nr="4504" mi="0" ci="3" mb="0" cb="0"/><line nr="4508" mi="1" ci="0" mb="0" cb="0"/><line nr="4509" mi="3" ci="0" mb="0" cb="0"/><line nr="4510" mi="5" ci="0" mb="0" cb="0"/><line nr="4511" mi="5" ci="0" mb="0" cb="0"/><line nr="4514" mi="0" ci="2" mb="0" cb="0"/><line nr="4516" mi="0" ci="2" mb="0" cb="0"/><line nr="4520" mi="0" ci="3" mb="0" cb="0"/><line nr="4523" mi="5" ci="0" mb="0" cb="0"/><line nr="4525" mi="6" ci="0" mb="0" cb="0"/><line nr="4528" mi="0" ci="4" mb="0" cb="0"/><line nr="4529" mi="0" ci="1" mb="0" cb="0"/><line nr="4530" mi="2" ci="0" mb="0" cb="0"/><line nr="4533" mi="0" ci="7" mb="1" cb="1"/><line nr="4534" mi="0" ci="1" mb="0" cb="0"/><line nr="4537" mi="0" ci="7" mb="1" cb="1"/><line nr="4538" mi="0" ci="1" mb="0" cb="0"/><line nr="4542" mi="0" ci="8" mb="0" cb="0"/><line nr="4543" mi="0" ci="5" mb="0" cb="0"/><line nr="4545" mi="0" ci="3" mb="0" cb="0"/><line nr="4546" mi="0" ci="5" mb="1" cb="2"/><line nr="4548" mi="0" ci="4" mb="0" cb="0"/><line nr="4550" mi="0" ci="3" mb="0" cb="0"/><line nr="4551" mi="0" ci="5" mb="0" cb="0"/><line nr="4552" mi="1" ci="9" mb="1" cb="1"/><line nr="4554" mi="0" ci="1" mb="0" cb="0"/><line nr="4567" mi="0" ci="4" mb="0" cb="0"/><line nr="4569" mi="0" ci="3" mb="0" cb="0"/><line nr="4570" mi="0" ci="4" mb="0" cb="0"/><line nr="4571" mi="1" ci="15" mb="1" cb="1"/><line nr="4573" mi="0" ci="1" mb="0" cb="0"/><line nr="4575" mi="5" ci="0" mb="0" cb="0"/><line nr="4578" mi="1" ci="0" mb="0" cb="0"/><line nr="4579" mi="3" ci="0" mb="0" cb="0"/><line nr="4580" mi="5" ci="0" mb="0" cb="0"/><line nr="4581" mi="5" ci="0" mb="0" cb="0"/><line nr="4584" mi="0" ci="2" mb="0" cb="0"/><line nr="4586" mi="0" ci="2" mb="0" cb="0"/><line nr="4590" mi="0" ci="3" mb="0" cb="0"/><line nr="4592" mi="5" ci="0" mb="0" cb="0"/><line nr="4594" mi="0" ci="4" mb="0" cb="0"/><line nr="4595" mi="0" ci="1" mb="0" cb="0"/><line nr="4596" mi="2" ci="0" mb="0" cb="0"/><line nr="4599" mi="0" ci="7" mb="1" cb="1"/><line nr="4600" mi="0" ci="1" mb="0" cb="0"/><line nr="4603" mi="0" ci="7" mb="1" cb="1"/><line nr="4604" mi="0" ci="1" mb="0" cb="0"/><line nr="4608" mi="0" ci="8" mb="0" cb="0"/><line nr="4609" mi="0" ci="5" mb="0" cb="0"/><line nr="4611" mi="0" ci="4" mb="0" cb="0"/><line nr="4613" mi="0" ci="3" mb="0" cb="0"/><line nr="4614" mi="0" ci="5" mb="0" cb="0"/><line nr="4615" mi="1" ci="9" mb="1" cb="1"/><line nr="4618" mi="1" ci="0" mb="0" cb="0"/><line nr="4619" mi="3" ci="0" mb="0" cb="0"/><line nr="4620" mi="5" ci="0" mb="0" cb="0"/><line nr="4621" mi="5" ci="0" mb="0" cb="0"/><line nr="4624" mi="0" ci="2" mb="0" cb="0"/><line nr="4626" mi="0" ci="2" mb="0" cb="0"/><line nr="4631" mi="6" ci="0" mb="0" cb="0"/><line nr="4634" mi="6" ci="0" mb="0" cb="0"/><line nr="4637" mi="0" ci="4" mb="0" cb="0"/><line nr="4638" mi="0" ci="1" mb="0" cb="0"/><line nr="4639" mi="2" ci="0" mb="0" cb="0"/><line nr="4642" mi="0" ci="7" mb="1" cb="1"/><line nr="4643" mi="0" ci="1" mb="0" cb="0"/><line nr="4646" mi="0" ci="7" mb="1" cb="1"/><line nr="4647" mi="0" ci="1" mb="0" cb="0"/><line nr="4651" mi="0" ci="8" mb="0" cb="0"/><line nr="4652" mi="0" ci="5" mb="0" cb="0"/><line nr="4654" mi="0" ci="3" mb="0" cb="0"/><line nr="4655" mi="0" ci="5" mb="1" cb="3"/><line nr="4657" mi="0" ci="4" mb="0" cb="0"/><line nr="4659" mi="0" ci="3" mb="0" cb="0"/><line nr="4660" mi="0" ci="3" mb="0" cb="0"/><line nr="4662" mi="0" ci="1" mb="0" cb="0"/><line nr="4664" mi="0" ci="4" mb="0" cb="0"/><line nr="4666" mi="0" ci="3" mb="0" cb="0"/><line nr="4667" mi="0" ci="3" mb="0" cb="0"/><line nr="4669" mi="0" ci="1" mb="0" cb="0"/><line nr="4671" mi="0" ci="4" mb="0" cb="0"/><line nr="4674" mi="0" ci="1" mb="0" cb="0"/><line nr="4676" mi="5" ci="0" mb="0" cb="0"/><line nr="4679" mi="1" ci="0" mb="0" cb="0"/><line nr="4680" mi="3" ci="0" mb="0" cb="0"/><line nr="4681" mi="5" ci="0" mb="0" cb="0"/><line nr="4682" mi="5" ci="0" mb="0" cb="0"/><line nr="4685" mi="0" ci="2" mb="0" cb="0"/><line nr="4687" mi="0" ci="2" mb="0" cb="0"/><line nr="4691" mi="5" ci="0" mb="0" cb="0"/><line nr="4693" mi="0" ci="4" mb="0" cb="0"/><line nr="4694" mi="0" ci="1" mb="0" cb="0"/><line nr="4695" mi="2" ci="0" mb="0" cb="0"/><line nr="4698" mi="0" ci="7" mb="1" cb="1"/><line nr="4699" mi="0" ci="1" mb="0" cb="0"/><line nr="4702" mi="0" ci="7" mb="1" cb="1"/><line nr="4703" mi="0" ci="1" mb="0" cb="0"/><line nr="4707" mi="0" ci="8" mb="0" cb="0"/><line nr="4708" mi="0" ci="5" mb="0" cb="0"/><line nr="4710" mi="0" ci="4" mb="0" cb="0"/><line nr="4712" mi="0" ci="3" mb="0" cb="0"/><line nr="4713" mi="0" ci="4" mb="0" cb="0"/><line nr="4716" mi="1" ci="0" mb="0" cb="0"/><line nr="4717" mi="3" ci="0" mb="0" cb="0"/><line nr="4718" mi="5" ci="0" mb="0" cb="0"/><line nr="4719" mi="5" ci="0" mb="0" cb="0"/><line nr="4722" mi="0" ci="2" mb="0" cb="0"/><line nr="4724" mi="0" ci="2" mb="0" cb="0"/><line nr="4728" mi="5" ci="0" mb="0" cb="0"/><line nr="4730" mi="0" ci="4" mb="0" cb="0"/><line nr="4731" mi="0" ci="1" mb="0" cb="0"/><line nr="4732" mi="2" ci="0" mb="0" cb="0"/><line nr="4735" mi="0" ci="7" mb="1" cb="1"/><line nr="4736" mi="0" ci="1" mb="0" cb="0"/><line nr="4739" mi="0" ci="7" mb="1" cb="1"/><line nr="4740" mi="0" ci="1" mb="0" cb="0"/><line nr="4744" mi="0" ci="8" mb="0" cb="0"/><line nr="4745" mi="0" ci="5" mb="0" cb="0"/><line nr="4747" mi="0" ci="4" mb="0" cb="0"/><line nr="4749" mi="0" ci="3" mb="0" cb="0"/><line nr="4750" mi="0" ci="4" mb="0" cb="0"/><line nr="4753" mi="1" ci="0" mb="0" cb="0"/><line nr="4754" mi="3" ci="0" mb="0" cb="0"/><line nr="4755" mi="5" ci="0" mb="0" cb="0"/><line nr="4756" mi="5" ci="0" mb="0" cb="0"/><line nr="4759" mi="0" ci="2" mb="0" cb="0"/><line nr="4761" mi="0" ci="2" mb="0" cb="0"/><line nr="4765" mi="0" ci="3" mb="0" cb="0"/><line nr="4767" mi="5" ci="0" mb="0" cb="0"/><line nr="4768" mi="5" ci="0" mb="0" cb="0"/><line nr="4769" mi="5" ci="0" mb="0" cb="0"/><line nr="4770" mi="5" ci="0" mb="0" cb="0"/><line nr="4772" mi="0" ci="4" mb="0" cb="0"/><line nr="4773" mi="0" ci="1" mb="0" cb="0"/><line nr="4774" mi="2" ci="0" mb="0" cb="0"/><line nr="4777" mi="0" ci="7" mb="1" cb="1"/><line nr="4778" mi="0" ci="1" mb="0" cb="0"/><line nr="4781" mi="0" ci="7" mb="1" cb="1"/><line nr="4782" mi="0" ci="1" mb="0" cb="0"/><line nr="4786" mi="0" ci="8" mb="0" cb="0"/><line nr="4787" mi="0" ci="5" mb="0" cb="0"/><line nr="4789" mi="0" ci="4" mb="0" cb="0"/><line nr="4791" mi="0" ci="3" mb="0" cb="0"/><line nr="4792" mi="0" ci="5" mb="2" cb="3"/><line nr="4795" mi="0" ci="3" mb="0" cb="0"/><line nr="4796" mi="0" ci="5" mb="0" cb="0"/><line nr="4798" mi="0" ci="1" mb="0" cb="0"/><line nr="4801" mi="0" ci="3" mb="0" cb="0"/><line nr="4802" mi="0" ci="5" mb="0" cb="0"/><line nr="4804" mi="0" ci="1" mb="0" cb="0"/><line nr="4807" mi="3" ci="0" mb="0" cb="0"/><line nr="4808" mi="5" ci="0" mb="0" cb="0"/><line nr="4810" mi="1" ci="0" mb="0" cb="0"/><line nr="4813" mi="0" ci="3" mb="0" cb="0"/><line nr="4814" mi="0" ci="5" mb="0" cb="0"/><line nr="4816" mi="0" ci="1" mb="0" cb="0"/><line nr="4818" mi="5" ci="0" mb="0" cb="0"/><line nr="4821" mi="1" ci="16" mb="1" cb="1"/><line nr="4824" mi="1" ci="0" mb="0" cb="0"/><line nr="4825" mi="3" ci="0" mb="0" cb="0"/><line nr="4826" mi="5" ci="0" mb="0" cb="0"/><line nr="4827" mi="5" ci="0" mb="0" cb="0"/><line nr="4830" mi="0" ci="2" mb="0" cb="0"/><line nr="4832" mi="0" ci="2" mb="0" cb="0"/><line nr="4838" mi="5" ci="0" mb="0" cb="0"/><line nr="4839" mi="5" ci="0" mb="0" cb="0"/><line nr="4840" mi="5" ci="0" mb="0" cb="0"/><line nr="4841" mi="5" ci="0" mb="0" cb="0"/><line nr="4842" mi="5" ci="0" mb="0" cb="0"/><line nr="4844" mi="0" ci="4" mb="0" cb="0"/><line nr="4845" mi="0" ci="1" mb="0" cb="0"/><line nr="4846" mi="2" ci="0" mb="0" cb="0"/><line nr="4849" mi="0" ci="7" mb="1" cb="1"/><line nr="4850" mi="0" ci="1" mb="0" cb="0"/><line nr="4853" mi="0" ci="7" mb="1" cb="1"/><line nr="4854" mi="0" ci="1" mb="0" cb="0"/><line nr="4858" mi="0" ci="8" mb="0" cb="0"/><line nr="4859" mi="0" ci="5" mb="0" cb="0"/><line nr="4861" mi="0" ci="4" mb="0" cb="0"/><line nr="4863" mi="0" ci="3" mb="0" cb="0"/><line nr="4864" mi="0" ci="5" mb="1" cb="5"/><line nr="4867" mi="0" ci="3" mb="0" cb="0"/><line nr="4868" mi="0" ci="5" mb="0" cb="0"/><line nr="4870" mi="0" ci="1" mb="0" cb="0"/><line nr="4873" mi="0" ci="3" mb="0" cb="0"/><line nr="4874" mi="0" ci="5" mb="0" cb="0"/><line nr="4876" mi="0" ci="1" mb="0" cb="0"/><line nr="4879" mi="0" ci="3" mb="0" cb="0"/><line nr="4880" mi="0" ci="5" mb="0" cb="0"/><line nr="4882" mi="0" ci="1" mb="0" cb="0"/><line nr="4885" mi="0" ci="3" mb="0" cb="0"/><line nr="4886" mi="0" ci="5" mb="0" cb="0"/><line nr="4888" mi="0" ci="1" mb="0" cb="0"/><line nr="4891" mi="0" ci="3" mb="0" cb="0"/><line nr="4892" mi="0" ci="5" mb="0" cb="0"/><line nr="4894" mi="0" ci="1" mb="0" cb="0"/><line nr="4896" mi="5" ci="0" mb="0" cb="0"/><line nr="4899" mi="1" ci="10" mb="1" cb="1"/><line nr="4902" mi="1" ci="0" mb="0" cb="0"/><line nr="4903" mi="3" ci="0" mb="0" cb="0"/><line nr="4904" mi="5" ci="0" mb="0" cb="0"/><line nr="4905" mi="5" ci="0" mb="0" cb="0"/><line nr="4908" mi="0" ci="2" mb="0" cb="0"/><line nr="4910" mi="0" ci="2" mb="0" cb="0"/><line nr="4916" mi="5" ci="0" mb="0" cb="0"/><line nr="4917" mi="5" ci="0" mb="0" cb="0"/><line nr="4918" mi="5" ci="0" mb="0" cb="0"/><line nr="4919" mi="5" ci="0" mb="0" cb="0"/><line nr="4921" mi="4" ci="0" mb="0" cb="0"/><line nr="4924" mi="6" ci="0" mb="0" cb="0"/><line nr="4927" mi="4" ci="0" mb="0" cb="0"/><line nr="4928" mi="1" ci="0" mb="0" cb="0"/><line nr="4929" mi="2" ci="0" mb="0" cb="0"/><line nr="4932" mi="7" ci="0" mb="2" cb="0"/><line nr="4933" mi="1" ci="0" mb="0" cb="0"/><line nr="4936" mi="7" ci="0" mb="2" cb="0"/><line nr="4937" mi="1" ci="0" mb="0" cb="0"/><line nr="4941" mi="8" ci="0" mb="0" cb="0"/><line nr="4942" mi="5" ci="0" mb="0" cb="0"/><line nr="4945" mi="4" ci="0" mb="0" cb="0"/><line nr="4947" mi="3" ci="0" mb="0" cb="0"/><line nr="4948" mi="4" ci="0" mb="0" cb="0"/><line nr="4949" mi="3" ci="0" mb="0" cb="0"/><line nr="4950" mi="4" ci="0" mb="0" cb="0"/><line nr="4951" mi="3" ci="0" mb="0" cb="0"/><line nr="4952" mi="4" ci="0" mb="0" cb="0"/><line nr="4953" mi="5" ci="0" mb="0" cb="0"/><line nr="4954" mi="12" ci="0" mb="4" cb="0"/><line nr="4957" mi="3" ci="0" mb="0" cb="0"/><line nr="4958" mi="4" ci="0" mb="0" cb="0"/><line nr="4959" mi="6" ci="0" mb="0" cb="0"/><line nr="4962" mi="3" ci="0" mb="0" cb="0"/><line nr="4963" mi="4" ci="0" mb="0" cb="0"/><line nr="4964" mi="6" ci="0" mb="0" cb="0"/><line nr="4966" mi="3" ci="0" mb="0" cb="0"/><line nr="4967" mi="4" ci="0" mb="0" cb="0"/><line nr="4968" mi="10" ci="0" mb="0" cb="0"/><line nr="4971" mi="1" ci="0" mb="0" cb="0"/><line nr="4972" mi="3" ci="0" mb="0" cb="0"/><line nr="4973" mi="5" ci="0" mb="0" cb="0"/><line nr="4974" mi="5" ci="0" mb="0" cb="0"/><line nr="4977" mi="2" ci="0" mb="0" cb="0"/><line nr="4979" mi="2" ci="0" mb="0" cb="0"/><line nr="4985" mi="0" ci="5" mb="0" cb="0"/><line nr="4986" mi="5" ci="0" mb="0" cb="0"/><line nr="4987" mi="5" ci="0" mb="0" cb="0"/><line nr="4988" mi="5" ci="0" mb="0" cb="0"/><line nr="4990" mi="4" ci="0" mb="0" cb="0"/><line nr="4993" mi="6" ci="0" mb="0" cb="0"/><line nr="4996" mi="0" ci="4" mb="0" cb="0"/><line nr="4997" mi="0" ci="1" mb="0" cb="0"/><line nr="4998" mi="2" ci="0" mb="0" cb="0"/><line nr="5001" mi="0" ci="7" mb="1" cb="1"/><line nr="5002" mi="0" ci="1" mb="0" cb="0"/><line nr="5005" mi="0" ci="7" mb="1" cb="1"/><line nr="5006" mi="0" ci="1" mb="0" cb="0"/><line nr="5010" mi="0" ci="8" mb="0" cb="0"/><line nr="5011" mi="0" ci="5" mb="0" cb="0"/><line nr="5014" mi="0" ci="4" mb="0" cb="0"/><line nr="5016" mi="0" ci="3" mb="0" cb="0"/><line nr="5017" mi="0" ci="4" mb="0" cb="0"/><line nr="5018" mi="0" ci="3" mb="0" cb="0"/><line nr="5019" mi="0" ci="4" mb="0" cb="0"/><line nr="5020" mi="0" ci="3" mb="0" cb="0"/><line nr="5021" mi="0" ci="4" mb="0" cb="0"/><line nr="5022" mi="0" ci="5" mb="0" cb="0"/><line nr="5023" mi="0" ci="12" mb="2" cb="2"/><line nr="5026" mi="3" ci="0" mb="0" cb="0"/><line nr="5027" mi="4" ci="0" mb="0" cb="0"/><line nr="5028" mi="6" ci="0" mb="0" cb="0"/><line nr="5031" mi="3" ci="0" mb="0" cb="0"/><line nr="5032" mi="4" ci="0" mb="0" cb="0"/><line nr="5033" mi="6" ci="0" mb="0" cb="0"/><line nr="5035" mi="0" ci="3" mb="0" cb="0"/><line nr="5036" mi="0" ci="4" mb="0" cb="0"/><line nr="5037" mi="3" ci="7" mb="0" cb="0"/><line nr="5040" mi="1" ci="0" mb="0" cb="0"/><line nr="5041" mi="3" ci="0" mb="0" cb="0"/><line nr="5042" mi="5" ci="0" mb="0" cb="0"/><line nr="5043" mi="5" ci="0" mb="0" cb="0"/><line nr="5046" mi="0" ci="2" mb="0" cb="0"/><line nr="5048" mi="0" ci="2" mb="0" cb="0"/><line nr="5056" mi="6" ci="0" mb="0" cb="0"/><line nr="5059" mi="6" ci="0" mb="0" cb="0"/><line nr="5062" mi="4" ci="0" mb="0" cb="0"/><line nr="5063" mi="1" ci="0" mb="0" cb="0"/><line nr="5064" mi="2" ci="0" mb="0" cb="0"/><line nr="5067" mi="7" ci="0" mb="2" cb="0"/><line nr="5068" mi="1" ci="0" mb="0" cb="0"/><line nr="5071" mi="7" ci="0" mb="2" cb="0"/><line nr="5072" mi="1" ci="0" mb="0" cb="0"/><line nr="5076" mi="8" ci="0" mb="0" cb="0"/><line nr="5077" mi="5" ci="0" mb="0" cb="0"/><line nr="5079" mi="3" ci="0" mb="0" cb="0"/><line nr="5080" mi="5" ci="0" mb="3" cb="0"/><line nr="5096" mi="4" ci="0" mb="0" cb="0"/><line nr="5098" mi="3" ci="0" mb="0" cb="0"/><line nr="5099" mi="4" ci="0" mb="0" cb="0"/><line nr="5100" mi="5" ci="0" mb="0" cb="0"/><line nr="5102" mi="1" ci="0" mb="0" cb="0"/><line nr="5104" mi="4" ci="0" mb="0" cb="0"/><line nr="5106" mi="3" ci="0" mb="0" cb="0"/><line nr="5107" mi="4" ci="0" mb="0" cb="0"/><line nr="5108" mi="20" ci="0" mb="2" cb="0"/><line nr="5110" mi="1" ci="0" mb="0" cb="0"/><line nr="5112" mi="5" ci="0" mb="0" cb="0"/><line nr="5115" mi="1" ci="0" mb="0" cb="0"/><line nr="5116" mi="3" ci="0" mb="0" cb="0"/><line nr="5117" mi="5" ci="0" mb="0" cb="0"/><line nr="5118" mi="5" ci="0" mb="0" cb="0"/><line nr="5121" mi="2" ci="0" mb="0" cb="0"/><line nr="5123" mi="2" ci="0" mb="0" cb="0"/><line nr="5132" mi="6" ci="0" mb="0" cb="0"/><line nr="5135" mi="6" ci="0" mb="0" cb="0"/><line nr="5137" mi="5" ci="0" mb="0" cb="0"/><line nr="5138" mi="5" ci="0" mb="0" cb="0"/><line nr="5139" mi="5" ci="0" mb="0" cb="0"/><line nr="5140" mi="5" ci="0" mb="0" cb="0"/><line nr="5141" mi="5" ci="0" mb="0" cb="0"/><line nr="5143" mi="0" ci="4" mb="0" cb="0"/><line nr="5144" mi="0" ci="1" mb="0" cb="0"/><line nr="5145" mi="2" ci="0" mb="0" cb="0"/><line nr="5148" mi="0" ci="7" mb="1" cb="1"/><line nr="5149" mi="0" ci="1" mb="0" cb="0"/><line nr="5152" mi="0" ci="7" mb="1" cb="1"/><line nr="5153" mi="0" ci="1" mb="0" cb="0"/><line nr="5157" mi="0" ci="8" mb="0" cb="0"/><line nr="5158" mi="0" ci="5" mb="0" cb="0"/><line nr="5160" mi="0" ci="3" mb="0" cb="0"/><line nr="5161" mi="0" ci="5" mb="7" cb="1"/><line nr="5163" mi="4" ci="0" mb="0" cb="0"/><line nr="5165" mi="3" ci="0" mb="0" cb="0"/><line nr="5166" mi="4" ci="0" mb="0" cb="0"/><line nr="5167" mi="5" ci="0" mb="0" cb="0"/><line nr="5169" mi="1" ci="0" mb="0" cb="0"/><line nr="5172" mi="4" ci="0" mb="0" cb="0"/><line nr="5174" mi="3" ci="0" mb="0" cb="0"/><line nr="5175" mi="4" ci="0" mb="0" cb="0"/><line nr="5176" mi="9" ci="0" mb="0" cb="0"/><line nr="5178" mi="1" ci="0" mb="0" cb="0"/><line nr="5180" mi="4" ci="0" mb="0" cb="0"/><line nr="5182" mi="3" ci="0" mb="0" cb="0"/><line nr="5183" mi="5" ci="0" mb="0" cb="0"/><line nr="5184" mi="9" ci="0" mb="0" cb="0"/><line nr="5186" mi="1" ci="0" mb="0" cb="0"/><line nr="5188" mi="4" ci="0" mb="0" cb="0"/><line nr="5190" mi="3" ci="0" mb="0" cb="0"/><line nr="5191" mi="5" ci="0" mb="0" cb="0"/><line nr="5192" mi="9" ci="0" mb="0" cb="0"/><line nr="5194" mi="1" ci="0" mb="0" cb="0"/><line nr="5196" mi="4" ci="0" mb="0" cb="0"/><line nr="5198" mi="3" ci="0" mb="0" cb="0"/><line nr="5199" mi="5" ci="0" mb="0" cb="0"/><line nr="5200" mi="9" ci="0" mb="0" cb="0"/><line nr="5202" mi="1" ci="0" mb="0" cb="0"/><line nr="5204" mi="4" ci="0" mb="0" cb="0"/><line nr="5206" mi="3" ci="0" mb="0" cb="0"/><line nr="5207" mi="5" ci="0" mb="0" cb="0"/><line nr="5208" mi="9" ci="0" mb="0" cb="0"/><line nr="5210" mi="1" ci="0" mb="0" cb="0"/><line nr="5212" mi="0" ci="4" mb="0" cb="0"/><line nr="5214" mi="0" ci="3" mb="0" cb="0"/><line nr="5215" mi="0" ci="5" mb="0" cb="0"/><line nr="5216" mi="0" ci="9" mb="0" cb="0"/><line nr="5218" mi="0" ci="1" mb="0" cb="0"/><line nr="5220" mi="5" ci="0" mb="0" cb="0"/><line nr="5223" mi="1" ci="0" mb="0" cb="0"/><line nr="5224" mi="3" ci="0" mb="0" cb="0"/><line nr="5225" mi="5" ci="0" mb="0" cb="0"/><line nr="5226" mi="5" ci="0" mb="0" cb="0"/><line nr="5229" mi="0" ci="2" mb="0" cb="0"/><line nr="5231" mi="0" ci="2" mb="0" cb="0"/><line nr="5239" mi="6" ci="0" mb="0" cb="0"/><line nr="5242" mi="6" ci="0" mb="0" cb="0"/><line nr="5245" mi="0" ci="4" mb="0" cb="0"/><line nr="5246" mi="0" ci="1" mb="0" cb="0"/><line nr="5247" mi="2" ci="0" mb="0" cb="0"/><line nr="5250" mi="0" ci="7" mb="1" cb="1"/><line nr="5251" mi="0" ci="1" mb="0" cb="0"/><line nr="5254" mi="0" ci="7" mb="1" cb="1"/><line nr="5255" mi="0" ci="1" mb="0" cb="0"/><line nr="5259" mi="0" ci="8" mb="0" cb="0"/><line nr="5260" mi="0" ci="5" mb="0" cb="0"/><line nr="5262" mi="0" ci="3" mb="0" cb="0"/><line nr="5263" mi="0" ci="5" mb="2" cb="1"/><line nr="5265" mi="4" ci="0" mb="0" cb="0"/><line nr="5267" mi="3" ci="0" mb="0" cb="0"/><line nr="5268" mi="4" ci="0" mb="0" cb="0"/><line nr="5269" mi="20" ci="0" mb="2" cb="0"/><line nr="5271" mi="1" ci="0" mb="0" cb="0"/><line nr="5273" mi="0" ci="4" mb="0" cb="0"/><line nr="5275" mi="0" ci="3" mb="0" cb="0"/><line nr="5276" mi="0" ci="4" mb="0" cb="0"/><line nr="5277" mi="1" ci="19" mb="1" cb="1"/><line nr="5279" mi="0" ci="1" mb="0" cb="0"/><line nr="5281" mi="5" ci="0" mb="0" cb="0"/><line nr="5284" mi="1" ci="0" mb="0" cb="0"/><line nr="5285" mi="3" ci="0" mb="0" cb="0"/><line nr="5286" mi="5" ci="0" mb="0" cb="0"/><line nr="5287" mi="5" ci="0" mb="0" cb="0"/><line nr="5290" mi="0" ci="2" mb="0" cb="0"/><line nr="5292" mi="0" ci="2" mb="0" cb="0"/><line nr="5305" mi="6" ci="0" mb="0" cb="0"/><line nr="5308" mi="6" ci="0" mb="0" cb="0"/><line nr="5311" mi="6" ci="0" mb="0" cb="0"/><line nr="5314" mi="6" ci="0" mb="0" cb="0"/><line nr="5317" mi="6" ci="0" mb="0" cb="0"/><line nr="5319" mi="5" ci="0" mb="0" cb="0"/><line nr="5320" mi="5" ci="0" mb="0" cb="0"/><line nr="5321" mi="5" ci="0" mb="0" cb="0"/><line nr="5322" mi="5" ci="0" mb="0" cb="0"/><line nr="5324" mi="6" ci="0" mb="0" cb="0"/><line nr="5326" mi="5" ci="0" mb="0" cb="0"/><line nr="5327" mi="5" ci="0" mb="0" cb="0"/><line nr="5329" mi="0" ci="4" mb="0" cb="0"/><line nr="5330" mi="0" ci="1" mb="0" cb="0"/><line nr="5331" mi="2" ci="0" mb="0" cb="0"/><line nr="5334" mi="0" ci="7" mb="1" cb="1"/><line nr="5335" mi="0" ci="1" mb="0" cb="0"/><line nr="5338" mi="0" ci="7" mb="1" cb="1"/><line nr="5339" mi="0" ci="1" mb="0" cb="0"/><line nr="5343" mi="0" ci="8" mb="0" cb="0"/><line nr="5344" mi="0" ci="5" mb="0" cb="0"/><line nr="5346" mi="0" ci="3" mb="0" cb="0"/><line nr="5347" mi="0" ci="5" mb="6" cb="7"/><line nr="5349" mi="0" ci="4" mb="0" cb="0"/><line nr="5351" mi="0" ci="3" mb="0" cb="0"/><line nr="5352" mi="0" ci="4" mb="0" cb="0"/><line nr="5353" mi="0" ci="5" mb="0" cb="0"/><line nr="5355" mi="0" ci="1" mb="0" cb="0"/><line nr="5357" mi="0" ci="4" mb="0" cb="0"/><line nr="5359" mi="0" ci="3" mb="0" cb="0"/><line nr="5360" mi="0" ci="4" mb="0" cb="0"/><line nr="5361" mi="0" ci="9" mb="0" cb="0"/><line nr="5363" mi="0" ci="1" mb="0" cb="0"/><line nr="5365" mi="0" ci="4" mb="0" cb="0"/><line nr="5367" mi="0" ci="3" mb="0" cb="0"/><line nr="5368" mi="0" ci="4" mb="0" cb="0"/><line nr="5369" mi="1" ci="19" mb="1" cb="1"/><line nr="5371" mi="0" ci="1" mb="0" cb="0"/><line nr="5373" mi="0" ci="4" mb="0" cb="0"/><line nr="5375" mi="0" ci="3" mb="0" cb="0"/><line nr="5376" mi="0" ci="4" mb="0" cb="0"/><line nr="5377" mi="1" ci="19" mb="1" cb="1"/><line nr="5379" mi="0" ci="1" mb="0" cb="0"/><line nr="5382" mi="0" ci="4" mb="0" cb="0"/><line nr="5384" mi="0" ci="3" mb="0" cb="0"/><line nr="5385" mi="0" ci="4" mb="0" cb="0"/><line nr="5386" mi="0" ci="9" mb="0" cb="0"/><line nr="5388" mi="0" ci="1" mb="0" cb="0"/><line nr="5390" mi="4" ci="0" mb="0" cb="0"/><line nr="5392" mi="3" ci="0" mb="0" cb="0"/><line nr="5393" mi="5" ci="0" mb="0" cb="0"/><line nr="5394" mi="9" ci="0" mb="0" cb="0"/><line nr="5396" mi="1" ci="0" mb="0" cb="0"/><line nr="5398" mi="4" ci="0" mb="0" cb="0"/><line nr="5400" mi="3" ci="0" mb="0" cb="0"/><line nr="5401" mi="5" ci="0" mb="0" cb="0"/><line nr="5402" mi="9" ci="0" mb="0" cb="0"/><line nr="5404" mi="1" ci="0" mb="0" cb="0"/><line nr="5406" mi="4" ci="0" mb="0" cb="0"/><line nr="5408" mi="3" ci="0" mb="0" cb="0"/><line nr="5409" mi="5" ci="0" mb="0" cb="0"/><line nr="5410" mi="9" ci="0" mb="0" cb="0"/><line nr="5412" mi="1" ci="0" mb="0" cb="0"/><line nr="5414" mi="0" ci="4" mb="0" cb="0"/><line nr="5416" mi="0" ci="3" mb="0" cb="0"/><line nr="5417" mi="0" ci="5" mb="0" cb="0"/><line nr="5418" mi="0" ci="9" mb="0" cb="0"/><line nr="5420" mi="0" ci="1" mb="0" cb="0"/><line nr="5424" mi="4" ci="0" mb="0" cb="0"/><line nr="5426" mi="3" ci="0" mb="0" cb="0"/><line nr="5427" mi="4" ci="0" mb="0" cb="0"/><line nr="5428" mi="9" ci="0" mb="0" cb="0"/><line nr="5430" mi="1" ci="0" mb="0" cb="0"/><line nr="5432" mi="4" ci="0" mb="0" cb="0"/><line nr="5434" mi="3" ci="0" mb="0" cb="0"/><line nr="5435" mi="5" ci="0" mb="0" cb="0"/><line nr="5436" mi="9" ci="0" mb="0" cb="0"/><line nr="5438" mi="1" ci="0" mb="0" cb="0"/><line nr="5440" mi="0" ci="4" mb="0" cb="0"/><line nr="5442" mi="0" ci="3" mb="0" cb="0"/><line nr="5443" mi="0" ci="5" mb="0" cb="0"/><line nr="5444" mi="0" ci="9" mb="0" cb="0"/><line nr="5446" mi="0" ci="1" mb="0" cb="0"/><line nr="5448" mi="5" ci="0" mb="0" cb="0"/><line nr="5451" mi="1" ci="0" mb="0" cb="0"/><line nr="5452" mi="3" ci="0" mb="0" cb="0"/><line nr="5453" mi="5" ci="0" mb="0" cb="0"/><line nr="5454" mi="5" ci="0" mb="0" cb="0"/><line nr="5457" mi="0" ci="2" mb="0" cb="0"/><line nr="5459" mi="0" ci="2" mb="0" cb="0"/><line nr="5463" mi="5" ci="0" mb="0" cb="0"/><line nr="5464" mi="5" ci="0" mb="0" cb="0"/><line nr="5465" mi="5" ci="0" mb="0" cb="0"/><line nr="5467" mi="4" ci="0" mb="0" cb="0"/><line nr="5468" mi="1" ci="0" mb="0" cb="0"/><line nr="5469" mi="2" ci="0" mb="0" cb="0"/><line nr="5472" mi="7" ci="0" mb="2" cb="0"/><line nr="5473" mi="1" ci="0" mb="0" cb="0"/><line nr="5476" mi="7" ci="0" mb="2" cb="0"/><line nr="5477" mi="1" ci="0" mb="0" cb="0"/><line nr="5481" mi="8" ci="0" mb="0" cb="0"/><line nr="5482" mi="5" ci="0" mb="0" cb="0"/><line nr="5485" mi="4" ci="0" mb="0" cb="0"/><line nr="5487" mi="3" ci="0" mb="0" cb="0"/><line nr="5488" mi="5" ci="0" mb="0" cb="0"/><line nr="5489" mi="12" ci="0" mb="4" cb="0"/><line nr="5490" mi="6" ci="0" mb="0" cb="0"/><line nr="5492" mi="3" ci="0" mb="0" cb="0"/><line nr="5496" mi="1" ci="0" mb="0" cb="0"/><line nr="5497" mi="3" ci="0" mb="0" cb="0"/><line nr="5498" mi="5" ci="0" mb="0" cb="0"/><line nr="5499" mi="5" ci="0" mb="0" cb="0"/><line nr="5502" mi="2" ci="0" mb="0" cb="0"/><line nr="5504" mi="2" ci="0" mb="0" cb="0"/><line nr="5781" mi="0" ci="4" mb="0" cb="0"/><line nr="5782" mi="0" ci="3" mb="0" cb="0"/><line nr="5784" mi="0" ci="4" mb="0" cb="0"/><line nr="5785" mi="0" ci="8" mb="0" cb="2"/><line nr="5786" mi="0" ci="10" mb="0" cb="0"/><line nr="5788" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4132" covered="8042"/><counter type="BRANCH" missed="309" covered="317"/><counter type="LINE" missed="995" covered="1714"/><counter type="COMPLEXITY" missed="678" covered="419"/><counter type="METHOD" missed="401" covered="355"/><counter type="CLASS" missed="11" covered="78"/></sourcefile><counter type="INSTRUCTION" missed="4422" covered="9912"/><counter type="BRANCH" missed="343" covered="355"/><counter type="LINE" missed="1044" covered="2013"/><counter type="COMPLEXITY" missed="754" covered="663"/><counter type="METHOD" missed="453" covered="587"/><counter type="CLASS" missed="11" covered="81"/></package><package name="Hoot/Compiler/Constants"><class name="Hoot/Compiler/Constants/LiteralCharacter" sourcefilename="LiteralCharacter.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralCharacter;" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Constants/LiteralSymbol" sourcefilename="LiteralSymbol.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralSymbol;" line="20"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="symbolize" desc="(Ljava/lang/String;)Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="37"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Constants/LiteralSource" sourcefilename="LiteralSource.java"><method name="emitArrayPrim" desc="(Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitArray" desc="(Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitNewArray" desc="(Ljava/util/List;)LHoot/Runtime/Emissions/Emission;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitNamedValue" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Emission;)LHoot/Runtime/Emissions/Emission;" line="20"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitScalar" desc="(Ljava/lang/String;Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="21"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitBoolean" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitInteger" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="23"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitSmall" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitLong" desc="(Ljava/lang/String;)LHoot/Runtime/Emissions/Emission;" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/ObjectArray" sourcefilename="ObjectArray.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(LHoot/Compiler/Constants/Constant;)V" line="19"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimized" desc="()LHoot/Compiler/Constants/LiteralArray;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="23"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitOperand$0" desc="(LHoot/Compiler/Constants/Constant;)LHoot/Runtime/Emissions/Emission;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Constants/LiteralArray" sourcefilename="LiteralArray.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withItems" desc="(Ljava/util/List;)LHoot/Compiler/Constants/LiteralArray;" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitArray" desc="()LHoot/Runtime/Emissions/Emission;" line="30"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="31"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$emitPrimitive$1" desc="(LHoot/Compiler/Constants/Constant;)LHoot/Runtime/Emissions/Emission;" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$emitArray$0" desc="(LHoot/Compiler/Constants/Constant;)LHoot/Runtime/Emissions/Emission;" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="27"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralBoolean" sourcefilename="LiteralBoolean.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralBoolean;" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="28"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="22"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/NamedValue" sourcefilename="NamedValue.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Item;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;LHoot/Runtime/Emissions/Item;)LHoot/Compiler/Constants/NamedValue;" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="name" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="itemValue" desc="()LHoot/Runtime/Emissions/Item;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalarValue" desc="()LHoot/Compiler/Constants/Scalar;" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitItem" desc="()LHoot/Runtime/Emissions/Emission;" line="27"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralString" sourcefilename="LiteralString.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralString;" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/Constant" sourcefilename="Constant.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLiteral" desc="()Z" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimizes" desc="(LHoot/Runtime/Faces/Selector;)Z" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralDecimal" sourcefilename="LiteralDecimal.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralDecimal;" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Constants/Scalar" sourcefilename="Scalar.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="18"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="description" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawValue" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="(Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="declaredType" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="31"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitScalar" desc="()LHoot/Runtime/Emissions/Emission;" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedType" desc="()Ljava/lang/Class;" line="37"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$resolvedType$0" desc="()Ljava/lang/Class;" line="37"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="26"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralRadical" sourcefilename="LiteralRadical.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralRadical;" line="14"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="Hoot/Compiler/Constants/LiteralNil" sourcefilename="LiteralNil.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralNil;" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredType" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="26"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralNumber" sourcefilename="LiteralNumber.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="17"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negate" desc="()V" line="20"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimizes" desc="(LHoot/Runtime/Faces/Selector;)Z" line="21"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="23"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="4"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralInteger" sourcefilename="LiteralInteger.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralInteger;" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredType" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitPrimitive" desc="()LHoot/Runtime/Emissions/Emission;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="24"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralCollection" sourcefilename="LiteralCollection.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;)V" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(LHoot/Runtime/Emissions/NamedItem;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optimizes" desc="(LHoot/Runtime/Faces/Selector;)Z" line="19"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralName" sourcefilename="LiteralName.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralName;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Ljava/lang/String;)LHoot/Compiler/Constants/LiteralName;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="literalSelf" desc="()LHoot/Compiler/Constants/LiteralName;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selfIsPrimary" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencesSelf" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencesSuper" desc="()Z" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencesLocal" desc="()Z" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencesMember" desc="()Z" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="faceHeritage" desc="()Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="referencedLocal" desc="()LHoot/Runtime/Values/Variable;" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referencedMember" desc="()LHoot/Runtime/Values/Variable;" line="46"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="typeResolver" desc="()LHoot/Runtime/Names/TypeName;" line="49"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitNamedValue" desc="(LHoot/Runtime/Values/Variable;)LHoot/Runtime/Emissions/Emission;" line="54"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emitOperand" desc="()LHoot/Runtime/Emissions/Emission;" line="57"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$referencedMember$5" desc="(LHoot/Runtime/Behaviors/Typified;)Z" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$referencedMember$4" desc="(LHoot/Runtime/Behaviors/Typified;)LHoot/Runtime/Values/Variable;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$referencedLocal$3" desc="(LHoot/Runtime/Behaviors/Scope;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$referencedLocal$2" desc="(LHoot/Runtime/Behaviors/Scope;)LHoot/Runtime/Values/Variable;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$referencesMember$1" desc="(LHoot/Runtime/Behaviors/Typified;)Z" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$referencesLocal$0" desc="(LHoot/Runtime/Behaviors/Scope;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="100"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="14" covered="16"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="Hoot/Compiler/Constants/LiteralFloat" sourcefilename="LiteralFloat.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Ljava/lang/String;I)LHoot/Compiler/Constants/LiteralFloat;" line="17"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodedValue" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveType" desc="()Ljava/lang/Class;" line="20"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="primitiveFactoryName" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedTypeName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="LiteralDecimal.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LiteralRadical.java"><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LiteralName.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="10" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="21" mb="0" cb="0"/><line nr="46" mi="20" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="2" cb="0"/><line nr="50" mi="7" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="1" cb="1"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="4" ci="3" mb="1" cb="1"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="100"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="14" covered="16"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralCharacter.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LiteralSource.java"><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="2"/><line nr="23" mi="4" ci="8" mb="1" cb="1"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralSymbol.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="5" ci="0" mb="0" cb="0"/><line nr="20" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="2" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="4" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="NamedValue.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="4" ci="12" mb="1" cb="1"/><counter type="INSTRUCTION" missed="4" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralInteger.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralBoolean.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="10" ci="0" mb="2" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="22"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralCollection.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="8" ci="0" mb="2" cb="0"/><line nr="21" mi="14" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="31" covered="3"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="4" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectArray.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LiteralNumber.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="2" cb="0"/><line nr="23" mi="14" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="35" covered="4"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralString.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Constant.java"><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralFloat.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="8" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Scalar.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="7" ci="0" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="26"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralNil.java"><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="20"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteralArray.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="10" ci="0" mb="2" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="27"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="579" covered="324"/><counter type="BRANCH" missed="38" covered="12"/><counter type="LINE" missed="108" covered="61"/><counter type="COMPLEXITY" missed="126" covered="59"/><counter type="METHOD" missed="105" covered="55"/><counter type="CLASS" missed="6" covered="12"/></package><counter type="INSTRUCTION" missed="8212" covered="16698"/><counter type="BRANCH" missed="833" covered="821"/><counter type="LINE" missed="1646" covered="3201"/><counter type="COMPLEXITY" missed="1462" covered="1509"/><counter type="METHOD" missed="845" covered="1271"/><counter type="CLASS" missed="19" covered="121"/></report>