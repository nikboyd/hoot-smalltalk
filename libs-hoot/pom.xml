<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://maven.apache.org/POM/4.0.0
        http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hoot-smalltalk</groupId>
    <artifactId>libs-hoot</artifactId>
    <version>2020.0101.0101</version>
    <packaging>jar</packaging>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/nikboyd/hoot-smalltalk/blob/main/LICENSE.txt</url>
        </license>
    </licenses>

    <parent>
        <groupId>hoot-smalltalk</groupId>
        <artifactId>hoot-smalltalk</artifactId>
        <version>2020</version>
    </parent>

    <properties>
        <api-module>libs-smalltalk</api-module>
        <api-classes>Smalltalk</api-classes>
        <api-class-path>../${api-module}/target/classes/${api-classes}</api-class-path>
    </properties>

    <dependencies>
        <dependency>
            <groupId>hoot-smalltalk</groupId>
            <artifactId>${api-module}</artifactId>
        </dependency>
        <dependency>
            <groupId>hoot-smalltalk</groupId>
            <artifactId>hoot-compiler</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/..</directory>
                <targetPath>META-INF</targetPath>
                <includes>
                    <include>LICENSE.txt</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/hoot</directory>
                <targetPath>META-INF/hoot-sources</targetPath>
                <includes>
                    <include>**/*.hoot</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.basedir}/src/test/hoot</directory>
                <targetPath>META-INF/test-sources</targetPath>
                <includes>
                    <include>**/*.hoot</include>
                </includes>
            </resource>
            <resource>
                <directory>target/site/jacoco</directory>
                <targetPath>resources/docs/${project.artifactId}</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>hoot-smalltalk</groupId>
                <artifactId>hoot-maven-plugin</artifactId>
                <configuration>
                    <packages>
                        <package>Hoot.Behaviors</package>
                        <package>Hoot.Magnitudes</package>
                        <package>Hoot.Exceptions</package>
                        <package>Hoot.Collections</package>
                        <package>Hoot.Geometry</package>
                        <package>Hoot.Streams</package>
                        <package>Hoot.Tests</package>
                        <package>Hoot.Tools</package>
                    </packages>
                </configuration>
                <executions>
                    <execution>
                        <goals><goal>generate</goal></goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven.compiler}</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals><goal>copy-resources</goal></goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${api-class-path}</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/classes/${api-classes}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven.surefire}</version>
                <configuration>
                    <argLine>@{argLine} ${test-args}</argLine>
                    <includes><include>**/*Test.java</include></includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.maven.jacoco}</version>
                <executions>
                    <execution><id>pre-unit-test</id>
                       <goals><goal>prepare-agent</goal></goals>
                    </execution>
                    <execution><id>post-unit-test</id>
                       <phase>test</phase>
                       <goals><goal>report</goal></goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>build-lib-badge</id>
                        <phase>test</phase>
                        <goals><goal>exec</goal></goals>
                        <configuration>
                            <executable>bash</executable>
                            <workingDirectory>${user.dir}</workingDirectory>
                            <arguments>
                                <argument>shell/build-cover-badge.sh</argument>
                                <argument>0</argument>
                                <argument>${project.artifactId}</argument>
                                <argument>library</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-mvn-badge</id>
                        <phase>test</phase>
                        <goals><goal>exec</goal></goals>
                        <configuration>
                            <executable>bash</executable>
                            <workingDirectory>${user.dir}</workingDirectory>
                            <arguments>
                                <argument>shell/build-mvn-badge.sh</argument>
                                <argument>0</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
