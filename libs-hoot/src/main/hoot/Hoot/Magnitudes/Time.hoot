@Notice :'Copyright 2010,2025 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

Java Lang System import.
Java Time Duration import.
Java Time LocalDateTime import.
Hoot Runtime Names Primitive import.
Smalltalk Magnitudes Scalar import.

Magnitude subclass: Time.
Time class members: "creating instances"
[
    Time! new [ ^Time basicNew ]
]

Time members:
[
    @Static @Primitive Duration! clockPrecision [ 
        Java Lang Long! now := System currentTimeMillis.
        ^Duration ofMillis: System currentTimeMillis - now ]

    @Static LocalDateTime! now [ ^LocalDateTime now ]
]

Time members: "knowing local time"
[
    LocalDateTime! localTime := Time now.
    LocalDateTime! localTime [ ^localTime ]
]

Time members: "comparing times"
[
    Boolean! = aTime [ ^Boolean from: (localTime = aTime localTime) ]
    @Primitive Boolean! < aTime [ ^Boolean from: (localTime isBefore: aTime localTime) ]
    @Primitive Boolean! > aTime [ ^Boolean from: (localTime isAfter:  aTime localTime) ]
]

Time members: "comparing with scalars"
[
    Boolean! = Magnitude! value [ ^(Time type accepts: value) and: [ self = (Time <- value) ] ]
    Boolean! <  Scalar! value [ ^(Time type accepts: value) and: [ self < (Time <- value) ] ]
    Boolean! >  Scalar! value [ ^(Time type accepts: value) and: [ self > (Time <- value) ] ]
]

Time members: "printing"
[
    @Static String! printTimeNow [ ^Time printTime: Time now ]
    @Static String! printTime: LocalDateTime! time [ ^String from: (Primitive printTime: time) ]
    @Static String! formatTime: LocalDateTime! time as: String! timeFormat [ 
        ^String from: (Primitive formatTime: time : timeFormat asPrimitive) ]
]
