@Notice :'Copyright 2010,2021 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

Smalltalk Core Subject import.
Smalltalk Core Posit import.
Smalltalk Magnitudes Scalar import.
Smalltalk Magnitudes Associated import.

Magnitude subclass: Associated! Association. "A key-value pair."

Association class members: []

Association members: "accessing values"
[
    "Refers to the key."
    @Property Object! key := nil.
    key: Subject! aKey [ key := Object <- aKey. ]

    "Refers to the value."
    @Property Object! value := nil.
    value: Subject! aValue [ value := Object <- aValue. ]

    key: Object! aKey value: Object! aValue [ key := aKey. value := aValue. ]
]

Association members: "creating instances"
[
    @Protected Association: Object! aKey : Object! aValue [
        key := aKey. value := aValue. ]

    @Static Association! withKey: Subject! aKey withValue: Subject! aValue [
        ^Association basicNew: Object <- aKey : Object <- aValue ]
]

Association members: "comparing"
[
    Java Lang Int! hashCode [ ^key hashCode ]

    Boolean! = Magnitude! value [
        ^(Association type accepts: value) and: [ self = (Association <- value) ] ]

    Boolean! < Scalar! value [
        ^(Association type accepts: value) and: [ self < (Association <- value) ] ]

    Boolean! = Association! assoc [
        ^(Association type accepts: assoc) and: 
            [ self key = assoc key and: [ self value = assoc value ] ] ]

    Boolean! < Association! assoc [
        ^(Association type accepts: assoc) and: [ self key < assoc key ] ]
]

Association members: "printing"
[
    Java Lang String! toString [ ^self printTerm primitiveString ]
    String! printString [ ^key printString , ' >> ' , value printString ]
]
