@Notice :'Copyright 2010,2025 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

TestBase subclass: LiteralsTest.
"Tests literals and their primitive conversions."

LiteralsTest members: [

    Array! testBlocks := #(
        '[ $x asPrimitive ]'
        '[ 10 asPrimitive ]'

        '[ 10.0  asPrimitive ]'
        '[ nil   asPrimitive ]'
        '[ true  asPrimitive ]'
        '[ false asPrimitive ]'

        '[ #testLiterals asPrimitive ]'
        '[ ''Hello World'' asPrimitive ]'

        '[ nil isBehavior ]'
        '[ nil isClass ]'
        '[ nil isMetaclass ]'
        '[ nil isArray ]'
        '[ nil isBoolean ]'
        '[ nil isCharacter ]'
        '[ nil isCollection ]'
        '[ nil isCharacter ]'
        '[ nil isInteger ]'
        '[ nil isSmallInteger ]'
        '[ nil isFloat ]'
        '[ nil isString ]'
        '[ nil isNil ]'
        '[ nil printString ]'

        '[ 5 isBehavior ]'
        '[ 5 isClass ]'
        '[ 5 isMetaclass ]'
        '[ 5 isArray ]'
        '[ 5 isBoolean ]'
        '[ 5 isCharacter ]'
        '[ 5 isCollection ]'
        '[ 5 isCharacter ]'
        '[ 5 isInteger ]'
        '[ 5 isSmallInteger ]'
        '[ 5 isFloat ]'
        '[ 5 isString ]'
        '[ 5 isNil ]'
        '[ 5 printString ]'
        ''
        '[ $0 asInteger ]'
        '[ $9 isLiteral ]'
        '[ $9 isDigit ]'
        '[ $c isLetter ]'
        '[ $e isVowel ]'
        '[ $c isCharacter ]'
        '[ $c isAlphaNumeric ]'
        '[ $c asUpperCase ]'
        '[ $C asLowerCase ]'
        '[ $c isLowerCase ]'
        '[ $c isUpperCase ]'
        ''
        '[ Hoot Magnitudes Character from: 33 ]'
        '[ Hoot Magnitudes Character type tab isCharacter ]'
        '[ Hoot Magnitudes Character type quote isCharacter ]'
        '[ Hoot Magnitudes Character type escape isCharacter ]'
        '[ Hoot Magnitudes Character type formFeed isCharacter ]'
        '[ Hoot Magnitudes Character type lineFeed isCharacter ]'
        '[ Hoot Magnitudes Character type backspace isCharacter ]'
        '[ Hoot Magnitudes Character type carriageReturn isCharacter ]'
    ).

    Void! runTest [ (TestableCode withAll: testBlocks) runTests. ]
]
