@Notice :'Copyright 2010,2024 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

TestBase subclass: OpsTest.
"Regression tests Smalltalk simple math operations."

OpsTest members:
[
    Array! testBlocks := #(
        '[ 5 + 6 ]'
        '[ 5 - 6 ]'
        '[ 5 * 6 ]'
        '[ 5 / 6 ]'
        '[ 5 % 6 ]'
        ''
        '[ 5 ** 30 ]'
        '[ (5 - 6) abs ]'
        '[ (5 / 6) rounded ]'
        '[ (5 / 6) reciprocal ]'
        '[ (5 / 6) + (6 / 5) ]'
        ''
        '[ 11.1234s5 + 5 ]'
        '[ 11.1234s5 + 3.14s4 ]'
        '[ 11.1234s5 - 3.14s4 ]'
        '[ 11.1234s5 * 3.14s4 ]'
        '[ 11.1234s5 / 3.14s4 ]'
        ''
        '[ $c < $f ]'
        '[ $c > $a ]'
        '[ $! in: (30 to: 35) ]'
        '[ $c > (Hoot Magnitudes Number <- 32) ]'
        '[ $! < (Hoot Magnitudes Number <- 34) ]'
        ''
        '[ 2.0 = 2.0 ]'
        '[ 2.0 > 3 ]'
        '[ 2.0 < 3 ]'
        '[ 2.0 - 3 ]'
        '[ 2.0 + 3 ]'
        '[ 2.0 * 3 ]'
        '[ 2.0 / 3 ]'
        '[ 2 asFloat = 2.0 ]'
        ''
        '[ Double type pi = 3 ]'
        '[ Double type pi > 3 ]'
        '[ Double type pi < 4 ]'
        '[ Double type pi - 3 ]'
        '[ Double type pi + 3 ]'
        '[ Double type pi * 3 ]'
        '[ Double type pi / 3 ]'
        '[ Double type pi = 3 asFloatD ]'
        '[ Double type pi > 3 asFloatD ]'
        '[ Double type pi < 4 asFloatD ]'
        ''
        '[ 5 asLongInteger + 7 ]'
        '[ 5 asLongInteger - 7 ]'
        '[ 5 asLongInteger * 7 ]'
        '[ 5 asLongInteger + 7 asLongInteger ]'
        '[ 5 asLongInteger - 7 asLongInteger ]'
        '[ 5 asLongInteger * 7 asLongInteger ]'
        '[ 5 asLongInteger + (Hoot Magnitudes Number <- 3) ]'
        '[ 5 asLongInteger * (Hoot Magnitudes Number <- 3) ]'
        ''
        '[ ( 12 / 4 ) asDecimal ]'
        '[ ( 127 / 40 ) asDecimal ]'
        '[ ( 1274 / 405 ) asDecimal ]'
        '[ ( 12742 / 4056 ) asDecimal ]'
        '[ ( 127424 / 40560 ) asDecimal ]'
        '[ ( 1274249 / 405606 ) asDecimal ]'
        '[ ( 12742492 / 4056061 ) asDecimal ]'
        '[ ( 127424922 / 40560612 ) asDecimal ]'
        ''
        '[ ( 1274249220 / 405606124 ) asDecimal ]'
        '[ ( 12742492206 / 4056061243 ) asDecimal ]'
        '[ ( 127424922065 / 40560612439 ) asDecimal ]'
        '[ ( 1274249220651 / 405606124395 ) asDecimal ]'
        '[ ( 12742492206511 / 4056061243952 ) asDecimal ]'
        '[ ( 127424922065116 / 40560612439525 ) asDecimal ]'
        '[ ( 1274249220651168 / 405606124395257 ) asDecimal ]'
        '[ ( 12742492206511680 / 4056061243952573 ) asDecimal ]'
    ).

    Void! runTest [ (TestableCode withAll: testBlocks) runTests. ]
]
