@Notice :'Copyright 2010,2025 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

TestBase subclass: MathsTest.
"Regression tests Smalltalk mathematics."

MathsTest members:
[
    Array! testBlocks := #(
        ''
        '[ 5 abs ]'
        '[ 5 rounded ]'
        '[ 5 factorial ]'
        '[ 5 even ]'
        '[ 5 odd ]'
        '[ 5 floor ]'
        '[ 5 ceiling ]'
        '[ 5 negated ]'
        '[ 5 codePoint negated ]'
        ''
        '[ 5 min: 6 ]'
        '[ 5 max: 6 ]'
        '[ 5 codePoint min: Scalar <- 6 ]'
        '[ 5 codePoint max: Scalar <- 6 ]'
        ''
        '[ 5 @ 6 ]'
        '[ 20 squared sqrt ]'
        ''
        '[ 5 codePoint equals: Magnitude <- 5 ]'
        '[ 5 codePoint lessThan: Scalar <- 6 ]'
        '[ 6 codePoint moreThan: Scalar <- 5 ]'
        ''
        '[ 11.1234s5 ]'
        '[ 11.1234s5 floor ]'
        '[ 11.1234s5 ceiling ]'
        ''
        '[ 2.0 negated ]'
        '[ 2.0 floor ]'
        '[ 2.0 ceiling ]'
        '[ 2.0 ln ]'
        '[ 2.0 exp ]'
        '[ 2.0 negative ]'
        '[ 2.0 positive ]'
        '[ 2.0 strictlyPositive ]'
        ''
        '[ Float type pi asFloat cos ]'
        '[ Float type pi asFloat sin ]'
        '[ Float type pi asFloat tan ]'
        '[ Float type pi asFloat arcCos ]'
        '[ Float type pi asFloat arcSin ]'
        '[ Float type pi asFloat arcTan ]'
        '[ Float type pi asFloat radiansToDegrees ]'
        '[ Float type pi asFloat degreesToRadians ]'
        ''
        '[ Double type pi cos ]'
        '[ Double type pi sin ]'
        '[ Double type pi tan ]'
        '[ Double type pi arcCos ]'
        '[ Double type pi arcSin ]'
        '[ Double type pi arcTan ]'
        '[ Double type pi radiansToDegrees ]'
        '[ Double type pi degreesToRadians ]'
        ''
        '[ Double type pi ln ]'
        '[ Double type pi exp ]'
        '[ Double type pi floor ]'
        '[ Double type pi negated ]'
        '[ Double type pi ceiling ]'
        '[ Double type pi negative ]'
        '[ Double type pi positive ]'
        '[ Double type pi strictlyPositive ]'
        ''
        '[ Double type e ]'
        '[ Double type emax ]'
        '[ Double type emin ]'
        '[ Double type fmax ]'
        '[ Double type fmin ]'
        '[ Double type zero ]'
        '[ Double type unity ]'
        '[ Double type epsilon ]'
        '[ Double type fminNormalized ]'
        '[ Double type fminDenormalized ]'
    ).

    Void! runTest [ (TestableCode withAll: testBlocks) runTests. ]
]
