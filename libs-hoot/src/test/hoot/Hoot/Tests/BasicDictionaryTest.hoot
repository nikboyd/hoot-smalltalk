@Notice :'Copyright 2010,2021 Nikolas S Boyd.
Permission is granted to copy this work provided this copyright statement is retained in all copies.
'!

Hoot Magnitudes Integer import.
Hoot Magnitudes SmallInteger importStatics.
Hoot Collections Dictionary import.

TestBase subclass: BasicDictionaryTest. "dictionary regression tests"
BasicDictionaryTest members: "testing dictionary"
[
    Array! sample := #( 5 4 3 2 1 ).
    Dictionary! d := Dictionary new.

    @Static @Final String! ValueReport := 'key %s = %s'. "note BUG! = quote count at end when doubled"
    String! formatKey: key value: value [ ^ValueReport formatWith: key printString : value printString ]
    reportKey: key value: value [ self log printLine: (self formatKey: key value: value). ]
    reportDic: Dictionary! d [ d keysAndValuesDo: [ :key :value | self reportKey: key value: value ]. ]

    Void! runTest [
        self log print: 'dictionary = '.
        sample do: [ :each | d at: each printString put: each ]. "1st fill d"
        self assertTrue: [ self log printLine: 'sampled'. ^d size == sample size ].

        self reportDic: d.
        self passed: 'dictionary key-value test'.

        d associationsDo: [ :Association! assoc | self assertTrue: [ ^sample includes: assoc value ]. ].
        self passed: 'dictionary associates test'.

        d valuesDo: [ :v | self assertTrue: [ ^sample includes: v ]. ].
        self passed: 'dictionary values test'.

        d keysDo: [ :String! k | self assertTrue: [ ^sample includes: k toInteger ]. ].
        self passed: 'dictionary keys test'.

        d associationsDo: [ :Association! assoc | 
            a := (assoc key associateWith: assoc value).
            self assertTrue: [ ^a = assoc ].
        ].
        self passed: 'full associates test'.

        Dictionary! done := Dictionary type withAll: d.
        self reportDic: done.
        self passed: 'copy dictionary test'.

        done := Dictionary type synchronizedFrom: d primitiveContents.
        self reportDic: done.
        self passed: 'copy sync prim dictionary test'.

        done := Dictionary type from: d primitiveContents.
        self reportDic: done.
        self passed: 'copy prim dictionary test'.

        self report: 'done keyAtValue: 5 = ', (done keyAtValue: 5) printString.
        self report: 'done at: 5 = ', (done at: '5') printString.
    ]
]
